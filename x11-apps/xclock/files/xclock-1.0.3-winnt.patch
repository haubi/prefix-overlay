diff -ru -x '*.Po' -x '*.Plo' xclock-1.0.3.orig/Clock.c xclock-1.0.3/Clock.c
--- xclock-1.0.3.orig/Clock.c	2009-01-21 12:09:06 +0100
+++ xclock-1.0.3/Clock.c	2009-01-21 12:10:00 +0100
@@ -89,6 +89,26 @@
 # include "config.h"
 #endif
 
+#if !defined(NO_I18N) && defined(HAVE_ICONV)
+#include <iconv.h>
+#include <langinfo.h>
+#include <errno.h>
+#include <limits.h>
+#endif
+
+#include <time.h>
+#define Time_t time_t
+
+#ifndef NO_I18N
+#include <stdlib.h> /* for getenv() */
+#include <locale.h>
+extern Boolean no_locale; /* if True, use old (unlocalized) behaviour */
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/Xlib.h>
 #include <X11/StringDefs.h>
 #include <X11/IntrinsicP.h>
@@ -97,32 +117,15 @@
 #include <stdio.h>
 #include <X11/Xos.h>
 #include <X11/Xaw/XawInit.h>
-#if !defined(NO_I18N) && defined(HAVE_ICONV)
-#include <iconv.h>
-#include <langinfo.h>
-#include <errno.h>
-#include <limits.h>
-#endif
-
 #if defined(XawVersion) && (XawVersion >= 7000002L)
 #define USE_XAW_PIXMAP_CVT
 #else
 #include <X11/xpm.h>
 #endif
 
-#include <time.h>
-#define Time_t time_t
-
 #ifdef XKB
 #include <X11/extensions/XKBbells.h>
 #endif
-
-#ifndef NO_I18N
-#include <stdlib.h> /* for getenv() */
-#include <locale.h>
-extern Boolean no_locale; /* if True, use old (unlocalized) behaviour */
-#endif
-
 	
 /* Private Definitions */
 
@@ -215,7 +218,7 @@
 #undef goffset
 
 static void ClassInitialize ( void );
-static void Initialize ( Widget request, Widget new, ArgList args, 
+static void Initialize ( Widget request, Widget _new, ArgList args, 
 			 Cardinal *num_args );
 static void Realize ( Widget gw, XtValueMask *valueMask, 
 		      XSetWindowAttributes *attrs );
@@ -234,7 +237,7 @@
 static void SetSeg ( ClockWidget w, int x1, int y1, int x2, int y2 );
 static void DrawClockFace ( ClockWidget w );
 static int clock_round ( double x );
-static Boolean SetValues ( Widget gcurrent, Widget grequest, Widget gnew, 
+static Boolean SetValues ( Widget gcurrent, Widget grequest, Widget g_new, 
 			   ArgList args, Cardinal *num_args );
 #if !defined(NO_I18N) && defined(HAVE_ICONV)
 static char *clock_to_utf8(const char *);
@@ -577,9 +580,9 @@
 
 /* ARGSUSED */
 static void 
-Initialize (Widget request, Widget new, ArgList args, Cardinal *num_args)
+Initialize (Widget request, Widget _new, ArgList args, Cardinal *num_args)
 {
-    ClockWidget w = (ClockWidget)new;
+    ClockWidget w = (ClockWidget)_new;
     XtGCMask		valuemask;
     XGCValues	myXGCV;
     int min_height, min_width;
@@ -1309,7 +1312,7 @@
 #ifdef XRENDER
 	    if (w->clock.render)
 	    {
-		XRectangle  old_tail, new_tail, head;
+		XRectangle  old_tail, _new, head;
 		int	    x, y;
 #if !defined(NO_I18N) && defined(HAVE_ICONV)
 		char *utf8_str;
@@ -1319,8 +1322,8 @@
 				  &old_tail, 0, 0);
 		RenderUpdateRectBounds (&old_tail, &w->clock.damage);
 		RenderTextBounds (w, time_ptr, i, len,
-				  &new_tail, 0, 0);
-		RenderUpdateRectBounds (&new_tail, &w->clock.damage);
+				  &_new, 0, 0);
+		RenderUpdateRectBounds (&_new, &w->clock.damage);
 		
 		while (i)
 		{
@@ -1329,7 +1332,7 @@
 			break;
 		    i--;
 		}
-		RenderTextBounds (w, time_ptr, i, len, &new_tail, &x, &y);
+		RenderTextBounds (w, time_ptr, i, len, &_new, &x, &y);
 		RenderClip (w);
 		RenderPrepare (w, 0);
 #ifndef NO_I18N
@@ -1972,23 +1975,23 @@
 
 #ifdef XRENDER
 static Boolean
-sameColor (XftColor *old, XftColor *new)
+sameColor (XftColor *old, XftColor *_new)
 {
-    if (old->color.red != new->color.red) return False;
-    if (old->color.green != new->color.green) return False;
-    if (old->color.blue != new->color.blue) return False;
-    if (old->color.alpha != new->color.alpha) return False;
+    if (old->color.red != _new->color.red) return False;
+    if (old->color.green != _new->color.green) return False;
+    if (old->color.blue != _new->color.blue) return False;
+    if (old->color.alpha != _new->color.alpha) return False;
     return True;
 }
 #endif
 
 /* ARGSUSED */
 static Boolean 
-SetValues(Widget gcurrent, Widget grequest, Widget gnew, 
+SetValues(Widget gcurrent, Widget grequest, Widget g_new, 
 	  ArgList args, Cardinal *num_args)
 {
       ClockWidget current = (ClockWidget) gcurrent;
-      ClockWidget new = (ClockWidget) gnew;
+      ClockWidget _new = (ClockWidget) g_new;
       Boolean redisplay = FALSE;
       XtGCMask valuemask;
       XGCValues	myXGCV;
@@ -1996,100 +1999,100 @@
       /* first check for changes to clock-specific resources.  We'll accept all
          the changes, but may need to do some computations first. */
 
-      if (new->clock.update != current->clock.update) {
+      if (_new->clock.update != current->clock.update) {
 	  if (current->clock.interval_id)
 	      XtRemoveTimeOut (current->clock.interval_id);
-	  if (XtIsRealized( (Widget) new))
-	      new->clock.interval_id = XtAppAddTimeOut( 
-                                         XtWidgetToApplicationContext(gnew),
-					 new->clock.update*1000,
-				         clock_tic, (XtPointer)gnew);
+	  if (XtIsRealized( (Widget) _new))
+	      _new->clock.interval_id = XtAppAddTimeOut( 
+                                         XtWidgetToApplicationContext(g_new),
+					 _new->clock.update*1000,
+				         clock_tic, (XtPointer)g_new);
 
-	  new->clock.show_second_hand =(new->clock.update <= SECOND_HAND_TIME);
-	  if (new->clock.show_second_hand != current->clock.show_second_hand)
+	  _new->clock.show_second_hand =(_new->clock.update <= SECOND_HAND_TIME);
+	  if (_new->clock.show_second_hand != current->clock.show_second_hand)
 	    redisplay = TRUE;
       }
 
-      if (new->clock.padding != current->clock.padding)
+      if (_new->clock.padding != current->clock.padding)
 	   redisplay = TRUE;
 
-      if (new->clock.analog != current->clock.analog)
+      if (_new->clock.analog != current->clock.analog)
 	   redisplay = TRUE;
 
-       if (new->clock.font != current->clock.font)
+       if (_new->clock.font != current->clock.font)
 	   redisplay = TRUE;
 
 #ifndef NO_I18N
-       if (new->clock.fontSet != current->clock.fontSet)
+       if (_new->clock.fontSet != current->clock.fontSet)
 	   redisplay = TRUE;
 #endif
 
-      if ((ClockFgPixel(new) != ClockFgPixel (current))
-          || (new->core.background_pixel != current->core.background_pixel)) {
+      if ((ClockFgPixel(_new) != ClockFgPixel (current))
+          || (_new->core.background_pixel != current->core.background_pixel)) {
           valuemask = GCForeground | GCBackground | GCFont | GCLineWidth;
-	  myXGCV.foreground = ClockFgPixel (new);
-	  myXGCV.background = new->core.background_pixel;
-          myXGCV.font = new->clock.font->fid;
+	  myXGCV.foreground = ClockFgPixel (_new);
+	  myXGCV.background = _new->core.background_pixel;
+          myXGCV.font = _new->clock.font->fid;
 	  myXGCV.line_width = 0;
 	  XtReleaseGC (gcurrent, current->clock.myGC);
-	  new->clock.myGC = XtGetGC(gcurrent, valuemask, &myXGCV);
+	  _new->clock.myGC = XtGetGC(gcurrent, valuemask, &myXGCV);
 	  redisplay = TRUE;
           }
 
-      if (new->clock.Hipixel != current->clock.Hipixel) {
+      if (_new->clock.Hipixel != current->clock.Hipixel) {
           valuemask = GCForeground | GCLineWidth;
-	  myXGCV.foreground = new->clock.Hipixel;
-          myXGCV.font = new->clock.font->fid;
+	  myXGCV.foreground = _new->clock.Hipixel;
+          myXGCV.font = _new->clock.font->fid;
 	  myXGCV.line_width = 0;
 	  XtReleaseGC (gcurrent, current->clock.HighGC);
-	  new->clock.HighGC = XtGetGC((Widget)gcurrent, valuemask, &myXGCV);
+	  _new->clock.HighGC = XtGetGC((Widget)gcurrent, valuemask, &myXGCV);
 	  redisplay = TRUE;
           }
 
-      if (new->clock.Hdpixel != current->clock.Hdpixel) {
+      if (_new->clock.Hdpixel != current->clock.Hdpixel) {
           valuemask = GCForeground;
-	  myXGCV.foreground = new->clock.Hdpixel;
+	  myXGCV.foreground = _new->clock.Hdpixel;
 	  XtReleaseGC (gcurrent, current->clock.HandGC);
-	  new->clock.HandGC = XtGetGC((Widget)gcurrent, valuemask, &myXGCV);
+	  _new->clock.HandGC = XtGetGC((Widget)gcurrent, valuemask, &myXGCV);
 	  redisplay = TRUE;
           }
 
-      if (new->core.background_pixel != current->core.background_pixel) {
+      if (_new->core.background_pixel != current->core.background_pixel) {
           valuemask = GCForeground | GCLineWidth | GCGraphicsExposures;
-	  myXGCV.foreground = new->core.background_pixel;
+	  myXGCV.foreground = _new->core.background_pixel;
 	  myXGCV.line_width = 0;
 	  myXGCV.graphics_exposures = False;
 	  XtReleaseGC (gcurrent, current->clock.EraseGC);
-	  new->clock.EraseGC = XtGetGC((Widget)gcurrent, valuemask, &myXGCV);
+	  _new->clock.EraseGC = XtGetGC((Widget)gcurrent, valuemask, &myXGCV);
 	  redisplay = TRUE;
 	  }
 #ifdef XRENDER
-     if (new->clock.face != current->clock.face)
+     if (_new->clock.face != current->clock.face)
 	redisplay = TRUE;
-     if (!sameColor (&new->clock.hour_color, &current->clock.fg_color) ||
-	 !sameColor (&new->clock.hour_color, &current->clock.hour_color) ||
-	 !sameColor (&new->clock.min_color, &current->clock.min_color) ||
-	 !sameColor (&new->clock.sec_color, &current->clock.sec_color) ||
-	 !sameColor (&new->clock.major_color, &current->clock.major_color) ||
-	 !sameColor (&new->clock.minor_color, &current->clock.minor_color))
+     if (!sameColor (&_new->clock.hour_color, &current->clock.fg_color) ||
+	 !sameColor (&_new->clock.hour_color, &current->clock.hour_color) ||
+	 !sameColor (&_new->clock.min_color, &current->clock.min_color) ||
+	 !sameColor (&_new->clock.sec_color, &current->clock.sec_color) ||
+	 !sameColor (&_new->clock.major_color, &current->clock.major_color) ||
+	 !sameColor (&_new->clock.minor_color, &current->clock.minor_color))
 	redisplay = True;
-    if (new->clock.sharp != current->clock.sharp)
+    if (_new->clock.sharp != current->clock.sharp)
 	redisplay = True;
-    if (new->clock.render != current->clock.render)
+    if (_new->clock.render != current->clock.render)
 	redisplay = True;
-    if (new->clock.buffer != current->clock.buffer)
+    if (_new->clock.buffer != current->clock.buffer)
     {
-	if (new->clock.pixmap)
+	if (_new->clock.pixmap)
 	{
-	    XFreePixmap (XtDisplay (new), new->clock.pixmap);
-	    new->clock.pixmap = 0;
+	    XFreePixmap (XtDisplay (_new), _new->clock.pixmap);
+	    _new->clock.pixmap = 0;
 	}
-	if (new->clock.draw)
+	if (_new->clock.draw)
 	{
-	    XftDrawDestroy (new->clock.draw);
-	    new->clock.draw = 0;
+	    XftDrawDestroy (_new->clock.draw);
+	    _new->clock.draw = 0;
 	}
-	new->clock.picture = 0;
+	_new->clock.picture = 0;
     }
 #endif
      return (redisplay);
@@ -2143,3 +2146,8 @@
     return buf;
 }
 #endif
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' xclock-1.0.3.orig/configure.ac xclock-1.0.3/configure.ac
--- xclock-1.0.3.orig/configure.ac	2009-01-21 12:09:06 +0100
+++ xclock-1.0.3/configure.ac	2009-01-21 12:08:05 +0100
@@ -38,7 +38,7 @@
 
 dnl Required dependencies
 PKG_CHECK_MODULES(XCLOCK_X11, x11)
-XAW_CHECK_XPRINT_SUPPORT(XAW)
+PKG_CHECK_MODULES(XAW, xaw7)
 XCLOCK_CFLAGS="$XCLOCK_X11_CFLAGS $XAW_CFLAGS"
 XCLOCK_LIBS="$XCLOCK_X11_LIBS $XAW_LIBS"
 
diff -ru -x '*.Po' -x '*.Plo' xclock-1.0.3.orig/xclock.c xclock-1.0.3/xclock.c
--- xclock-1.0.3.orig/xclock.c	2009-01-21 12:09:06 +0100
+++ xclock-1.0.3/xclock.c	2009-01-21 13:25:42 +0100
@@ -39,6 +39,20 @@
 
 #include <stdio.h>
 #include <stdlib.h>
+
+#ifndef NO_I18N
+#include <locale.h> /* for setlocale() */
+Boolean no_locale = True; /* if True, use old behavior */
+#endif
+
+#ifdef HAVE_GETPID
+# include <unistd.h>
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/Xatom.h>
 #include <X11/Intrinsic.h>
 #include <X11/StringDefs.h>
@@ -52,15 +66,6 @@
 #include <X11/extensions/XKBbells.h>
 #endif
 
-#ifndef NO_I18N
-#include <locale.h> /* for setlocale() */
-Boolean no_locale = True; /* if True, use old behavior */
-#endif
-
-#ifdef HAVE_GETPID
-# include <unistd.h>
-#endif
-
 /* Command line options table.  Only resources are entered here...there is a
    pass over the remaining options after XtParseCommand is let loose. */
 
@@ -226,3 +231,8 @@
     XtAppMainLoop (app_con);
     exit(0);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
