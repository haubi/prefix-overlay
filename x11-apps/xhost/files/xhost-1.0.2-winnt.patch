diff -ru -x '*.Po' -x '*.Plo' xhost-1.0.2.orig/xhost.c xhost-1.0.2/xhost.c
--- xhost-1.0.2.orig/xhost.c	2008-09-25 16:40:34 +0200
+++ xhost-1.0.2/xhost.c	2008-09-25 16:59:58 +0200
@@ -67,6 +67,9 @@
 #include <stdlib.h>
 
 #ifdef NEEDSOCKETS
+#ifdef WIN32
+# include <X11/Xwinsock.h>
+#else
 #ifdef att
 typedef unsigned short unsign16;
 typedef unsigned long unsign32;
@@ -84,10 +87,13 @@
 #include <netdb.h>
 #include <netinet/in.h>
 #endif
+#endif /* WIN32 */
 #endif /* NEEDSOCKETS */
 
 #ifndef BAD_ARPAINET
+#ifndef WIN32
 #include <arpa/inet.h>
+#endif
 #else
 /* bogus definition of inet_makeaddr() in BSD 4.2 and Ultrix */
 extern unsigned long inet_makeaddr();
@@ -177,6 +183,14 @@
 
 Display *dpy;
 
+#if defined(__CYGWIN__) || defined(WIN32)
+void sethostent(int x)
+{}
+
+void endhostent()
+{}
+#endif
+
 int
 main(int argc, char *argv[])
 {
@@ -804,6 +818,7 @@
 	   gethostbyaddr will continue after a signal, so we have to
 	   jump out of it. 
 	   */
+#ifndef WIN32
 #ifndef X_NOT_POSIX
 	memset(&sa, 0, sizeof sa);
 	sa.sa_handler = nameserver_lost;
@@ -813,6 +828,7 @@
 	signal(SIGALRM, nameserver_lost);
 #endif
 	alarm(4);
+#endif /* WIN32 */
 #ifdef X_NOT_POSIX
 	if (setjmp(env) == 0) {
 #endif
@@ -820,7 +836,9 @@
 #ifdef X_NOT_POSIX
 	}
 #endif
+#ifndef WIN32
 	alarm(0);
+#endif
 	if (hp)
 	    return (hp->h_name);
 	else return (inet_ntoa(*((struct in_addr *)(ha->address))));
@@ -952,11 +970,3 @@
     return 0;
 }
 
-#ifdef __CYGWIN__
-void sethostent(int x)
-{}
-
-void endhostent()
-{}
-#endif
-
