diff -ru -x '*.Po' -x '*.Plo' oclock-1.0.1.orig/Clock.c oclock-1.0.1/Clock.c
--- oclock-1.0.1.orig/Clock.c	2009-01-29 14:37:36 +0100
+++ oclock-1.0.1/Clock.c	2009-01-29 14:43:02 +0100
@@ -31,17 +31,22 @@
  * a NeWS clone clock
  */
 
+#include <stdio.h>
+#include <stdlib.h>
+#include <math.h>
+#include <time.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xmu/Converters.h>
 #include "ClockP.h"
 #include <X11/Xos.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include <math.h>
 #include <X11/extensions/shape.h>
 
-#include <time.h>
 #define Time_t time_t
 
 #define offset(field) XtOffsetOf(ClockRec, clock.field)
@@ -139,10 +144,7 @@
 WidgetClass clockWidgetClass = (WidgetClass) &clockClassRec;
 
 /* ARGSUSED */
-static void Initialize (greq, gnew, args, num_args)
-    Widget greq, gnew;
-    ArgList args;
-    Cardinal *num_args;
+static void Initialize (Widget greq, Widget gnew, ArgList args, Cardinal *num_args)
 {
     ClockWidget w = (ClockWidget)gnew;
     XtGCMask	valuemask;
@@ -184,8 +186,7 @@
     w->clock.polys_valid = 0;
 }
 
-static void Resize (widget)
-    Widget	widget;
+static void Resize (Widget widget)
 {
     ClockWidget	w = (ClockWidget) widget;
     XGCValues	xgcv;
@@ -345,10 +346,7 @@
     }
 }
  
-static void Realize (gw, valueMask, attrs)
-     Widget gw;
-     XtValueMask *valueMask;
-     XSetWindowAttributes *attrs;
+static void Realize (Widget gw, XtValueMask *valueMask, XSetWindowAttributes *attrs)
 {
      ClockWidget	w = (ClockWidget)gw;
 
@@ -369,8 +367,7 @@
     new_time ((XtPointer) gw, 0);
 }
 
-static void Destroy (gw)
-     Widget gw;
+static void Destroy (Widget gw)
 {
      ClockWidget w = (ClockWidget)gw;
      if (w->clock.interval_id) XtRemoveTimeOut (w->clock.interval_id);
@@ -387,10 +384,7 @@
 }
 
 /* ARGSUSED */
-static void Redisplay(gw, event, region)
-     Widget gw;
-     XEvent *event;
-     Region region;
+static void Redisplay(Widget gw, XEvent *event, Region region)
 {
     ClockWidget	w;
 
@@ -417,8 +411,7 @@
  */
 
 static double
-clock_to_angle (clock)
-double	clock;
+clock_to_angle (double clock)
 {
 	if (clock >= .75)
 		clock -= 1.0;
@@ -426,9 +419,7 @@
 }
 
 /* ARGSUSED */
-static void new_time (client_data, id)
-     XtPointer client_data;
-     XtIntervalId *id;		/* unused */
+static void new_time (XtPointer client_data, XtIntervalId *id)
 {
         ClockWidget	w = (ClockWidget)client_data;
 	Time_t		now;
@@ -463,10 +454,7 @@
 } /* new_time */
 
 void
-paint_jewel (w, d, gc)
-ClockWidget w;
-Drawable    d;
-GC	    gc;
+paint_jewel (ClockWidget w, Drawable d, GC gc)
 {
     if (JEWEL_SIZE(w) > 0.0)
     {
@@ -483,9 +471,7 @@
  * check to see if the polygon intersects the circular jewel
  */
 int
-check_jewel_poly (w, poly)
-ClockWidget	w;
-TPoint		poly[POLY_SIZE];
+check_jewel_poly (ClockWidget w, TPoint *poly)
 {
     double	a2, b2, c2, d2;
     double	x, y, size;
@@ -517,10 +503,7 @@
 }
 
 void
-check_jewel (w, d, gc)
-ClockWidget	w;
-Drawable	d;
-GC		gc;
+check_jewel (ClockWidget w, Drawable d, GC gc)
 {
 	if (!w->clock.polys_valid || JEWEL_SIZE(w) <= 0.0)
 		return;
@@ -538,10 +521,7 @@
  * This is represented with a five sided polygon.
  */
 void
-compute_hand (w, a, l, width, poly)
-ClockWidget	w;
-double		a, l, width;
-TPoint		poly[POLY_SIZE];
+compute_hand (ClockWidget w, double a, double l, double width, TPoint* poly)
 {
 	double	c, s;
 
@@ -562,8 +542,7 @@
 }
 
 void
-compute_hands (w)
-ClockWidget	w;
+compute_hands (ClockWidget w)
 {
 	compute_hand (w, w->clock.minute_angle,
 		MINUTE_LENGTH(w), MINUTE_WIDTH(w), w->clock.minute_poly);
@@ -573,24 +552,21 @@
 }
 
 void
-paint_hand (w, d, gc, poly)
-ClockWidget	w;
-Drawable	d;
-GC		gc;
-TPoint		poly[POLY_SIZE];
+paint_hand (ClockWidget w, Drawable d, GC gc, TPoint* poly)
 {
 	TFillPolygon (XtDisplay (w), d, gc, &w->clock.t, poly, POLY_SIZE,
 			Convex, CoordModeOrigin);
 }
 
 void
-paint_hands (w, d, minute_gc, hour_gc)
-ClockWidget	w;
-Drawable	d;
-GC		minute_gc, hour_gc;
+paint_hands (ClockWidget w, Drawable d, GC minute_gc, GC hour_gc)
 {
     if (w->clock.polys_valid) {
 	paint_hand (w, d, hour_gc, w->clock.hour_poly);
 	paint_hand (w, d, minute_gc, w->clock.minute_poly);
     }
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
diff -ru -x '*.Po' -x '*.Plo' oclock-1.0.1.orig/Clock.h oclock-1.0.1/Clock.h
--- oclock-1.0.1.orig/Clock.h	2009-01-29 14:37:36 +0100
+++ oclock-1.0.1/Clock.h	2009-01-29 14:44:48 +0100
@@ -72,6 +72,5 @@
 
 extern WidgetClass clockWidgetClass;
 
-
 #endif /* _XtClock_h */
 /* DON'T ADD STUFF AFTER THIS #endif */
diff -ru -x '*.Po' -x '*.Plo' oclock-1.0.1.orig/oclock.c oclock-1.0.1/oclock.c
--- oclock-1.0.1.orig/oclock.c	2009-01-29 14:37:37 +0100
+++ oclock-1.0.1/oclock.c	2009-01-29 14:46:07 +0100
@@ -25,14 +25,19 @@
  */
 /* $XFree86: xc/programs/oclock/oclock.c,v 1.7tsi Exp $ */
 
+#include <stdio.h> 
+#include <stdlib.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/Intrinsic.h>
 #include <X11/Xatom.h>
 #include <X11/StringDefs.h>
 #include <X11/Shell.h>
 #include <X11/Xmu/Editres.h>
 #include "Clock.h"
-#include <stdio.h> 
-#include <stdlib.h>
 
 #ifdef XKB
 #include <X11/extensions/XKBbells.h>
@@ -54,17 +59,13 @@
 
 static Atom wm_delete_window;
 
-static void die(w, client_data, call_data)
-    Widget	w;
-    XtPointer	client_data, call_data;
+static void die(Widget w, XtPointer client_data, XtPointer call_data)
 {
     XCloseDisplay(XtDisplay(w));
     exit(0);
 }
 
-static void save(w, client_data, call_data)
-    Widget w;
-    XtPointer client_data, call_data;
+static void save(Widget w, XtPointer client_data, XtPointer call_data)
 {
     return;	/* stateless */
 }
@@ -153,11 +154,7 @@
     exit(0);
 }
 
-static void quit(w, event, params, num_params)
-    Widget w;
-    XEvent *event;
-    String *params;
-    Cardinal *num_params;
+static void quit(Widget w, XEvent *event, String *params, Cardinal *num_params)
 {
     Arg arg;
 
@@ -174,3 +171,7 @@
 	die(w, NULL, NULL);
     }
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
diff -ru -x '*.Po' -x '*.Plo' oclock-1.0.1.orig/transform.c oclock-1.0.1/transform.c
--- oclock-1.0.1.orig/transform.c	2009-01-29 14:37:37 +0100
+++ oclock-1.0.1/transform.c	2009-01-29 14:49:47 +0100
@@ -33,9 +33,14 @@
  * transformed coordinate system objects for X
  */
 
+#include	<stdlib.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include	<X11/Xlib.h>
 #include	"transform.h"
-#include	<stdlib.h>
 
 static XPoint * 
 TranslatePoints(TPoint *points, int n_points, 
@@ -60,15 +65,7 @@
 }
 
 void
-TFillPolygon (dpy, d, gc, t, points, n_points, shape, mode)
-register Display	*dpy;
-Drawable		d;
-GC			gc;
-Transform		*t;
-TPoint			*points;
-int			n_points;
-int			shape;
-int			mode;
+TFillPolygon (Display *dpy, Drawable d, GC gc, Transform* t, TPoint* points, int n_points, int shape, int mode)
 {
 	XPoint	*xpoints;
 
@@ -81,13 +78,7 @@
 }
 
 void
-TDrawArc (dpy, d, gc, t, x, y, width, height, angle1, angle2)
-	register Display	*dpy;
-	Drawable		d;
-	GC			gc;
-	Transform		*t;
-	double			x, y, width, height;
-	int			angle1, angle2;
+TDrawArc (Display* dpy, Drawable d, GC gc, Transform* t, double x, double y, double width, double height, int angle1, int angle2)
 {
 	int	xx, xy, xw, xh;
 
@@ -107,13 +98,7 @@
 }
 
 void
-TFillArc (dpy, d, gc, t, x, y, width, height, angle1, angle2)
-	register Display	*dpy;
-	Drawable		d;
-	GC			gc;
-	Transform		*t;
-	double			x, y, width, height;
-	int			angle1, angle2;
+TFillArc (Display* dpy, Drawable d, GC gc, Transform* t, double x, double y, double width, double height, int angle1, int angle2)
 {
 	int	xx, xy, xw, xh;
 
@@ -133,13 +118,14 @@
 }
 
 void
-SetTransform (t, xx1, xx2, xy1, xy2, tx1, tx2, ty1, ty2)
-Transform	*t;
-int		xx1, xx2, xy1, xy2;
-double		tx1, tx2, ty1, ty2;
+SetTransform (Transform* t, int xx1, int xx2, int xy1, int xy2, double tx1, double tx2, double ty1, double ty2)
 {
 	t->mx = ((double) xx2 - xx1) / (tx2 - tx1);
 	t->bx = ((double) xx1) - t->mx * tx1;
 	t->my = ((double) xy2 - xy1) / (ty2 - ty1);
 	t->by = ((double) xy1) - t->my * ty1;
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
