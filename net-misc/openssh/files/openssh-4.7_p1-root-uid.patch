diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/auth-pam.c openssh-4.7p1/auth-pam.c
--- openssh-4.7p1.orig/auth-pam.c	2008-05-14 10:37:13 +0200
+++ openssh-4.7p1/auth-pam.c	2008-05-14 10:43:56 +0200
@@ -779,7 +779,7 @@
 			}
 			if (type == PAM_SUCCESS) {
 				if (!sshpam_authctxt->valid ||
-				    (sshpam_authctxt->pw->pw_uid == 0 &&
+				    (sshpam_authctxt->pw->pw_uid == ROOT_UID &&
 				    options.permit_root_login != PERMIT_YES))
 					fatal("Internal error: PAM auth "
 					    "succeeded when it should have "
@@ -830,7 +830,7 @@
 	}
 	buffer_init(&buffer);
 	if (sshpam_authctxt->valid &&
-	    (sshpam_authctxt->pw->pw_uid != 0 ||
+	    (sshpam_authctxt->pw->pw_uid != ROOT_UID ||
 	    options.permit_root_login == PERMIT_YES))
 		buffer_put_cstring(&buffer, *resp);
 	else
@@ -1193,7 +1193,7 @@
 	 * by PermitRootLogin, use an invalid password to prevent leaking
 	 * information via timing (eg if the PAM config has a delay on fail).
 	 */
-	if (!authctxt->valid || (authctxt->pw->pw_uid == 0 &&
+	if (!authctxt->valid || (authctxt->pw->pw_uid == ROOT_UID &&
 	    options.permit_root_login != PERMIT_YES))
 		sshpam_password = badpw;
 
diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/auth-passwd.c openssh-4.7p1/auth-passwd.c
--- openssh-4.7p1.orig/auth-passwd.c	2008-05-14 10:37:13 +0200
+++ openssh-4.7p1/auth-passwd.c	2008-05-14 10:45:27 +0200
@@ -53,6 +53,7 @@
 #include "hostfile.h"
 #include "auth.h"
 #include "auth-options.h"
+#include "misc.h"
 
 extern Buffer loginmsg;
 extern ServerOptions options;
@@ -87,7 +88,8 @@
 #endif
 
 #ifndef HAVE_CYGWIN
-	if (pw->pw_uid == 0 && options.permit_root_login != PERMIT_YES)
+	/* hehe, the interix change would make this work on cygwin too :) */
+	if (pw->pw_uid == ROOT_UID && options.permit_root_login != PERMIT_YES)
 		ok = 0;
 #endif
 	if (*password == '\0' && options.permit_empty_passwd == 0)
diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/auth-rhosts.c openssh-4.7p1/auth-rhosts.c
--- openssh-4.7p1.orig/auth-rhosts.c	2008-05-14 10:37:13 +0200
+++ openssh-4.7p1/auth-rhosts.c	2008-05-14 10:46:45 +0200
@@ -37,6 +37,7 @@
 #include "key.h"
 #include "hostfile.h"
 #include "auth.h"
+#include "misc.h"
 
 /* import */
 extern ServerOptions options;
@@ -212,7 +213,7 @@
 		return 0;
 
 	/* If not logging in as superuser, try /etc/hosts.equiv and shosts.equiv. */
-	if (pw->pw_uid != 0) {
+	if (pw->pw_uid != ROOT_UID) {
 		if (check_rhosts_file(_PATH_RHOSTS_EQUIV, hostname, ipaddr,
 		    client_user, pw->pw_name)) {
 			auth_debug_add("Accepted for %.100s [%.100s] by /etc/hosts.equiv.",
@@ -238,7 +239,7 @@
 		return 0;
 	}
 	if (options.strict_modes &&
-	    ((st.st_uid != 0 && st.st_uid != pw->pw_uid) ||
+	    ((st.st_uid != ROOT_UID && st.st_uid != pw->pw_uid) ||
 	    (st.st_mode & 022) != 0)) {
 		logit("Rhosts authentication refused for %.100s: "
 		    "bad ownership or modes for home directory.", pw->pw_name);
@@ -265,7 +266,7 @@
 		 * allowing access to their account by anyone.
 		 */
 		if (options.strict_modes &&
-		    ((st.st_uid != 0 && st.st_uid != pw->pw_uid) ||
+		    ((st.st_uid != ROOT_UID && st.st_uid != pw->pw_uid) ||
 		    (st.st_mode & 022) != 0)) {
 			logit("Rhosts authentication refused for %.100s: bad modes for %.200s",
 			    pw->pw_name, buf);
diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/auth.c openssh-4.7p1/auth.c
--- openssh-4.7p1.orig/auth.c	2008-05-14 10:37:13 +0200
+++ openssh-4.7p1/auth.c	2008-05-14 10:48:15 +0200
@@ -377,7 +377,7 @@
 		user_hostfile = tilde_expand_filename(userfile, pw->pw_uid);
 		if (options.strict_modes &&
 		    (stat(user_hostfile, &st) == 0) &&
-		    ((st.st_uid != 0 && st.st_uid != pw->pw_uid) ||
+		    ((st.st_uid != ROOT_UID && st.st_uid != pw->pw_uid) ||
 		    (st.st_mode & 022) != 0)) {
 			logit("Authentication refused for %.100s: "
 			    "bad owner or modes for %.200s",
@@ -430,7 +430,7 @@
 
 	/* check the open file to avoid races */
 	if (fstat(fileno(f), &st) < 0 ||
-	    (st.st_uid != 0 && st.st_uid != uid) ||
+	    (st.st_uid != ROOT_UID && st.st_uid != uid) ||
 	    (st.st_mode & 022) != 0) {
 		snprintf(err, errlen, "bad ownership or modes for file %s",
 		    buf);
@@ -447,7 +447,7 @@
 
 		debug3("secure_filename: checking '%s'", buf);
 		if (stat(buf, &st) < 0 ||
-		    (st.st_uid != 0 && st.st_uid != uid) ||
+		    (st.st_uid != ROOT_UID && st.st_uid != uid) ||
 		    (st.st_mode & 022) != 0) {
 			snprintf(err, errlen,
 			    "bad ownership or modes for directory %s", buf);
diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/auth1.c openssh-4.7p1/auth1.c
--- openssh-4.7p1.orig/auth1.c	2008-05-14 10:37:13 +0200
+++ openssh-4.7p1/auth1.c	2008-05-14 11:03:42 +0200
@@ -39,6 +39,7 @@
 #endif
 #include "monitor_wrap.h"
 #include "buffer.h"
+#include "misc.h"
 
 /* import */
 extern ServerOptions options;
@@ -325,7 +326,7 @@
 		}
 #else
 		/* Special handling for root */
-		if (authenticated && authctxt->pw->pw_uid == 0 &&
+		if (authenticated && authctxt->pw->pw_uid == ROOT_UID &&
 		    !auth_root_allowed(meth->name)) {
  			authenticated = 0;
 # ifdef SSH_AUDIT_EVENTS
@@ -424,7 +425,7 @@
 	 * the server.
 	 */
 #ifndef HAVE_CYGWIN
-	if (!use_privsep && getuid() != 0 && authctxt->pw &&
+	if (!use_privsep && getuid() != ROOT_UID && authctxt->pw &&
 	    authctxt->pw->pw_uid != getuid())
 		packet_disconnect("Cannot change user when server not running as root.");
 #endif
diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/auth2.c openssh-4.7p1/auth2.c
--- openssh-4.7p1.orig/auth2.c	2008-05-14 10:37:13 +0200
+++ openssh-4.7p1/auth2.c	2008-05-14 11:03:59 +0200
@@ -44,6 +44,7 @@
 #include "dispatch.h"
 #include "pathnames.h"
 #include "buffer.h"
+#include "misc.h"
 
 #ifdef GSSAPI
 #include "ssh-gss.h"
@@ -219,7 +220,7 @@
 		    authctxt->user);
 
 	/* Special handling for root */
-	if (authenticated && authctxt->pw->pw_uid == 0 &&
+	if (authenticated && authctxt->pw->pw_uid == ROOT_UID &&
 	    !auth_root_allowed(method)) {
 		authenticated = 0;
 #ifdef SSH_AUDIT_EVENTS
diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/loginrec.c openssh-4.7p1/loginrec.c
--- openssh-4.7p1.orig/loginrec.c	2008-05-14 10:37:15 +0200
+++ openssh-4.7p1/loginrec.c	2008-05-14 10:49:59 +0200
@@ -1648,7 +1648,7 @@
 		    strerror(errno));
 		goto out;
 	}
-	if((fst.st_mode & (S_IRWXG | S_IRWXO)) || (fst.st_uid != 0)){
+	if((fst.st_mode & (S_IRWXG | S_IRWXO)) || (fst.st_uid != ROOT_UID)){
 		logit("Excess permission or bad ownership on file %s",
 		    _PATH_BTMP);
 		goto out;
diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/misc.h openssh-4.7p1/misc.h
--- openssh-4.7p1.orig/misc.h	2008-05-14 10:37:16 +0200
+++ openssh-4.7p1/misc.h	2008-05-14 10:42:32 +0200
@@ -15,6 +15,18 @@
 #ifndef _MISC_H
 #define _MISC_H
 
+/* This one is required for propper interix support, since there the "root" user
+ * is Administrator (or maybe something else). In any case the uid of that user
+ * is 197108 (i don't know how much you have to drink before inventing such a
+ * root uid...) */
+#ifdef __INTERIX
+# define ROOT_UID 197108
+# define ROOT_GID 131616
+#else
+# define ROOT_UID 0
+# define ROOT_GID 0
+#endif
+
 /* misc.c */
 
 char	*chop(char *);
diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/monitor.c openssh-4.7p1/monitor.c
--- openssh-4.7p1.orig/monitor.c	2008-05-14 10:37:16 +0200
+++ openssh-4.7p1/monitor.c	2008-05-14 10:50:26 +0200
@@ -355,7 +355,7 @@
 			if (!(ent->flags & MON_AUTHDECIDE))
 				fatal("%s: unexpected authentication from %d",
 				    __func__, ent->type);
-			if (authctxt->pw->pw_uid == 0 &&
+			if (authctxt->pw->pw_uid == ROOT_UID &&
 			    !auth_root_allowed(auth_method))
 				authenticated = 0;
 #ifdef USE_PAM
diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/openbsd-compat/port-aix.c openssh-4.7p1/openbsd-compat/port-aix.c
--- openssh-4.7p1.orig/openbsd-compat/port-aix.c	2008-05-14 10:37:17 +0200
+++ openssh-4.7p1/openbsd-compat/port-aix.c	2008-05-14 10:51:13 +0200
@@ -243,7 +243,7 @@
 	 * logins via ssh) or if running as non-root user (since
 	 * loginrestrictions will always fail due to insufficient privilege).
 	 */
-	if (pw->pw_uid == 0 || geteuid() != 0) {
+	if (pw->pw_uid == ROOT_UID || geteuid() != ROOT_UID) {
 		debug3("%s: not checking", __func__);
 		return 1;
 	}
diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/readconf.c openssh-4.7p1/readconf.c
--- openssh-4.7p1.orig/readconf.c	2008-05-14 10:37:18 +0200
+++ openssh-4.7p1/readconf.c	2008-05-14 10:51:48 +0200
@@ -243,7 +243,7 @@
 	Forward *fwd;
 #ifndef NO_IPPORT_RESERVED_CONCEPT
 	extern uid_t original_real_uid;
-	if (newfwd->listen_port < IPPORT_RESERVED && original_real_uid != 0)
+	if (newfwd->listen_port < IPPORT_RESERVED && original_real_uid != ROOT_UID)
 		fatal("Privileged ports can only be forwarded by root.");
 #endif
 	if (options->num_local_forwards >= SSH_MAX_FORWARDS_PER_DIRECTION)
@@ -969,7 +969,7 @@
 
 		if (fstat(fileno(f), &sb) == -1)
 			fatal("fstat %s: %s", filename, strerror(errno));
-		if (((sb.st_uid != 0 && sb.st_uid != getuid()) ||
+		if (((sb.st_uid != ROOT_UID && sb.st_uid != getuid()) ||
 		    (sb.st_mode & 022) != 0))
 			fatal("Bad owner or permissions on %s", filename);
 	}
diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/serverloop.c openssh-4.7p1/serverloop.c
--- openssh-4.7p1.orig/serverloop.c	2008-05-14 10:37:19 +0200
+++ openssh-4.7p1/serverloop.c	2008-05-14 10:52:06 +0200
@@ -1113,7 +1113,7 @@
 		if (!options.allow_tcp_forwarding ||
 		    no_port_forwarding_flag
 #ifndef NO_IPPORT_RESERVED_CONCEPT
-		    || (listen_port < IPPORT_RESERVED && pw->pw_uid != 0)
+		    || (listen_port < IPPORT_RESERVED && pw->pw_uid != ROOT_UID)
 #endif
 		    ) {
 			success = 0;
diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/session.c openssh-4.7p1/session.c
--- openssh-4.7p1.orig/session.c	2008-05-14 10:37:19 +0200
+++ openssh-4.7p1/session.c	2008-05-14 11:04:20 +0200
@@ -87,6 +87,7 @@
 #include "session.h"
 #include "kex.h"
 #include "monitor_wrap.h"
+#include "misc.h"
 
 #if defined(KRB5) && defined(USE_AFS)
 #include <kafs.h>
@@ -347,7 +348,7 @@
 				break;
 			}
 			debug("Received TCP/IP port forwarding request.");
-			if (channel_input_port_forward_request(s->pw->pw_uid == 0,
+			if (channel_input_port_forward_request(s->pw->pw_uid == ROOT_UID,
 			    options.gateway_ports) < 0) {
 				debug("Port forwarding failed.");
 				break;
@@ -954,7 +955,7 @@
 	if (tmpenv == NULL)
 		return;
 
-	if (uid == 0)
+	if (uid == ROOT_UID)
 		var = child_get_env(tmpenv, "SUPATH");
 	else
 		var = child_get_env(tmpenv, "PATH");
@@ -1063,7 +1064,7 @@
 #  endif /* HAVE_ETC_DEFAULT_LOGIN */
 		if (path == NULL || *path == '\0') {
 			child_set_env(&env, &envsize, "PATH",
-			    s->pw->pw_uid == 0 ?
+			    s->pw->pw_uid == ROOT_UID ?
 				SUPERUSER_PATH : _PATH_STDPATH);
 		}
 # endif /* HAVE_CYGWIN */
@@ -1288,7 +1289,7 @@
 do_setusercontext(struct passwd *pw)
 {
 #ifndef HAVE_CYGWIN
-	if (getuid() == 0 || geteuid() == 0)
+	if (getuid() == ROOT_UID || geteuid() == ROOT_UID)
 #endif /* HAVE_CYGWIN */
 	{
 
@@ -2088,7 +2089,7 @@
 		record_logout(s->pid, s->tty, s->pw->pw_name);
 
 	/* Release the pseudo-tty. */
-	if (getuid() == 0)
+	if (getuid() == ROOT_UID)
 		pty_release(s->tty);
 
 	/*
diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/ssh.c openssh-4.7p1/ssh.c
--- openssh-4.7p1.orig/ssh.c	2008-05-14 10:37:20 +0200
+++ openssh-4.7p1/ssh.c	2008-05-14 10:54:00 +0200
@@ -687,7 +687,7 @@
 #ifdef HAVE_CYGWIN
 	    options.use_privileged_port,
 #else
-	    original_effective_uid == 0 && options.use_privileged_port,
+	    original_effective_uid == ROOT_UID && options.use_privileged_port,
 #endif
 	    options.proxy_command) != 0)
 		exit(255);
@@ -736,7 +736,7 @@
 	 * user's home directory if it happens to be on a NFS volume where
 	 * root is mapped to nobody.
 	 */
-	if (original_effective_uid == 0) {
+	if (original_effective_uid == ROOT_UID) {
 		PRIV_START;
 		permanently_set_uid(pw);
 	}
diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/sshd.c openssh-4.7p1/sshd.c
--- openssh-4.7p1.orig/sshd.c	2008-05-14 10:37:20 +0200
+++ openssh-4.7p1/sshd.c	2008-05-14 11:02:30 +0200
@@ -654,7 +654,7 @@
 		close(pmonitor->m_sendfd);
 
 		/* Demote the child */
-		if (getuid() == 0 || geteuid() == 0)
+		if (getuid() == ROOT_UID || geteuid() == ROOT_UID)
 			privsep_preauth_child();
 		setproctitle("%s", "[net]");
 	}
@@ -667,7 +667,7 @@
 #ifdef DISABLE_FD_PASSING
 	if (1) {
 #else
-	if (authctxt->pw->pw_uid == 0 || options.use_login) {
+	if (authctxt->pw->pw_uid == ROOT_UID || options.use_login) {
 #endif
 		/* File descriptor passing is broken or root login */
 		use_privsep = 0;
@@ -1260,7 +1260,7 @@
 #endif
 
 #ifndef __INTERIX
-	if (geteuid() == 0 && setgroups(0, NULL) == -1)
+	if (geteuid() == ROOT_UID && setgroups(0, NULL) == -1)
 		debug("setgroups(): %.200s", strerror(errno));
 #endif
 
@@ -1532,7 +1532,7 @@
 		    (st.st_uid != getuid () ||
 		    (st.st_mode & (S_IWGRP|S_IWOTH)) != 0))
 #else
-		if (st.st_uid != 0 || (st.st_mode & (S_IWGRP|S_IWOTH)) != 0)
+		if (st.st_uid != ROOT_UID || (st.st_mode & (S_IWGRP|S_IWOTH)) != 0)
 #endif
 			fatal("%s must be owned by root and not group or "
 			    "world-writable.", _PATH_PRIVSEP_CHROOT_DIR);
diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/sshpty.c openssh-4.7p1/sshpty.c
--- openssh-4.7p1.orig/sshpty.c	2008-05-14 10:37:20 +0200
+++ openssh-4.7p1/sshpty.c	2008-05-14 10:56:29 +0200
@@ -224,7 +224,7 @@
 	if (st.st_uid != pw->pw_uid || st.st_gid != gid) {
 		if (chown(tty, pw->pw_uid, gid) < 0) {
 			if (errno == EROFS &&
-			    (st.st_uid == pw->pw_uid || st.st_uid == 0))
+			    (st.st_uid == pw->pw_uid || st.st_uid == ROOT_UID))
 				debug("chown(%.100s, %u, %u) failed: %.100s",
 				    tty, (u_int)pw->pw_uid, (u_int)gid,
 				    strerror(errno));
diff -ru -x '*.Po' -x '*.Plo' openssh-4.7p1.orig/uidswap.c openssh-4.7p1/uidswap.c
--- openssh-4.7p1.orig/uidswap.c	2008-05-14 10:37:21 +0200
+++ openssh-4.7p1/uidswap.c	2008-05-14 11:03:01 +0200
@@ -26,6 +26,7 @@
 #include "log.h"
 #include "uidswap.h"
 #include "xmalloc.h"
+#include "misc.h"
 
 /*
  * Note: all these functions must work in all of the following cases:
@@ -254,7 +255,7 @@
 
 #ifndef HAVE_CYGWIN
 	/* Try restoration of GID if changed (test clearing of saved gid) */
-	if (old_gid != pw->pw_gid && pw->pw_uid != 0 &&
+	if (old_gid != pw->pw_gid && pw->pw_uid != ROOT_UID &&
 	    (setgid(old_gid) != -1 || setegid(old_gid) != -1))
 		fatal("%s: was able to restore old [e]gid", __func__);
 #endif
diff -ru openssh-4.7p1.orig/auth-pam.c openssh-4.7p1/auth-pam.c
--- openssh-4.7p1.orig/auth-pam.c	2008-05-14 14:14:49 +0200
+++ openssh-4.7p1/auth-pam.c	2008-05-14 17:04:52 +0200
@@ -265,7 +265,7 @@
 	if (setreuid(sshpam_authctxt->pw->pw_uid, -1) == -1)
 		fatal("%s: setreuid failed: %s", __func__, strerror(errno));
 	result = pam_chauthtok(pamh, flags);
-	if (setreuid(0, -1) == -1)
+	if (setreuid(ROOT_UID, -1) == -1)
 		fatal("%s: setreuid failed: %s", __func__, strerror(errno));
 	return result;
 }
diff -ru openssh-4.7p1.orig/auth-sia.c openssh-4.7p1/auth-sia.c
--- openssh-4.7p1.orig/auth-sia.c	2008-05-14 14:14:49 +0200
+++ openssh-4.7p1/auth-sia.c	2008-05-14 17:05:22 +0200
@@ -107,7 +107,7 @@
 
 	sia_ses_release(&ent);
 
-	setuid(0);
+	setuid(ROOT_UID);
 	permanently_set_uid(pw);
 }
 
diff -ru openssh-4.7p1.orig/clientloop.c openssh-4.7p1/clientloop.c
--- openssh-4.7p1.orig/clientloop.c	2008-05-14 14:14:50 +0200
+++ openssh-4.7p1/clientloop.c	2008-05-14 17:05:47 +0200
@@ -745,7 +745,7 @@
 		close(client_fd);
 		return;
 	}
-	if ((euid != 0) && (getuid() != euid)) {
+	if ((euid != ROOT_UID) && (getuid() != euid)) {
 		error("control mode uid mismatch: peer euid %u != uid %u",
 		    (u_int) euid, (u_int) getuid());
 		close(client_fd);
diff -ru openssh-4.7p1.orig/loginrec.c openssh-4.7p1/loginrec.c
--- openssh-4.7p1.orig/loginrec.c	2008-05-14 14:14:52 +0200
+++ openssh-4.7p1/loginrec.c	2008-05-14 17:09:47 +0200
@@ -175,6 +175,7 @@
 #include "canohost.h"
 #include "auth.h"
 #include "buffer.h"
+#include "misc.h"
 
 #ifdef HAVE_UTIL_H
 # include <util.h>
@@ -432,7 +433,7 @@
 login_write(struct logininfo *li)
 {
 #ifndef HAVE_CYGWIN
-	if (geteuid() != 0) {
+	if (geteuid() != ROOT_UID) {
 		logit("Attempt to write login records by non-root user (aborting)");
 		return (1);
 	}
@@ -1636,7 +1637,7 @@
 	time_t t;
 	struct stat fst;
 
-	if (geteuid() != 0)
+	if (geteuid() != ROOT_UID)
 		return;
 	if ((fd = open(_PATH_BTMP, O_WRONLY | O_APPEND)) < 0) {
 		debug("Unable to open the btmp file %s: %s", _PATH_BTMP,
diff -ru openssh-4.7p1.orig/logintest.c openssh-4.7p1/logintest.c
--- openssh-4.7p1.orig/logintest.c	2008-05-14 14:14:52 +0200
+++ openssh-4.7p1/logintest.c	2008-05-14 17:06:32 +0200
@@ -125,7 +125,7 @@
 	if (be_verbose)
 		dump_logininfo(li1, "li1");
 
-	if ((int)geteuid() != 0) {
+	if ((int)geteuid() != ROOT_UID) {
 		printf("NOT RUNNING LOGIN TESTS - you are not root!\n");
 		return 1;
 	}
diff -ru openssh-4.7p1.orig/openbsd-compat/port-aix.c openssh-4.7p1/openbsd-compat/port-aix.c
--- openssh-4.7p1.orig/openbsd-compat/port-aix.c	2008-05-14 14:14:54 +0200
+++ openssh-4.7p1/openbsd-compat/port-aix.c	2008-05-14 17:06:54 +0200
@@ -300,7 +300,7 @@
 void
 record_failed_login(const char *user, const char *hostname, const char *ttyname)
 {
-	if (geteuid() != 0)
+	if (geteuid() != ROOT_UID)
 		return;
 
 	aix_setauthdb(user);
diff -ru openssh-4.7p1.orig/sshpty.c openssh-4.7p1/sshpty.c
--- openssh-4.7p1.orig/sshpty.c	2008-05-14 14:14:58 +0200
+++ openssh-4.7p1/sshpty.c	2008-05-14 17:08:00 +0200
@@ -78,7 +78,7 @@
 void
 pty_release(const char *tty)
 {
-	if (chown(tty, (uid_t) 0, (gid_t) 0) < 0)
+	if (chown(tty, (uid_t) ROOT_UID, (gid_t) ROOT_GID) < 0)
 		error("chown %.100s 0 0 failed: %.100s", tty, strerror(errno));
 	if (chmod(tty, (mode_t) 0666) < 0)
 		error("chmod %.100s 0666 failed: %.100s", tty, strerror(errno));
diff -ru openssh-4.7p1.orig/uidswap.c openssh-4.7p1/uidswap.c
--- openssh-4.7p1.orig/uidswap.c	2008-05-14 14:14:58 +0200
+++ openssh-4.7p1/uidswap.c	2008-05-14 17:09:18 +0200
@@ -67,13 +67,13 @@
 	    (u_int)pw->pw_uid, (u_int)pw->pw_gid,
 	    (u_int)saved_euid, (u_int)saved_egid);
 #ifndef HAVE_CYGWIN
-	if (saved_euid != 0) {
+	if (saved_euid != ROOT_UID) {
 		privileged = 0;
 		return;
 	}
 #endif
 #else
-	if (geteuid() != 0) {
+	if (geteuid() != ROOT_UID) {
 		privileged = 0;
 		return;
 	}
