diff -ruN openssh-4.7p1.orig/configure.ac openssh-4.7p1/configure.ac
--- openssh-4.7p1.orig/configure.ac	2008-02-28 14:37:03 +0100
+++ openssh-4.7p1/configure.ac	2008-02-28 14:37:58 +0100
@@ -385,6 +385,20 @@
 		[Define if your platform needs to skip post auth
 		file descriptor passing])
 	;;
+*-*-interix*)
+	AC_DEFINE(MISSING_HOWMANY, 1, [howmany macro is missing])
+	AC_DEFINE(USE_PIPES, 1, [Use PIPES instead of a socketpair()])
+	AC_DEFINE(DISABLE_LOGIN, 1,
+		[Define if you don't want to use your system's login() call])
+	AC_DEFINE(DISABLE_SHADOW, 1,
+	    [Define if you want to disable shadow passwords])
+	AC_DEFINE(IP_TOS_IS_BROKEN, 1,
+	    [Define if your system choked on IP TOS setting])
+	AC_DEFINE(NO_IPPORT_RESERVED_CONCEPT, 1,
+	    [Define if the concept of ports only accessible to
+		superusers isn't known])
+	SSHDLIBS="$SSHDLIBS -lcrypt"
+	;;
 *-*-dgux*)
 	AC_DEFINE(IP_TOS_IS_BROKEN)
 	AC_DEFINE(SETEUID_BREAKS_SETUID)
diff -ruN openssh-4.7p1.orig/defines.h openssh-4.7p1/defines.h
--- openssh-4.7p1.orig/defines.h	2008-02-28 14:37:03 +0100
+++ openssh-4.7p1/defines.h	2008-02-28 14:33:49 +0100
@@ -431,6 +431,11 @@
 # define __attribute__(x)
 #endif /* !defined(__GNUC__) || (__GNUC__ < 2) */
 
+#if defined(__INTERIX)
+# undef __dead
+# define __dead
+#endif
+
 #ifndef __dead
 # define __dead	__attribute__((noreturn))
 #endif
@@ -719,7 +730,11 @@
 #endif
 
 #ifndef IOV_MAX
-# if defined(_XOPEN_IOV_MAX)
+# if defined(__INTERIX)
+   // Interix: has _XOPEN_IOV_MAX = INT_MAX which breaks
+   // the compilation, since an iovec array of INT_MAX is too large
+#  define	IOV_MAX		_SC_IOV_MAX
+# elif defined(_XOPEN_IOV_MAX)
 #  define	IOV_MAX		_XOPEN_IOV_MAX
 # elif defined(DEF_IOV_MAX)
 #  define	IOV_MAX		DEF_IOV_MAX
diff -ruN openssh-4.7p1.orig/hostfile.c openssh-4.7p1/hostfile.c
--- openssh-4.7p1.orig/hostfile.c	2008-02-28 14:37:03 +0100
+++ openssh-4.7p1/hostfile.c	2008-02-28 14:33:49 +0100
@@ -45,7 +45,9 @@
 #include <openssl/hmac.h>
 #include <openssl/sha.h>
 
-#include <resolv.h>
+#ifndef __INTERIX
+# include <resolv.h>
+#endif
 #include <stdarg.h>
 #include <stdio.h>
 #include <stdlib.h>
diff -ruN openssh-4.7p1.orig/openbsd-compat/bsd-misc.h openssh-4.7p1/openbsd-compat/bsd-misc.h
--- openssh-4.7p1.orig/openbsd-compat/bsd-misc.h	2008-02-28 14:37:03 +0100
+++ openssh-4.7p1/openbsd-compat/bsd-misc.h	2008-02-28 14:33:49 +0100
@@ -68,12 +68,14 @@
 #endif /* HAVE_TRUNCATE */
 
 #if !defined(HAVE_NANOSLEEP) && !defined(HAVE_NSLEEP)
+#ifndef __INTERIX
 #ifndef HAVE_STRUCT_TIMESPEC
 struct timespec {
 	time_t	tv_sec;
 	long	tv_nsec;
 };
 #endif
+#endif
 int nanosleep(const struct timespec *, struct timespec *);
 #endif
 
diff -ruN openssh-4.7p1.orig/openbsd-compat/getrrsetbyname.c openssh-4.7p1/openbsd-compat/getrrsetbyname.c
--- openssh-4.7p1.orig/openbsd-compat/getrrsetbyname.c	2008-02-28 14:37:03 +0100
+++ openssh-4.7p1/openbsd-compat/getrrsetbyname.c	2008-02-28 14:33:49 +0100
@@ -61,6 +61,10 @@
 extern int h_errno;
 #endif
 
+/* on interix, all this stuff won't work that easy
+ * so we skip it for now. */
+#if !defined(__INTERIX)
+
 /* We don't need multithread support here */
 #ifdef _THREAD_PRIVATE
 # undef _THREAD_PRIVATE
@@ -182,11 +186,16 @@
 
 static int count_dns_rr(struct dns_rr *, u_int16_t, u_int16_t);
 
+#endif /* __INTERIX */
+
 int
 getrrsetbyname(const char *hostname, unsigned int rdclass,
     unsigned int rdtype, unsigned int flags,
     struct rrsetinfo **res)
 {
+#if defined(__INTERIX)
+	return (ERRSET_FAIL);
+#else
 	struct __res_state *_resp = _THREAD_PRIVATE(_res, _res, &_res);
 	int result;
 	struct rrsetinfo *rrset = NULL;
@@ -343,6 +352,7 @@
 	if (response != NULL)
 		free_dns_response(response);
 	return (result);
+#endif
 }
 
 void
@@ -376,6 +386,8 @@
 	free(rrset);
 }
 
+#if !defined(__INTERIX)
+
 /*
  * DNS response parsing routines
  */
@@ -607,4 +619,6 @@
 	return (n);
 }
 
+#endif /* __INTERIX */
+
 #endif /* !defined(HAVE_GETRRSETBYNAME) */
diff -ruN openssh-4.7p1.orig/openbsd-compat/getrrsetbyname.h openssh-4.7p1/openbsd-compat/getrrsetbyname.h
--- openssh-4.7p1.orig/openbsd-compat/getrrsetbyname.h	2008-02-28 14:37:03 +0100
+++ openssh-4.7p1/openbsd-compat/getrrsetbyname.h	2008-02-28 14:33:49 +0100
@@ -54,9 +54,11 @@
 
 #include <sys/types.h>
 #include <netinet/in.h>
-#include <arpa/nameser.h>
+#ifndef __INTERIX
+# include <arpa/nameser.h>
+# include <resolv.h>
+#endif
 #include <netdb.h>
-#include <resolv.h>
 
 #ifndef HFIXEDSZ
 #define HFIXEDSZ 12
diff -ruN openssh-4.7p1.orig/openbsd-compat/inet_ntop.c openssh-4.7p1/openbsd-compat/inet_ntop.c
--- openssh-4.7p1.orig/openbsd-compat/inet_ntop.c	2008-02-28 14:37:03 +0100
+++ openssh-4.7p1/openbsd-compat/inet_ntop.c	2008-02-28 14:33:49 +0100
@@ -27,7 +27,9 @@
 #include <sys/socket.h>
 #include <netinet/in.h>
 #include <arpa/inet.h>
-#include <arpa/nameser.h>
+#ifndef __INTERIX
+# include <arpa/nameser.h>
+#endif
 #include <string.h>
 #include <errno.h>
 #include <stdio.h>
diff -ruN openssh-4.7p1.orig/session.c openssh-4.7p1/session.c
--- openssh-4.7p1.orig/session.c	2008-02-28 14:37:03 +0100
+++ openssh-4.7p1/session.c	2008-02-28 14:33:49 +0100
@@ -1331,11 +1331,13 @@
 			perror("setgid");
 			exit(1);
 		}
+#ifndef __INTERIX
 		/* Initialize the group list. */
 		if (initgroups(pw->pw_name, pw->pw_gid) < 0) {
 			perror("initgroups");
 			exit(1);
 		}
+#endif
 		endgrent();
 #ifdef GSSAPI
 		if (options.gss_authentication) {
diff -ruN openssh-4.7p1.orig/sshd.c openssh-4.7p1/sshd.c
--- openssh-4.7p1.orig/sshd.c	2008-02-28 14:37:03 +0100
+++ openssh-4.7p1/sshd.c	2008-02-28 14:33:49 +0100
@@ -610,8 +610,10 @@
 	do_setusercontext(privsep_pw);
 #else
 	gidset[0] = privsep_pw->pw_gid;
+#ifndef __INTERIX
 	if (setgroups(1, gidset) < 0)
 		fatal("setgroups: %.100s", strerror(errno));
+#endif
 	permanently_set_uid(privsep_pw);
 #endif
 }
@@ -1257,8 +1259,10 @@
 	av = saved_argv;
 #endif
 
+#ifndef __INTERIX
 	if (geteuid() == 0 && setgroups(0, NULL) == -1)
 		debug("setgroups(): %.200s", strerror(errno));
+#endif
 
 	/* Ensure that fds 0, 1 and 2 are open or directed to /dev/null */
 	sanitise_stdfd();
@@ -1545,8 +1549,10 @@
 	 * to create a file, and we can't control the code in every
 	 * module which might be used).
 	 */
+#ifndef __INTERIX
 	if (setgroups(0, NULL) < 0)
 		debug("setgroups() failed: %.200s", strerror(errno));
+#endif
 
 	if (rexec_flag) {
 		rexec_argv = xcalloc(rexec_argc + 2, sizeof(char *));
diff -ruN openssh-4.7p1.orig/uidswap.c openssh-4.7p1/uidswap.c
--- openssh-4.7p1.orig/uidswap.c	2008-02-28 14:37:03 +0100
+++ openssh-4.7p1/uidswap.c	2008-02-28 14:33:49 +0100
@@ -81,6 +81,7 @@
 	privileged = 1;
 	temporarily_use_uid_effective = 1;
 
+#ifndef __INTERIX
 	saved_egroupslen = getgroups(0, NULL);
 	if (saved_egroupslen < 0)
 		fatal("getgroups: %.100s", strerror(errno));
@@ -116,6 +117,7 @@
 	/* Set the effective uid to the given (unprivileged) uid. */
 	if (setgroups(user_groupslen, user_groups) < 0)
 		fatal("setgroups: %.100s", strerror(errno));
+#endif
 #ifndef SAVED_IDS_WORK_WITH_SETEUID
 	/* Propagate the privileged gid to all of our gids. */
 	if (setgid(getegid()) < 0)
@@ -198,8 +200,10 @@
 	setgid(getgid());
 #endif /* SAVED_IDS_WORK_WITH_SETEUID */
 
+#ifndef __INTERIX
 	if (setgroups(saved_egroupslen, saved_egroups) < 0)
 		fatal("setgroups: %.100s", strerror(errno));
+#endif
 	temporarily_use_uid_effective = 0;
 }
 
diff -ruN openssh-4.7p1.orig/uuencode.c openssh-4.7p1/uuencode.c
--- openssh-4.7p1.orig/uuencode.c	2008-02-28 14:37:03 +0100
+++ openssh-4.7p1/uuencode.c	2008-02-28 14:33:49 +0100
@@ -27,7 +27,9 @@
 
 #include <sys/types.h>
 #include <netinet/in.h>
-#include <resolv.h>
+#ifndef __INTERIX
+# include <resolv.h>
+#endif
 #include <stdio.h>
 
 #include "xmalloc.h"
