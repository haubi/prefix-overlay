2009-09-05  Bruno Haible  <bruno@clisp.org>

	Support towlower, towupper.
	* doc/posix-functions/towlower.texi: Mention module wctype.
	* doc/posix-functions/towupper.texi: Likewise.
	* lib/wctype.in.h (towlower, towupper): New functions.
	* tests/test-wctype.c: Include stdio.h, stdlib.h.
	(ASSERT): New macro.
	(e): New variable.
	(main): Test also towlower, towupper. Test WEOF argument.
	Reported by Alan Hourihane <alanh@fairlite.co.uk>.

--- lib/wctype.in.h.orig	2009-09-05 18:04:07.000000000 +0200
+++ lib/wctype.in.h	2009-09-05 17:56:15.000000000 +0200
@@ -84,6 +84,8 @@
 #  undef iswspace
 #  undef iswupper
 #  undef iswxdigit
+#  undef towlower
+#  undef towupper
 
 /* Linux libc5 has <wctype.h> and the functions but they are broken.  */
 #  if @REPLACE_ISWCNTRL@
@@ -99,6 +101,8 @@
 #   define iswspace rpl_iswspace
 #   define iswupper rpl_iswupper
 #   define iswxdigit rpl_iswxdigit
+#   define towlower rpl_towlower
+#   define towupper rpl_towupper
 #  endif
 
 static inline int
@@ -178,6 +182,18 @@
 	  || ((wc & ~0x20) >= 'A' && (wc & ~0x20) <= 'F'));
 }
 
+static inline wint_t
+towlower (wint_t wc)
+{
+  return (wc >= 'A' && wc <= 'Z' ? wc - 'A' + 'a' : wc);
+}
+
+static inline wint_t
+towupper (wint_t wc)
+{
+  return (wc >= 'a' && wc <= 'z' ? wc - 'a' + 'A' : wc);
+}
+
 # endif /* ! HAVE_ISWCNTRL */
 
 #endif /* _GL_WCTYPE_H */
