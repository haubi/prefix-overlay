http://www.mail-archive.com/bug-coreutils@gnu.org/msg17827.html

From: Jim Meyering <meyer...@redhat.com>
Date: Fri, 18 Sep 2009 23:05:59 +0200
Subject: [PATCH] mktemp: adapt to new, 3-argument gen_tempname_len

* src/mktemp.c (mkstemp_len, mkdtemp_len): Update callers of
gen_tempname_len.
* gl/lib/tempname.c, gl/lib/tempname.h: Rebase against recently
API-modified copy of tempname module in gnulib.
---
 gl/lib/tempname.c |   23 ++++++++---------------
 gl/lib/tempname.h |    5 +++--
 src/mktemp.c      |    4 ++--
 3 files changed, 13 insertions(+), 19 deletions(-)

diff --git a/lib/tempname.c b/lib/tempname.c
index 0171516..84679bc 100644
--- a/lib/tempname.c
+++ b/lib/tempname.c
@@ -41,8 +41,7 @@
 # define TMP_MAX 238328
 #endif
 #ifndef __GT_FILE
-# define __GT_FILE	0
-# define __GT_BIGFILE	1
+# define __GT_FILE	1
 # define __GT_DIR	2
 # define __GT_NOCREATE	3
 #endif
@@ -61,12 +60,9 @@
 
 #if _LIBC
 # define struct_stat64 struct stat64
-# define small_open __open
-# define large_open __open64
 #else
 # define struct_stat64 struct stat
-# define small_open open
-# define large_open open
+# define __open open
 # define __gen_tempname gen_tempname
 # define __getpid getpid
 # define __gettimeofday gettimeofday
@@ -172,12 +168,11 @@ static const char letters[] =
                         at the time of the call.
    __GT_FILE:		create the file using open(O_CREAT|O_EXCL)
                         and return a read-write fd.  The file is mode 0600.
-   __GT_BIGFILE:	same as __GT_FILE but use open64().
    __GT_DIR:		create a directory, which will be mode 0700.
 
    We use a clever algorithm to get hard-to-predict names. */
 int
-gen_tempname_len (char *tmpl, int kind, size_t x_suffix_len)
+gen_tempname_len (char *tmpl, int flags, int kind, size_t x_suffix_len)
 {
   size_t len;
   char *XXXXXX;
@@ -230,11 +225,9 @@ gen_tempname_len (char *tmpl, int kind, 
       switch (kind)
         {
         case __GT_FILE:
-          fd = small_open (tmpl, O_RDWR | O_CREAT | O_EXCL, S_IRUSR | S_IWUSR);
-          break;
-
-        case __GT_BIGFILE:
-          fd = large_open (tmpl, O_RDWR | O_CREAT | O_EXCL, S_IRUSR | S_IWUSR);
+          fd = __open (tmpl,
+                       (flags & ~0777) | O_RDWR | O_CREAT | O_EXCL,
+                       S_IRUSR | S_IWUSR);
           break;
 
         case __GT_DIR:
@@ -295,7 +288,7 @@ gen_tempname_len (char *tmpl, int kind, 
 }
 
 int
-__gen_tempname (char *tmpl, int kind)
+__gen_tempname (char *tmpl, int flags, int kind)
 {
-  return gen_tempname_len (tmpl, kind, 6);
+  return gen_tempname_len (tmpl, flags, kind, 6);
 }
diff --git a/lib/tempname.h b/lib/tempname.h
index ee34aca..a942f07 100644
--- a/lib/tempname.h
+++ b/lib/tempname.h
@@ -37,5 +37,6 @@

    We use a clever algorithm to get hard-to-predict names. */
 #include <stddef.h>
-extern int gen_tempname (char *tmpl, int kind);
-extern int gen_tempname_len (char *tmpl, int kind, size_t x_suffix_len);
+extern int gen_tempname (char *tmpl, int flags, int kind);
+extern int gen_tempname_len (char *tmpl, int flags, int kind,
+                             size_t x_suffix_len);
diff --git a/src/mktemp.c b/src/mktemp.c
index a9a8708..d5a68cf 100644
--- a/src/mktemp.c
+++ b/src/mktemp.c
@@ -114,13 +114,13 @@ count_trailing_X_s (const char *s)
 static int
 mkstemp_len (char *tmpl, size_t suff_len, bool dry_run)
 {
-  return gen_tempname_len (tmpl, dry_run ? GT_NOCREATE : GT_FILE, suff_len);
+  return gen_tempname_len (tmpl, 0, dry_run ? GT_NOCREATE : GT_FILE, suff_len);
 }

 static int
 mkdtemp_len (char *tmpl, size_t suff_len, bool dry_run)
 {
-  return gen_tempname_len (tmpl, dry_run ? GT_NOCREATE : GT_DIR, suff_len);
+  return gen_tempname_len (tmpl, 0, dry_run ? GT_NOCREATE : GT_DIR, suff_len);
 }

 int
