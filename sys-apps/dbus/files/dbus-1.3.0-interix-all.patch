diff -ru dbus-1.3.0.orig/bus/activation-helper.c dbus-1.3.0/bus/activation-helper.c
--- dbus-1.3.0.orig/bus/activation-helper.c	2010-02-02 15:18:40 +0100
+++ dbus-1.3.0/bus/activation-helper.c	2010-02-02 15:22:07 +0100
@@ -210,7 +210,13 @@
 
   /* bail out unless we are setuid to user root */
   euid = geteuid();
-  if (euid != 0)
+  if (euid != 
+  #ifdef __INTERIX
+    197108
+  #else
+    0
+  #endif
+  )
     {
       dbus_set_error (error, DBUS_ERROR_SPAWN_PERMISSIONS_INVALID,
                       "not setuid root");
diff -ru dbus-1.3.0.orig/configure.in dbus-1.3.0/configure.in
--- dbus-1.3.0.orig/configure.in	2010-02-02 15:18:40 +0100
+++ dbus-1.3.0/configure.in	2010-02-02 15:41:55 +0100
@@ -871,16 +871,21 @@
    AC_MSG_RESULT(no)
 fi
 
-# Check for SCM_RIGHTS
-AC_MSG_CHECKING([for SCM_RIGHTS])
-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-#include <sys/socket.h>
-#include <sys/un.h>
-static int x = SCM_RIGHTS;
-]], [[]])],
-[ AC_MSG_RESULT([supported])
-  AC_DEFINE([HAVE_UNIX_FD_PASSING], [1], [Supports sending UNIX file descriptors]) ],
-[ AC_MSG_RESULT([not supported]) ])
+case $host_os in
+*-interix*) ;;
+*)
+	# Check for SCM_RIGHTS
+	AC_MSG_CHECKING([for SCM_RIGHTS])
+	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+	#include <sys/socket.h>
+	#include <sys/un.h>
+	static int x = SCM_RIGHTS;
+	]], [[]])],
+	[ AC_MSG_RESULT([supported])
+	  AC_DEFINE([HAVE_UNIX_FD_PASSING], [1], [Supports sending UNIX file descriptors]) ],
+	[ AC_MSG_RESULT([not supported]) ])
+	;;
+esac
 
 #### Set up final flags
 DBUS_CLIENT_CFLAGS=
diff -ru dbus-1.3.0.orig/dbus/dbus-auth-script.c dbus-1.3.0/dbus/dbus-auth-script.c
--- dbus-1.3.0.orig/dbus/dbus-auth-script.c	2010-02-02 15:18:40 +0100
+++ dbus-1.3.0/dbus/dbus-auth-script.c	2010-02-02 15:22:07 +0100
@@ -455,7 +455,13 @@
       else if (_dbus_string_starts_with_c_str (&line,
                                                "ROOT_CREDENTIALS"))
         {
-          auth_set_unix_credentials (auth, 0, DBUS_PID_UNSET);
+          auth_set_unix_credentials (auth, 
+		  #ifdef __INTERIX
+		    197108
+		  #else
+		    0
+		  #endif
+		    , DBUS_PID_UNSET);
         }
       else if (_dbus_string_starts_with_c_str (&line,
                                                "SILLY_CREDENTIALS"))
diff -ru dbus-1.3.0.orig/dbus/dbus-sysdeps-unix.c dbus-1.3.0/dbus/dbus-sysdeps-unix.c
--- dbus-1.3.0.orig/dbus/dbus-sysdeps-unix.c	2010-02-02 15:18:40 +0100
+++ dbus-1.3.0/dbus/dbus-sysdeps-unix.c	2010-02-02 15:22:07 +0100
@@ -1524,6 +1524,10 @@
 {
   int bytes_written;
   char buf[1] = { '\0' };
+#ifdef __INTERIX
+  struct sigaction oldsigaction, newsigaction;
+  int sigactionfailed;
+#endif
 #if defined(HAVE_CMSGCRED) 
   union {
 	  struct cmsghdr hdr;
@@ -1549,12 +1553,26 @@
   _DBUS_ASSERT_ERROR_IS_CLEAR (error);
   
  again:
-
+#ifdef __INTERIX
+  /* It would seem that Interix SIGPIPE happens faster than other UNICES */
+  newsigaction.sa_handler = SIG_IGN;
+  newsigaction.sa_mask = 0;
+  newsigaction.sa_flags = 0;
+  sigactionfailed = 0;
+  if (sigaction(SIGPIPE, &newsigaction, &oldsigaction) < 0) {
+  	_dbus_warn("sigaction failed before writing to pipe.\n");
+	sigactionfailed = 1;
+  }
+#endif
 #if defined(HAVE_CMSGCRED) 
   bytes_written = sendmsg (server_fd, &msg, 0);
 #else
   bytes_written = write (server_fd, buf, 1);
 #endif
+#ifdef __INTERIX
+  if (!sigactionfailed)
+    sigaction(SIGPIPE, &oldsigaction, NULL);
+#endif
 
   if (bytes_written < 0 && errno == EINTR)
     goto again;
@@ -1606,6 +1624,27 @@
                                 DBusCredentials *credentials,
                                 DBusError       *error)
 {
+#ifdef __INTERIX
+  int bytes_read = 0;
+  DBusString buf;
+  if ( _dbus_string_init( &buf )) {
+    bytes_read = _dbus_read_socket(client_fd, &buf, 1);
+	if (bytes_read == 1) {
+		_dbus_verbose("got one byte from server");
+	} else {
+      dbus_set_error (error, DBUS_ERROR_FAILED,
+                      "Failed to read credentials byte");
+      return FALSE;
+	} 
+	_dbus_string_free(&buf);
+  } else {
+	  _DBUS_SET_OOM(error);
+	  return FALSE;
+  }
+  _dbus_credentials_add_from_current_process(credentials); /* w/e */
+  _dbus_verbose("FIXME: Interix: got faked credentials from current process");
+  return TRUE;
+#else
   struct msghdr msg;
   struct iovec iov;
   char buf;
@@ -1820,6 +1859,7 @@
     }
   
   return TRUE;
+#endif /* __INTERIX */
 }
 
 /**
@@ -4043,7 +4083,7 @@
 dbus_bool_t
 _dbus_socket_can_pass_unix_fd(int fd) {
 
-#ifdef SCM_RIGHTS
+#if defined(SCM_RIGHTS) && !defined(__INTERIX)
   union {
     struct sockaddr sa;
     struct sockaddr_storage storage;
diff -ru dbus-1.3.0.orig/dbus/dbus-sysdeps-util-unix.c dbus-1.3.0/dbus/dbus-sysdeps-util-unix.c
--- dbus-1.3.0.orig/dbus/dbus-sysdeps-util-unix.c	2010-02-02 15:18:40 +0100
+++ dbus-1.3.0/dbus/dbus-sysdeps-util-unix.c	2010-02-02 15:22:07 +0100
@@ -339,7 +339,13 @@
     }
   
 #ifdef HAVE_LIBAUDIT
-  we_were_root = _dbus_geteuid () == 0;
+  we_were_root =  _dbus_get_euid() == 
+  #ifdef __INTERIX
+    197108
+  #else 
+    0
+  #endif
+  ;
   new_caps = NULL;
   /* have a tmp set of caps that we use to transition to the usr/grp dbus should
    * run as ... doesn't really help. But keeps people happy.
@@ -735,6 +741,11 @@
 #           error "buffer size for readdir_r cannot be determined"
 #       endif
 #   endif
+#ifdef __INTERIX
+  #define BFB 1024 /* big fine buffer */
+  /* bah... just use a nice big value here, was causing stack corruption */
+  name_max = name_max > BFB ? name_max : BFB;
+#endif
   if (size)
     *size = (size_t)offsetof(struct dirent, d_name) + name_max + 1;
   else
diff -ru dbus-1.3.0.orig/dbus/dbus-transport.c dbus-1.3.0/dbus/dbus-transport.c
--- dbus-1.3.0.orig/dbus/dbus-transport.c	2010-02-02 15:18:40 +0100
+++ dbus-1.3.0/dbus/dbus-transport.c	2010-02-02 15:22:07 +0100
@@ -638,9 +638,13 @@
     }
               
   if (transport->allow_anonymous ||
-      _dbus_credentials_get_unix_uid (auth_identity) == 0 ||
-      _dbus_credentials_same_user (our_identity,
-                                   auth_identity))
+      _dbus_credentials_get_unix_uid (auth_identity) ==
+	  #ifdef __INTERIX
+	  197108
+	  #else
+	  0
+	  #endif
+	  || _dbus_credentials_same_user (our_identity, auth_identity))
     {
       if (_dbus_credentials_include(our_identity,DBUS_CREDENTIAL_WINDOWS_SID))
           _dbus_verbose ("Client authorized as SID '%s'"
diff -ru dbus-1.3.0.orig/test/data/auth/external-root.auth-script dbus-1.3.0/test/data/auth/external-root.auth-script
--- dbus-1.3.0.orig/test/data/auth/external-root.auth-script	2010-02-02 15:18:40 +0100
+++ dbus-1.3.0/test/data/auth/external-root.auth-script	2010-02-02 15:22:07 +0100
@@ -3,7 +3,7 @@
 SERVER
 ROOT_CREDENTIALS
 ## 30 is ASCII '0' in hex
-SEND 'AUTH EXTERNAL 30'
+SEND 'AUTH EXTERNAL 313937313038'
 EXPECT_COMMAND OK
 EXPECT_STATE WAITING_FOR_INPUT
 SEND 'BEGIN'
diff -ru dbus-1.3.0.orig/test/data/valid-config-files/many-rules.conf dbus-1.3.0/test/data/valid-config-files/many-rules.conf
--- dbus-1.3.0.orig/test/data/valid-config-files/many-rules.conf	2010-02-02 15:18:40 +0100
+++ dbus-1.3.0/test/data/valid-config-files/many-rules.conf	2010-02-02 15:22:07 +0100
@@ -16,8 +16,8 @@
     <deny own="org.freedesktop.System"/>
     <deny send_destination="org.freedesktop.System"/>
     <deny receive_sender="org.freedesktop.System"/>
-    <deny user="root"/>
-    <deny group="root"/>
+    <deny user="Administrator"/>
+    <deny group="+Administrators"/>
     <allow send_type="error"/>
     <allow send_type="method_call"/>
     <allow send_type="method_return"/>
@@ -34,8 +34,8 @@
     <deny own="org.freedesktop.System"/>
     <deny send_destination="org.freedesktop.System"/>
     <deny receive_sender="org.freedesktop.System"/>
-    <deny user="root"/>
-    <deny group="root"/>
+    <deny user="Administrator"/>
+    <deny group="+Administrators"/>
     <allow send_type="error"/>
     <allow send_type="method_call"/>
     <allow send_type="method_return"/>
diff -ru dbus-1.3.0.orig/test/data/valid-config-files/system.d/test.conf dbus-1.3.0/test/data/valid-config-files/system.d/test.conf
--- dbus-1.3.0.orig/test/data/valid-config-files/system.d/test.conf	2010-02-02 15:18:40 +0100
+++ dbus-1.3.0/test/data/valid-config-files/system.d/test.conf	2010-02-02 15:22:07 +0100
@@ -7,7 +7,7 @@
 
   <!-- Only root can own the FooService service, and 
        this user can only send the one kind of message -->
-  <policy user="root">
+  <policy user="Administrator">
     <allow own="org.foo.FooService"/>
     <allow send_interface="org.foo.FooBroadcastInterface"/>
   </policy>
