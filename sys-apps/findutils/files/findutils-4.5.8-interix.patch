diff -ru -x *.Po -x *.Plo findutils-4.5.8.orig/configure findutils-4.5.8/configure
--- findutils-4.5.8.orig/configure	Tue Oct 19 08:26:35 2010
+++ findutils-4.5.8/configure	Mon Oct 18 17:29:59 2010
@@ -22399,6 +22399,12 @@
   fi
 fi
 
+case $host_os in
+interix*)
+  ac_list_mounted_fs="not_supported_on_windows"
+  ;;
+esac
+
 if test -z "$ac_list_mounted_fs"; then
   as_fn_error "could not determine how to read list of mounted file systems" "$LINENO" 5
   # FIXME -- no need to abort building the whole package
diff -ru -x *.Po -x *.Plo findutils-4.5.8.orig/doc/stamp-vti findutils-4.5.8/doc/stamp-vti
--- findutils-4.5.8.orig/doc/stamp-vti	Tue Oct 19 08:22:45 2010
+++ findutils-4.5.8/doc/stamp-vti	Tue Oct 19 08:26:21 2010
@@ -1,4 +1,4 @@
-@set UPDATED 6 April 2010
+@set UPDATED 7 April 2010
 @set UPDATED-MONTH April 2010
 @set EDITION 4.5.8
 @set VERSION 4.5.8
diff -ru -x *.Po -x *.Plo findutils-4.5.8.orig/doc/version.texi findutils-4.5.8/doc/version.texi
--- findutils-4.5.8.orig/doc/version.texi	Tue Oct 19 08:22:45 2010
+++ findutils-4.5.8/doc/version.texi	Tue Oct 19 08:26:20 2010
@@ -1,4 +1,4 @@
-@set UPDATED 6 April 2010
+@set UPDATED 7 April 2010
 @set UPDATED-MONTH April 2010
 @set EDITION 4.5.8
 @set VERSION 4.5.8
diff -ru -x *.Po -x *.Plo findutils-4.5.8.orig/find/fstype.c findutils-4.5.8/find/fstype.c
--- findutils-4.5.8.orig/find/fstype.c	Tue Oct 19 08:26:35 2010
+++ findutils-4.5.8/find/fstype.c	Mon Oct 18 17:22:11 2010
@@ -193,8 +193,10 @@
 static struct mount_entry *
 must_read_fs_list (bool need_fs_type)
 {
+#ifndef __INTERIX
   struct mount_entry *entries = read_file_system_list (need_fs_type);
   if (NULL == entries)
+#endif
     {
       /* We cannot determine for sure which file we were trying to
        * use because gnulib has abstracted all that stuff away.
@@ -202,7 +204,11 @@
        */
       error (EXIT_FAILURE, 0, _("Cannot read mounted file system list"));
     }
+#ifndef __INTERIX
   return entries;
+#else
+  return NULL;
+#endif
 }
 
 
@@ -304,6 +310,7 @@
    * result of this operation.   If we can't get the fs list
    * but we never need the information, there is no need to fail.
    */
+#ifndef __INTERIX
   for (entry = entries = read_file_system_list (false);
        entry;
        entry = entry->me_next)
@@ -327,6 +334,7 @@
     {
       *n = used;
     }
+#endif
   return result;
 }
 
diff -ru -x *.Po -x *.Plo findutils-4.5.8.orig/find/parser.c findutils-4.5.8/find/parser.c
--- findutils-4.5.8.orig/find/parser.c	Tue Oct 19 08:22:46 2010
+++ findutils-4.5.8/find/parser.c	Tue Oct 19 08:25:45 2010
@@ -1076,7 +1076,12 @@
     }
   else
     {
-      const struct mount_entry *entries = read_file_system_list(false);
+      const struct mount_entry *entries = 
+      #ifndef __INTERIX
+        read_file_system_list(false);
+      #else
+        NULL;
+      #endif
       if (entries)
 	{
 	  const struct mount_entry *entry;
diff -ru -x *.Po -x *.Plo findutils-4.5.8.orig/gnulib/lib/mountlist.c findutils-4.5.8/gnulib/lib/mountlist.c
--- findutils-4.5.8.orig/gnulib/lib/mountlist.c	Tue Oct 19 08:26:35 2010
+++ findutils-4.5.8/gnulib/lib/mountlist.c	Mon Oct 18 17:22:11 2010
@@ -336,6 +336,9 @@
 struct mount_entry *
 read_file_system_list (bool need_fs_type)
 {
+#ifdef __INTERIX
+  return NULL;
+#else
   struct mount_entry *mount_list;
   struct mount_entry *me;
   struct mount_entry **mtail = &mount_list;
@@ -877,4 +880,5 @@
     errno = saved_errno;
     return NULL;
   }
+#endif /* !__INTERIX */
 }
diff -ru -x *.Po -x *.Plo findutils-4.5.8.orig/gnulib/m4/ls-mntd-fs.m4 findutils-4.5.8/gnulib/m4/ls-mntd-fs.m4
--- findutils-4.5.8.orig/gnulib/m4/ls-mntd-fs.m4	Tue Oct 19 08:26:35 2010
+++ findutils-4.5.8/gnulib/m4/ls-mntd-fs.m4	Mon Oct 18 17:22:11 2010
@@ -325,6 +325,12 @@
   fi
 fi
 
+case $host_os in
+interix*)
+  ac_list_mounted_fs="not_supported_on_windows"
+  ;;
+esac
+
 if test -z "$ac_list_mounted_fs"; then
   AC_MSG_ERROR([could not determine how to read list of mounted file systems])
   # FIXME -- no need to abort building the whole package
diff -ru -x *.Po -x *.Plo findutils-4.5.8.orig/lib/fdleak.c findutils-4.5.8/lib/fdleak.c
--- findutils-4.5.8.orig/lib/fdleak.c	Tue Oct 19 08:22:53 2010
+++ findutils-4.5.8/lib/fdleak.c	Tue Oct 19 08:23:13 2010
@@ -118,6 +118,8 @@
 
   /* We assume if RLIMIT_NOFILE is defined, all the related macros are, too. */
 #if defined (HAVE_GETRUSAGE) && defined (RLIMIT_NOFILE)
+  /* not on interix :( */
+#ifndef __INTERIX
   /* There are really only two cases here for the return value,
      but we keep the conditions separate because a different thing is
      going on in each case.
@@ -133,6 +135,7 @@
       else
 	return (int) fd_limit.rlim_cur;
     }
+#endif /* interix */
 #endif
   /* cannot determine the limit's value */
   return open_max;
