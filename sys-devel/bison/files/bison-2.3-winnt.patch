diff -ru bison-2.3.orig/lib/subpipe.c bison-2.3/lib/subpipe.c
--- bison-2.3.orig/lib/subpipe.c	2008-10-09 10:36:50 +0200
+++ bison-2.3/lib/subpipe.c	2008-10-09 10:36:20 +0200
@@ -112,6 +112,10 @@
   int pipe_fd[2];
   int child_fd[2];
   pid_t pid;
+#ifdef _WIN32
+  int save_fd[2];
+  HANDLE hProc;
+#endif
 
   if (pipe (child_fd) != 0
       || (child_fd[0] = fd_safer (child_fd[0])) < 0
@@ -122,6 +126,7 @@
     error (EXIT_FAILURE, errno,
 	   "pipe");
 
+#ifndef _WIN32
   pid = vfork ();
   if (pid < 0)
     error (EXIT_FAILURE, errno,
@@ -144,6 +149,21 @@
 
       _exit (errno == ENOENT ? 127 : 126);
     }
+#else
+	  save_fd[0] = dup(STDIN_FILENO);
+	  save_fd[1] = dup(STDOUT_FILENO);
+	  dup2 (child_fd[0], STDIN_FILENO);
+      dup2 (child_fd[1], STDOUT_FILENO);
+
+	  hProc = spawnvp(_P_NOWAIT, argv[0], argv);
+	  if(hProc == INVALID_HANDLE_VALUE)
+	  	error(EXIT_FAILURE, errno, "spawn");
+	  pid = (pid_t)GetProcessId(hProc);
+	  CloseHandle(hProc);
+
+	  dup2 (save_fd[0], STDIN_FILENO);
+	  dup2 (save_fd[1], STDOUT_FILENO);
+#endif
 
   /* Parent.  */
   close (child_fd[0]);
@@ -176,6 +196,22 @@
 		 : "subsidiary program `%s' failed (exit status %d)"),
 	       program, status);
     }
+#elif defined(_WIN32)
+  HANDLE hProc = OpenProcess(PROCESS_QUERY_INFORMATION | SYNCHRONIZE, FALSE, pid);
+  long status;
+
+  if(hProc == INVALID_HANDLE_VALUE)
+	error(EXIT_FAILURE, 0, "OpenProcess");
+
+  if(WaitForSingleObject(hProc, INFINITE) == WAIT_FAILED)
+  	error(EXIT_FAILURE, 0, "WaitForSingleObject");
+
+  if(!GetExitCodeProcess(hProc, &status))
+  	error(EXIT_FAILURE, 0, "GetExitCodeProcess");
+
+  if(status) {
+	error(EXIT_FAILURE, 0, _("subsidiary program `%s' failed (exit status %d)"), program, status);
+  }
 #endif
 }
 
diff -ru bison-2.3.orig/lib/unistd-safer.h bison-2.3/lib/unistd-safer.h
--- bison-2.3.orig/lib/unistd-safer.h	2008-10-09 10:36:50 +0200
+++ bison-2.3/lib/unistd-safer.h	2008-10-09 10:36:20 +0200
@@ -18,6 +18,15 @@
 
 /* Written by Paul Eggert.  */
 
+#ifdef _WIN32
+# include <windows.h>
+# include <io.h>
+# include <fcntl.h>
+
+# define pipe(x) _pipe(x, 65536, _O_BINARY)
+#endif
+
+
 int dup_safer (int);
 int fd_safer (int);
 int pipe_safer (int[2]);
diff -ru bison-2.3.orig/m4/m4.m4 bison-2.3/m4/m4.m4
--- bison-2.3.orig/m4/m4.m4	2008-10-09 10:36:36 +0200
+++ bison-2.3/m4/m4.m4	2008-10-09 10:37:30 +0200
@@ -26,4 +26,14 @@
   case `$M4 --help < /dev/null 2>&1` in
     *reload-state*) ac_cv_prog_gnu_m4=yes ;;
   esac
-fi])])
+fi])
+
+AC_MSG_CHECKING([real name of M4])
+
+if readlink --help | grep '\-e' > /dev/null 2>&1; then
+	M4=$(readlink -e "$M4")
+fi
+
+AC_MSG_RESULT([$M4])
+
+])
