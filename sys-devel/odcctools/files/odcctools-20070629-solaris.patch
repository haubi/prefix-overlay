--- libstuff/writeout.c.orig	2007-10-14 21:05:42.638028582 +0200
+++ libstuff/writeout.c	2007-10-14 21:19:08.082902489 +0200
@@ -22,6 +22,7 @@
  */
 #ifndef RLD
 #include <sys/time.h>
+#include <limits.h>
 #include <mach/mach.h>
 #include "stuff/openstep_mach.h"
 #include <libc.h>
@@ -140,7 +141,7 @@
 	 */
 	(void)unlink(output);
 	if(throttle != NULL)
-	    fsync = O_FSYNC;
+	    fsync = O_SYNC;
 	else
 	    fsync = 0;
         if(output != NULL){
--- libstuff/dylib_roots.c.orig	2007-10-14 21:20:41.485802921 +0200
+++ libstuff/dylib_roots.c	2007-10-14 21:28:27.112944274 +0200
@@ -28,7 +28,7 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <sys/param.h>
-#ifndef __OPENSTEP__
+#if !defined(__OPENSTEP__) && !defined(__sun__)
 #include <fts.h>
 #endif
 #include <sys/errno.h>
@@ -115,7 +115,7 @@
 char *install_name,
 const char *root)
 {
-#ifndef __OPENSTEP__
+#if !defined(__OPENSTEP__) && !defined(__sun__)
     char *base_name, start[MAXPATHLEN + 1], *image_file_name;
     char const *paths[2];
     FTS *fts;
--- libstuff/crc32.c	2007-10-14 21:38:43.415604195 +0200
+++ libstuff/crc32.c.orig	2007-10-14 21:36:43.628594283 +0200
@@ -57,7 +57,7 @@
  */
 #include <sys/types.h>
 
-static const u_int32_t crctab[] = {
+static const uint32_t crctab[] = {
 	0x0,
 	0x04c11db7, 0x09823b6e, 0x0d4326d9, 0x130476dc, 0x17c56b6b,
 	0x1a864db2, 0x1e475005, 0x2608edb8, 0x22c9f00f, 0x2f8ad6d6,
@@ -123,7 +123,7 @@
 
     register const u_char *p;
     register int nr;
-    register u_int32_t crc;
+    register uint32_t crc;
 
     crc = 0;
     for (nr = len, p = buf; nr--; ++p) {
--- include/foreign/sys/attr.h.orig	2007-10-14 21:42:57.591652948 +0200
+++ include/foreign/sys/attr.h	2007-10-14 21:48:52.437989723 +0200
@@ -4,10 +4,10 @@
 #include <sys/types.h>
 #include <stdint.h>
 
-typedef u_int32_t attrgroup_t;
+typedef uint32_t attrgroup_t;
 struct attrlist {
   u_short bitmapcount;                    /* number of attr. bit sets in list (should be 5) */
-  u_int16_t reserved;                             /* (to maintain 4-byte alignment) */
+  uint16_t reserved;                             /* (to maintain 4-byte alignment) */
   attrgroup_t commonattr;                 /* common attribute group */
   attrgroup_t volattr;                    /* Volume attribute group */
   attrgroup_t dirattr;                    /* directory attribute group */
--- libstuff/emulated.c.orig	2007-10-14 21:41:39.091947948 +0200
+++ libstuff/emulated.c	2007-10-14 21:51:34.613470077 +0200
@@ -96,7 +96,7 @@
   void *addr = NULL;
 
   addr = mmap(0, size, PROT_READ|PROT_WRITE,
-	      MAP_PRIVATE|MAP_FILE, fd, offset);
+	      MAP_PRIVATE, fd, offset);
 
   if(addr == (void *)-1) {
     return 1;
--- ar/archive.h.orig	2007-10-14 21:58:28.034128563 +0200
+++ ar/archive.h	2007-10-14 22:03:34.607162988 +0200
@@ -112,14 +112,22 @@
 } CHDR;
 
 /* Header format strings. */
-#define	HDR1	"%s%-13d%-12ld%-6u%-6u%-8o%-10qd%2s"
-#define	HDR2	"%-16.16s%-12ld%-6u%-6u%-8o%-10qd%2s"
+#define	HDR1	"%s%-13d%-12ld%-6u%-6u%-8o%-10lld%2s"
+#define	HDR2	"%-16.16s%-12ld%-6u%-6u%-8o%-10lld%2s"
 
 #define	OLDARMAXNAME	15
-#define	HDR3	"%-16.15s%-12ld%-6u%-6u%-8o%-10qd%2s"
+#define	HDR3	"%-16.15s%-12ld%-6u%-6u%-8o%-10lld%2s"
 
 
-#include <sys/cdefs.h>
+#ifdef __STDC__
+#ifndef __P
+#define	__P(x)	x
+#endif
+#else
+#ifndef __P
+#define	__P(x)	()
+#endif
+#endif /* __STDC__ */
 
 struct stat;
 
--- ar/append.c.orig	2007-10-14 21:55:30.282899645 +0200
+++ ar/append.c	2007-10-14 22:06:59.995872227 +0200
@@ -69,7 +69,7 @@
 #include <sys/param.h>
 #include <sys/stat.h>
 
-#include <err.h>
+#include <errno.h>
 #include <fcntl.h>
 #include <unistd.h>
 #include <dirent.h>
@@ -101,7 +100,7 @@
 	SETCF(0, 0, afd, archive, WPAD);
 	for (eval = 0; (file = *argv++);) {
 		if ((fd = open(file, O_RDONLY)) < 0) {
-			warn("%s", file);
+			fprintf(stderr, "ar: %s: %s\n", file, strerror(errno));
 			eval = 1;
 			continue;
 		}
--- ar/misc.c.orig	2007-10-14 22:30:29.853213314 +0200
+++ ar/misc.c	2007-10-14 22:34:49.935566002 +0200
@@ -69,7 +69,6 @@
 #include <sys/param.h>
 
 #include <dirent.h>
-#include <err.h>
 #include <errno.h>
 #include <signal.h>
 #include <stdio.h>
@@ -138,7 +137,7 @@
 {
 
 	for (; *argv; ++argv)
-		warnx("%s: not found in archive", *argv);
+		fprintf(stderr, "ar: %s: not found in archive\n", *argv);
 }
 
 char *
@@ -165,7 +164,8 @@
 {
 
 	errno = EINVAL;
-	err(1, "%s", archive);
+	fprintf(stderr, "ar: %s: %s\n", archive, strerror(errno));
+	exit(1);
 }
 
 void
@@ -173,5 +173,6 @@
 	char *name;
 {
 
-	err(1, "%s", name);
+	fprintf(stderr, "ar: %s: %s\n", name, strerror(errno));
+	exit(1);
 }
--- ar/move.c.orig	2007-10-14 22:35:32.860934383 +0200
+++ ar/move.c	2007-10-14 22:36:02.503787511 +0200
@@ -71,7 +71,7 @@
 
 #include <ar.h>
 #include <dirent.h>
-#include <err.h>
+#include <errno.h>
 #include <fcntl.h>
 #include <stdio.h>
 #include <unistd.h>
@@ -136,7 +136,7 @@
 	}
 
 	if (mods) {
-		warnx("%s: archive member not found", posarg);
+		fprintf(stderr, "ar: %s: archive member not found\n", posarg);
 		close_archive(afd);
 		return (1);
 	}
--- ar/replace.c.orig	2007-10-14 22:37:50.901104976 +0200
+++ ar/replace.c	2007-10-14 22:39:01.351258112 +0200
@@ -71,7 +71,7 @@
 
 #include <ar.h>
 #include <dirent.h>
-#include <err.h>
+#include <errno.h>
 #include <fcntl.h>
 #include <stdio.h>
 #include <string.h>
@@ -127,7 +127,7 @@
 		if (*argv && (file = files(argv))) {
 			if ((sfd = open(file, O_RDONLY)) < 0) {
 				errflg = 1;
-				warn("%s", file);
+				fprintf(stderr, "ar: %s: %s\n", file, strerror(errno));
 				goto useold;
 			}
 			(void)fstat(sfd, &sb);
@@ -164,7 +164,7 @@
 	}
 
 	if (mods) {
-		warnx("%s: archive member not found", posarg);
+		fprintf(stderr, "ar: %s: archive member not found\n", posarg);
                 close_archive(afd);
                 return (1);
         }
@@ -175,7 +175,7 @@
 			(void)printf("a - %s\n", file);
 		if ((sfd = open(file, O_RDONLY)) < 0) {
 			errflg = 1;
-			warn("%s", file);
+			fprintf(stderr, "ar: %s: %s\n", file, strerror(errno));
 			continue;
 		}
 		(void)fstat(sfd, &sb);
--- ar/ar.c.orig	2007-10-14 22:08:35.576761376 +0200
+++ ar/ar.c	2007-10-14 22:41:48.731419393 +0200
@@ -73,8 +73,7 @@
 
 #include <ar.h>
 #include <dirent.h>
-#include <err.h>
-#include <paths.h>
+#include <errno.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
@@ -120,8 +119,10 @@
 	 * Fix it, if necessary.
 	*/
 	if (*argv[1] != '-') {
-		if (!(p = malloc((u_int)(strlen(argv[1]) + 2))))
-			err(1, NULL);
+		if (!(p = malloc((u_int)(strlen(argv[1]) + 2)))) {
+			fprintf(stderr, "ar: %s\n", strerror(errno));
+			exit(1);
+		}
 		*p = '-';
 		(void)strcpy(p + 1, argv[1]);
 		argv[1] = p;
@@ -211,18 +212,18 @@
 
 	/* One of -dmpqrtsx required. */
 	if (!(options & (AR_D|AR_M|AR_P|AR_Q|AR_R|AR_S|AR_T|AR_X))) {
-		warnx("one of options -dmpqrtsx is required");
+		fprintf(stderr, "ar: one of options -dmpqrtsx is required\n");
 		usage();
 	}
 	/* Only one of -a and -bi allowed. */
 	if (options & AR_A && options & AR_B) {
-		warnx("only one of -a and -[bi] options allowed");
+		fprintf(stderr, "ar: only one of -a and -[bi] options allowed\n");
 		usage();
 	}
 	/* -ab require a position argument. */
 	if (options & (AR_A|AR_B)) {
 		if (!(posarg = *argv++)) {
-			warnx("no position operand specified");
+			fprintf(stderr, "ar: no position operand specified\n");
 			usage();
 		}
 		posname = rname(posarg);
@@ -250,13 +251,13 @@
 		badoptions("-x");
 
 	if (!(archive = *argv++)) {
-		warnx("no archive specified");
+		fprintf(stderr, "ar: no archive specified\n");
 		usage();
 	}
 
 	/* -dmqr require a list of archive elements. */
 	if (options & (AR_D|AR_M|AR_Q|AR_R) && !*argv) {
-		warnx("no archive members specified");
+		fprintf(stderr, "ar: no archive members specified\n");
 		usage();
 	}
 
@@ -296,7 +297,7 @@
 	char *arg;
 {
 
-	warnx("illegal option combination for %s", arg);
+	fprintf(stderr, "ar: illegal option combination for %s\n", arg);
 	usage();
 }
 
--- ar/extract.c.orig	2007-10-14 22:28:23.062260026 +0200
+++ ar/extract.c	2007-10-14 22:43:36.782698975 +0200
@@ -71,7 +71,7 @@
 #include <sys/stat.h>
 
 #include <dirent.h>
-#include <err.h>
+#include <errno.h>
 #include <fcntl.h>
 #include <stdio.h>
 #include <string.h>
@@ -118,7 +118,7 @@
 			continue;
 
 		if ((tfd = open(file, O_WRONLY|O_CREAT|O_TRUNC, S_IWUSR)) < 0) {
-			warn("%s", file);
+			fprintf(stderr, "ar: %s: %s\n", file, strerror(errno));
 			skip_arobj(afd);
 			eval = 1;
 			continue;
@@ -132,13 +132,13 @@
 		copy_ar(&cf, chdr.size);
 
 		if (fchmod(tfd, (short)chdr.mode)) {
-			warn("chmod: %s", file);
+			fprintf(stderr, "ar: chmod: %s: %s\n", file, strerror(errno));
 			eval = 1;
 		}
 		if (options & AR_O) {
 			tv[0].tv_sec = tv[1].tv_sec = chdr.date;
 			if (utimes(file, tv)) {
-				warn("utimes: %s", file);
+				fprintf(stderr, "ar: utimes: %s: %s", file, strerror(errno));
 				eval = 1;
 			}
 		}
--- ar/archive.c.orig	2007-10-14 22:14:18.497908602 +0200
+++ ar/archive.c	2007-10-14 22:46:24.270212517 +0200
@@ -71,7 +71,6 @@
 
 #include <ar.h>
 #include <dirent.h>
-#include <err.h>
 #include <errno.h>
 #include <fcntl.h>
 #include <stdio.h>
@@ -95,14 +94,27 @@
 {
 	int created, fd, nr, r;
 	char buf[SARMAG];
+#if __sun__
+	struct flock fl;
+
+	fl.l_type   = F_WRLCK;
+	fl.l_whence = SEEK_SET;
+	fl.l_start  = 0;
+	fl.l_len    = 0;
+	fl.l_pid    = getpid();
+#endif
 	
 	created = 0;
 	if (mode & O_CREAT) {
 		mode |= O_EXCL;
+#ifdef DEFFILEMODE
 		if ((fd = open(archive, mode, DEFFILEMODE)) >= 0) {
+#else
+		if ((fd = open(archive, mode, (S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH))) >= 0) {
+#endif
 			/* POSIX.2 puts create message on stderr. */
 			if (!(options & AR_C))
-				warnx("creating archive %s", archive);
+				fprintf(stderr, "ar: creating archive %s", archive);
 			created = 1;
 			goto opened;
 		}
@@ -110,7 +122,11 @@
 			error(archive);
 		mode &= ~O_EXCL;
 	}
+#ifdef DEFFILEMODE
 	if ((fd = open(archive, mode, DEFFILEMODE)) < 0)
+#else
+	if ((fd = open(archive, mode, (S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH))) < 0)
+#endif
 		error(archive);
 
 	/* 
@@ -119,7 +135,11 @@
 	 * it's going across NFS).
 	 */
 opened:
+#ifdef __sun__
+	r = fcntl(fd, F_SETLK, &fl);
+#else
 	r = flock(fd, LOCK_EX|LOCK_NB);
+#endif
 	if (r) {
 		switch (errno)
 		{
@@ -306,7 +326,7 @@
 		if (options & AR_TR) {
 			if (lname > OLDARMAXNAME) {
 				(void)fflush(stdout);
-				warnx("warning: %s truncated to %.*s",
+				fprintf(stderr, "ar: warning: %s truncated to %.*s\n",
 				    name, OLDARMAXNAME, name);
 				(void)fflush(stderr);
 			}
@@ -391,6 +411,9 @@
 	from = cfp->rfd;
 	to = cfp->wfd;
 	sz = size;
+#ifndef MIN
+#define MIN(a,b) (((a)<(b))?(a):(b))
+#endif
 	while (sz && (nr = read(from, buf, MIN(sz, sizeof(buf)))) > 0) {
 		sz -= nr;
 		for (off = 0; off < nr; nr -= off, off += nw)
--- misc/libtool.c.orig	2007-10-15 18:08:29.953173571 +0200
+++ misc/libtool.c	2007-10-15 18:08:39.521123932 +0200
@@ -2246,7 +2246,7 @@
 	   (int)sizeof(toc_ar_hdr.ar_date),
 	       (long int)stat_buf.st_mtime + 5);
 	for(i = 0; i < narchs; i++){
-	    if(lseek(fd, time_offsets[i], L_SET) == -1){
+	    if(lseek(fd, time_offsets[i], SEEK_SET) == -1){
 		system_error("can't lseek in output file: %s", output);
 		return;
 	    }
