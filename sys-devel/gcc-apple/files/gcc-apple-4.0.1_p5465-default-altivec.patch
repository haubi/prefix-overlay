* reverse patch to gain 10.4 behaviour for AltiVec.

diff -aur gcc-apple-4.0.1_p5363-r1/work/gcc-5363/gcc/config/rs6000/rs6000-c.c gcc-apple-4.0.1_p5465/work/gcc-5465/gcc/config/rs6000/rs6000-c.c
--- gcc-apple-4.0.1_p5363-r1/work/gcc-5363/gcc/config/rs6000/rs6000-c.c	2005-07-10 00:14:08 +0200
+++ gcc-apple-4.0.1_p5465/work/gcc-5465/gcc/config/rs6000/rs6000-c.c	2006-03-22 00:45:38 +0100
@@ -245,22 +245,22 @@
       builtin_define ("__bool=__attribute__((altivec(bool__))) unsigned");
 
       /* APPLE LOCAL begin AltiVec */
+      builtin_define ("vector=vector");
+      builtin_define ("pixel=pixel");
+      builtin_define ("_Bool=_Bool"); 
+      builtin_define ("bool=bool");
+      init_vector_keywords (pfile);
+
+      /* Indicate that the compiler supports Apple AltiVec syntax,
+	 including context-sensitive keywords.  */
       if (rs6000_altivec_pim)
 	{
-	  builtin_define ("vector=vector");
-	  builtin_define ("pixel=pixel");
-	  builtin_define ("_Bool=_Bool"); 
-	  builtin_define ("bool=bool");
-	  init_vector_keywords (pfile);
-	  
-	  /* Indicate that the compiler supports Apple AltiVec syntax,
-	     including context-sensitive keywords.  */
 	  builtin_define ("__APPLE_ALTIVEC__");
 	  builtin_define ("vec_step(T)=(sizeof (__typeof__(T)) / sizeof (__typeof__(T) __attribute__((altivec(element__)))))");
-      
-	  /* Enable context-sensitive macros.  */
-	  cpp_get_callbacks (pfile)->macro_to_expand = rs6000_macro_to_expand;
 	}
+
+      /* Enable context-sensitive macros.  */
+      cpp_get_callbacks (pfile)->macro_to_expand = rs6000_macro_to_expand;
       /* APPLE LOCAL end AltiVec */
     }
   if (TARGET_SPE)
