original by 6thpink <6thpink@terra.es>
compiler warnings fixed by grobian@gentoo.org

Sólo en bubblemon-dockapp-1.46-patched/: bubblemon
diff -rU3 bubblemon-dockapp-1.46/bubblemon.c bubblemon-dockapp-1.46-patched/bubblemon.c
--- bubblemon-dockapp-1.46/bubblemon.c	2003-10-01 02:37:32.000000000 +0200
+++ bubblemon-dockapp-1.46-patched/bubblemon.c	2007-04-10 02:36:48.000000000 +0200
@@ -664,7 +664,7 @@
     /* y coordinates are counted from here multiplied by 256 */
     /* to get actual screen coordinate, divide by 256 */
     buf = bm.bubblebuf;
-    col = bm.colors;
+    col = (unsigned int*)bm.colors;
 
     waterlevel_max = 0;
     waterlevel_min = MAKEY(56);
@@ -960,8 +960,8 @@
     char *from, *to;
 
     for (j = 0; j < 8; j++) {
-	from = mem_screen + 56 * 3 * (srcy + j) + srcx * 3;
-	to = bm.mem_buf + 56 * 3 * (desty + j) + destx * 3;
+	from = (char*)(mem_screen + 56 * 3 * (srcy + j) + srcx * 3);
+	to = (char*)(bm.mem_buf + 56 * 3 * (desty + j) + destx * 3);
 	i = 12;
 	while (i--)
 	    *to++ = *from++;
@@ -1009,7 +1009,7 @@
     int d;
 
     pixels_per_byte = 100;
-    p = history;
+    p = (int*)history;
 
     for (j = 0; j < num; j++) {
 	if (p[0] > pixels_per_byte)
@@ -1017,16 +1017,16 @@
 	p++;
     }
 
-    p = history;
+    p = (int*)history;
 
     for (k = 0; k < num; k++) {
 	d = (1.0 * p[0] / pixels_per_byte) * size;
 
 	for (j = 0; j < size; j++) {
 	    if (j < d - 2)
-		draw_pixel(k, size - j - 1, buf, "\x00\x7d\x71");
+		draw_pixel(k, size - j - 1, buf, (unsigned char*)"\x00\x7d\x71");
 	    else if (j < d)
-		draw_pixel(k, size - j - 1, buf, "\x20\xb6\xae");
+		draw_pixel(k, size - j - 1, buf, (unsigned char*)"\x20\xb6\xae");
 	}
 	p++;
     }
@@ -1034,7 +1034,7 @@
     for (j = pixels_per_byte - 100; j > 0; j -= 100) {
 	for (k = 0; k < num; k++) {
 	    d = ((float) size / pixels_per_byte) * j;
-	    draw_pixel(k, size - d - 1, buf, "\x71\xe3\x71");
+	    draw_pixel(k, size - d - 1, buf, (unsigned char*)"\x71\xe3\x71");
 	}
     }
 }
@@ -1067,18 +1067,18 @@
     } else {
 	/* draw memory */
 	if (memscreen_megabytes)
-	    snprintf(number, 8, "%6lluM", bm.mem_used >> 20);
+	    snprintf(number, 8, "%6zuM", bm.mem_used >> 20);
 	else
-	    snprintf(number, 8, "%6lluK", bm.mem_used >> 10);
+	    snprintf(number, 8, "%6zuK", bm.mem_used >> 10);
 	snprintf(percent, 4, "%03d", bm.mem_percent);
 	draw_string(number, 2, 1, (bm.mem_percent > 90) ? 1 : 0);
 	draw_string(percent, 38, 1, (bm.mem_percent > 90) ? 1 : 0);
 
 	/* draw swap */
 	if (memscreen_megabytes)
-	    snprintf(number, 8, "%6lluM", bm.swap_used >> 20);
+	    snprintf(number, 8, "%6zuM", bm.swap_used >> 20);
 	else
-	    snprintf(number, 8, "%6lluK", bm.swap_used >> 10);
+	    snprintf(number, 8, "%6zuK", bm.swap_used >> 10);
 	snprintf(percent, 4, "%03d", bm.swap_percent);
 	draw_string(number, 2, 10, (bm.swap_percent > 90) ? 1 : 0);
 	draw_string(percent, 38, 10, (bm.swap_percent > 90) ? 1 : 0);
Sólo en bubblemon-dockapp-1.46-patched/: bubblemon.o
diff -rU3 bubblemon-dockapp-1.46/include/bubblemon.h bubblemon-dockapp-1.46-patched/include/bubblemon.h
--- bubblemon-dockapp-1.46/include/bubblemon.h	2001-02-17 10:03:01.000000000 +0100
+++ bubblemon-dockapp-1.46-patched/include/bubblemon.h	2007-04-10 02:27:55.000000000 +0200
@@ -43,15 +43,6 @@
 #define MAKE_INTEGER(x) ((int)((x)*MULTIPLIER+0.5))
 #define ROLLVALUE 100		/* frequency of history rollover */
 
-#ifdef sun
-#include <sys/types.h>
-#if defined (uint64_t)
-  typedef uint64_t u_int64_t;
-#else
-  typedef unsigned long long u_int64_t;
-#endif /* defined (uint64_t) */
-#endif
-
 typedef struct {
     int x;			/* Horizontal coordinate */
     int y;			/* Vertical coordinate   */
diff -rU3 bubblemon-dockapp-1.46/Makefile bubblemon-dockapp-1.46-patched/Makefile
--- bubblemon-dockapp-1.46/Makefile	2003-10-04 02:22:07.000000000 +0200
+++ bubblemon-dockapp-1.46-patched/Makefile	2007-04-10 02:20:03.000000000 +0200
@@ -12,13 +12,7 @@
 # no user serviceable parts below
 EXTRA += $(WMAN)
 # optimization cflags
-CFLAGS = -O3 -ansi -Wall `gtk-config --cflags` ${EXTRA}
-# profiling cflags
-# CFLAGS = -ansi -Wall -pg -O3 `gtk-config --cflags` ${EXTRA} -DPRO
-# test coverage cflags
-# CFLAGS = -fprofile-arcs -ftest-coverage -Wall -ansi -g `gtk-config --cflags` ${EXTRA} -DPRO
-
-
+CFLAGS += -ansi -Wall ${EXTRA} `pkg-config gtk+-2.0 --libs --cflags | sed -e "s/-lgtk-x11-2.0//g" -e "s/-lpango-1.0//g" -e "s/-lcairo//g" -e "s/-lglib-2.0//g" -e "s/-ldl//g" -e "s/-lgmodule-2.0//g" -e "s/-lpangocairo-1.0//g" -e "s/-lgobject-2.0//g" -e "s/-lgdk_pixbuf-2.0//g" -e "s/-latk-1.0//g" -e "s/-lm//g"`
 SHELL=sh
 OS = $(shell uname -s)
 OBJS = bubblemon.o
@@ -27,21 +21,19 @@
 # special things for Linux
 ifeq ($(OS), Linux)
     OBJS += sys_linux.o
-    LIBS = `gtk-config --libs | sed "s/-lgtk//g"`
     INSTALL = -m 755
 endif
 
 # special things for FreeBSD
 ifeq ($(OS), FreeBSD)
     OBJS += sys_freebsd.o
-    LIBS = `gtk-config --libs | sed "s/-lgtk//g"` -lkvm
+    LIBS += -lkvm
     INSTALL = -c -g kmem -m 2755 -o root
 endif
 
 # special things for OpenBSD
 ifeq ($(OS), OpenBSD)
     OBJS += sys_openbsd.o
-    LIBS = `gtk-config --libs | sed "s/-lgtk//g"`
 endif
 
 #special things for SunOS
@@ -62,9 +54,8 @@
     ifeq ($(COMPILER), gcc)
 	CFLAGS=-O3 -Wall
     endif
-    CFLAGS +=`gtk-config --cflags` ${EXTRA}
     OBJS += sys_sunos.o
-    LIBS = `gtk-config --libs` -lkstat -lm
+    LIBS += -lkstat -lm
     INSTALL = -m 755
 endif
 
diff -rU3 bubblemon-dockapp-1.46/sys_linux.c bubblemon-dockapp-1.46-patched/sys_linux.c
--- bubblemon-dockapp-1.46/sys_linux.c	2003-10-01 04:30:41.000000000 +0200
+++ bubblemon-dockapp-1.46-patched/sys_linux.c	2007-04-10 02:04:53.000000000 +0200
@@ -34,7 +34,7 @@
     FILE *stat;
 
     stat = fopen("/proc/stat", "r");
-    fscanf(stat, "%*s %Ld %Ld %Ld %Ld", &ab, &ac, &ad, &ae);
+    fscanf(stat, "%*s %zd %zd %zd %zd", &ab, &ac, &ad, &ae);
     fclose(stat);
 
     /* Find out the CPU load */
@@ -95,22 +95,22 @@
 	fread(shit, 2048, 1, mem);
 	p = strstr(shit, "MemTotal");
 	if (p) {
-	    sscanf(p, "MemTotal:%Ld", &aa);
+	    sscanf(p, "MemTotal:%zd", &aa);
 	    my_mem_max = aa << 10;
 
 	    p = strstr(p, "Active");
 	    if (p) {
-		sscanf(p, "Active:%Ld", &ab);
+		sscanf(p, "Active:%zd", &ab);
 		my_mem_used = ab << 10;
 
 		p = strstr(p, "SwapTotal");
 		if (p) {
-		    sscanf(p, "SwapTotal:%Ld", &ac);
+		    sscanf(p, "SwapTotal:%zd", &ac);
 		    my_swap_max = ac << 10;
 
 		    p = strstr(p, "SwapFree");
 		    if (p) {
-			sscanf(p, "SwapFree:%Ld", &ad);
+			sscanf(p, "SwapFree:%zd", &ad);
 			my_swap_used = my_swap_max - (ad << 10);
 
 			bm.mem_used = my_mem_used;
@@ -127,9 +127,9 @@
 	mem = fopen("/proc/meminfo", "r");
 	fgets(shit, 2048, mem);
 	
-	fscanf(mem, "%*s %Ld %Ld %Ld %Ld %Ld %Ld", &aa, &ab, &ac,
+	fscanf(mem, "%*s %zd %zd %zd %zd %zd %zd", &aa, &ab, &ac,
 	       &ad, &ae, &af);
-	fscanf(mem, "%*s %Ld %Ld", &ag, &ah);
+	fscanf(mem, "%*s %zd %zd", &ag, &ah);
 	fclose(mem);
 	mem_delay = 25;
 
Sólo en bubblemon-dockapp-1.46-patched/: sys_linux.o
