diff -ru -x '*.Po' -x '*.Plo' fontconfig-2.6.0.orig/conf.d/Makefile.am fontconfig-2.6.0/conf.d/Makefile.am
--- fontconfig-2.6.0.orig/conf.d/Makefile.am	2009-01-22 13:47:45 +0100
+++ fontconfig-2.6.0/conf.d/Makefile.am	2009-01-22 12:07:45 +0100
@@ -85,5 +85,5 @@
 	 for i in ${CONF_LINKS}; do \
 	 	rm -f $$i; \
 		echo rm -f $$i";" ln -s ../conf.avail/$$i .; \
-		ln -s ../conf.avail/$$i .; \
+		cp -f ../conf.avail/$$i .; \
 	 done)
diff -ru -x '*.Po' -x '*.Plo' fontconfig-2.6.0.orig/src/fcatomic.c fontconfig-2.6.0/src/fcatomic.c
--- fontconfig-2.6.0.orig/src/fcatomic.c	2009-01-22 13:47:44 +0100
+++ fontconfig-2.6.0/src/fcatomic.c	2009-01-22 14:42:15 +0100
@@ -55,10 +55,16 @@
 #include <stdlib.h>
 #include <time.h>
 
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__PARITY__)
 #define mkdir(path,mode) _mkdir(path)
 #endif
 
+#ifdef __PARITY__
+# include <internal/pcrt.h>
+#else
+# define PCRT_CONV(x) x
+#endif
+
 #define NEW_NAME	".NEW"
 #define LCK_NAME	".LCK"
 #define TMP_NAME	".TMP-XXXXXX"
@@ -180,7 +186,7 @@
 #ifdef _WIN32
     unlink (atomic->file);
 #endif
-    if (rename ((char *) atomic->new, (char *) atomic->file) < 0)
+    if (rename (PCRT_CONV((char *) atomic->new), PCRT_CONV((char *) atomic->file)) < 0)
 	return FcFalse;
     return FcTrue;
 }
diff -ru -x '*.Po' -x '*.Plo' fontconfig-2.6.0.orig/src/fccache.c fontconfig-2.6.0/src/fccache.c
--- fontconfig-2.6.0.orig/src/fccache.c	2009-01-22 13:47:44 +0100
+++ fontconfig-2.6.0/src/fccache.c	2009-01-22 14:32:45 +0100
@@ -56,6 +56,12 @@
 
 #ifdef _WIN32
 
+#ifdef __PARITY__
+# include <internal/pcrt.h>
+#else
+# define PCRT_CONV(x) x
+#endif
+
 #include <windows.h>
 
 #ifdef __GNUC__
@@ -92,8 +98,8 @@
     char full_path_name[MAX_PATH];
     char *basename;
     DWORD rc;
-    
-    if (!GetFileAttributesEx (file, GetFileExInfoStandard, &wfad))
+
+    if (!GetFileAttributesEx (PCRT_CONV(file), GetFileExInfoStandard, &wfad))
 	return -1;
     
     statb->st_dev = 0;
@@ -102,7 +108,7 @@
      * Call GetLongPathName() to get the spelling of the path name as it
      * is on disk.
      */
-    rc = GetFullPathName (file, sizeof (full_path_name), full_path_name, &basename);
+    rc = GetFullPathName (PCRT_CONV(file), sizeof (full_path_name), full_path_name, &basename);
     if (rc == 0 || rc > sizeof (full_path_name))
 	return -1;
 
@@ -805,7 +811,7 @@
 }
 
 
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__PARITY__)
 #define mkdir(path,mode) _mkdir(path)
 #endif
 
diff -ru -x '*.Po' -x '*.Plo' fontconfig-2.6.0.orig/src/fccfg.c fontconfig-2.6.0/src/fccfg.c
--- fontconfig-2.6.0.orig/src/fccfg.c	2009-01-22 13:47:45 +0100
+++ fontconfig-2.6.0/src/fccfg.c	2009-01-22 12:07:45 +0100
@@ -1531,7 +1531,7 @@
     return FcConfigSubstituteWithPat (config, p, 0, kind);
 }
 
-#if defined (_WIN32)
+#if defined (_WIN32) && !defined(__PARITY__)
 
 #  define WIN32_LEAN_AND_MEAN
 #  define WIN32_EXTRA_LEAN
@@ -1602,7 +1602,7 @@
 
     strcpy ((char *) path, (const char *) dir);
     /* make sure there's a single separator */
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__PARITY__)
     if ((!path[0] || (path[strlen((char *) path)-1] != '/' &&
 		      path[strlen((char *) path)-1] != '\\')) &&
 	!(file[0] == '/' ||
@@ -1668,12 +1668,13 @@
 	}
     }
     
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__PARITY__)
 	if (fontconfig_path[0] == '\0')
 	{
+		char *p;
 		if(!GetModuleFileName(NULL, fontconfig_path, sizeof(fontconfig_path)))
 			goto bail1;
-		char *p = strrchr (fontconfig_path, '\\');
+		p = strrchr (fontconfig_path, '\\');
 		if (p) *p = '\0';
 		strcat (fontconfig_path, "\\fonts");
 	}
diff -ru -x '*.Po' -x '*.Plo' fontconfig-2.6.0.orig/src/fcint.h fontconfig-2.6.0/src/fcint.h
--- fontconfig-2.6.0.orig/src/fcint.h	2009-01-22 13:47:45 +0100
+++ fontconfig-2.6.0/src/fcint.h	2009-01-22 12:07:45 +0100
@@ -36,7 +36,12 @@
 #elif defined(HAVE_STDINT_H)
 #include <stdint.h>
 #else
-#error missing C99 integer data types
+# ifdef _WIN32
+typedef int int32_t;
+typedef short int16_t;
+# else
+#  error missing C99 integer data types
+# endif
 #endif
 #include <string.h>
 #include <ctype.h>
diff -ru -x '*.Po' -x '*.Plo' fontconfig-2.6.0.orig/src/fcstr.c fontconfig-2.6.0/src/fcstr.c
--- fontconfig-2.6.0.orig/src/fcstr.c	2009-01-22 13:47:44 +0100
+++ fontconfig-2.6.0/src/fcstr.c	2009-01-22 13:51:45 +0100
@@ -966,6 +966,9 @@
 #ifdef _WIN32
     FcChar8 full[FC_MAX_FILE_LEN + 2];
     FcChar8 basename[FC_MAX_FILE_LEN + 2];
+#ifdef __PARITY__
+	if(s && s[0] != '/') {
+#endif
     int size = GetFullPathName (s, sizeof (full) -1,
 				full,
 				basename);
@@ -974,6 +977,11 @@
 	perror ("GetFullPathName");
 
     FcConvertDosPath (full);
+#ifdef __PARITY__
+	} else {
+		strcpy(full, s);
+	}
+#endif
     return FcStrCanonAbsoluteFilename (full);
 #else
     if (s[0] == '/')
diff -ru -x '*.Po' -x '*.Plo' fontconfig-2.6.0.orig/src/fcxml.c fontconfig-2.6.0/src/fcxml.c
--- fontconfig-2.6.0.orig/src/fcxml.c	2009-01-22 13:47:45 +0100
+++ fontconfig-2.6.0/src/fcxml.c	2009-01-22 12:07:45 +0100
@@ -2060,6 +2060,7 @@
 #ifdef _WIN32
 	if (strcmp (data, "CUSTOMFONTDIR") == 0)
 	{
+		char *p;
 		FcStrFree (data);
 		data = malloc (1000);
 		if (!data)
@@ -2074,7 +2075,7 @@
 			FcStrFree (data);
 			break;
 		}
-		char *p = strrchr (data, '\\');
+		p = strrchr (data, '\\');
 		if (p) *p = '\0';
 		strcat (data, "\\fonts");
 	}
