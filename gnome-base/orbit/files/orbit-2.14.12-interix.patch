diff -ru -x '*.Po' -x '*.Plo' ORBit2-2.14.12.orig/linc2/src/linc-protocols.c ORBit2-2.14.12/linc2/src/linc-protocols.c
--- ORBit2-2.14.12.orig/linc2/src/linc-protocols.c	2008-03-26 15:55:44 +0100
+++ ORBit2-2.14.12/linc2/src/linc-protocols.c	2008-03-26 16:03:33 +0100
@@ -23,14 +23,20 @@
 #endif
 
 #ifndef G_OS_WIN32
-#include <net/if.h>
+#if defined(__INTERIX)
+// no net/if.h on interix
+// unistd.h damaged on interix
+extern int gethostname(char*, size_t);
+#else
+# include <net/if.h>
+#endif
 #include <sys/ioctl.h>
 #endif
 
 #undef LOCAL_DEBUG
 
 static char *link_tmpdir = NULL;
-#ifdef G_OS_WIN32
+#if defined(G_OS_WIN32)
 static LinkNetIdType use_local_host = LINK_NET_ID_IS_IPADDR;
 #else
 static LinkNetIdType use_local_host = LINK_NET_ID_IS_FQDN;
@@ -62,7 +68,7 @@
 			if (g_stat (dirname, &statbuf) != 0)
 				g_error ("Can not stat %s\n", dirname);
 
-#if !defined (__CYGWIN__) && !defined(_WIN32)
+#if !defined (__CYGWIN__) && !defined(_WIN32) && !defined(__INTERIX)
 			if (statbuf.st_uid != getuid ())
 				g_error ("Owner of %s is not the current user\n", dirname);
 
@@ -102,7 +108,12 @@
 link_set_tmpdir (const char *dir)
 {
 	g_free (link_tmpdir);
+	#if defined(__INTERIX) && (defined(SUN_PATH) && SUN_PATH < 20)
+	d_printf("WARNING: using /tmp as tmpdir on interix always!\n");
+	link_tmpdir = g_strdup ("/tmp");
+	#else
 	link_tmpdir = g_strdup (dir);
+	#endif
 
 	make_local_tmpdir (link_tmpdir);
 }
@@ -161,6 +172,7 @@
 	if ((LINK_NET_ID_IS_IPADDR == which)
 	    || (LINK_NET_ID_IS_CUSTOM == which)) {
 #ifndef G_OS_WIN32
+#ifndef __INTERIX
 		struct sockaddr_in *adr = NULL;
 		struct ifreq *my_ifreqs = NULL;
 		struct ifconf my_ifconf = { 0 };
@@ -211,6 +223,10 @@
 		}
 		strncpy(buf, (const char*)inet_ntoa(adr->sin_addr), len);
 		free(my_ifconf.ifc_req);
+#else
+		g_warning("ip address request not yet handled correctly on interix!");
+		strncpy(buf, "127.0.0.1", len);
+#endif /* __INTERIX */
 
 		/* will be 127.0.0.1 anyway, if no other address is defined... */
 		return buf;
@@ -737,7 +753,11 @@
 
 		gettimeofday (&t, NULL);
 		g_snprintf (buf, sizeof (buf),
+		#if defined(__INTERIX) && (defined(SUN_PATH) && SUN_PATH < 20)
+			    "%s/l%x%x%x%x",
+		#else
 			    "%s/linc-%x-%x-%x%x",
+		#endif
 			    link_tmpdir ? link_tmpdir : "",
 			    pid, idx,
 			    (guint) (rand() ^ t.tv_sec),
@@ -748,13 +768,21 @@
 			g_warning ("'%s' already exists !", buf);
 #endif
 		actual_path = buf;
+
+		#if defined(__INTERIX) && (defined(SUN_PATH) && SUN_PATH < 20)
+		actual_path[SUN_PATH - 1] = '\0';
+		#endif
 	} else 
 		actual_path = (char *)path;
 
 	pathlen = strlen (actual_path) + 1;
 
-	if (pathlen > sizeof (saddr->sun_path))
+	if (pathlen > sizeof (saddr->sun_path)) {
+		#if defined(__INTERIX) && (defined(SUN_PATH) && SUN_PATH < 20)
+		g_warning("UNIX socket path too long!!");
+		#endif
 		return NULL;
+	}
 
 	saddr = g_new0 (struct sockaddr_un, 1);
 
@@ -1151,7 +1179,7 @@
 	link_protocol_is_local_ipv46    /* is_local */
 	},
 #endif
-#ifdef AF_UNIX
+#if defined(AF_UNIX)
 	{
 	"UNIX", 					/* name */
 	AF_UNIX, 					/* family */
diff -ru -x '*.Po' -x '*.Plo' ORBit2-2.14.12.orig/linc2/test/test-linc.c ORBit2-2.14.12/linc2/test/test-linc.c
--- ORBit2-2.14.12.orig/linc2/test/test-linc.c	2008-03-26 15:55:44 +0100
+++ ORBit2-2.14.12/linc2/test/test-linc.c	2008-03-26 16:07:29 +0100
@@ -43,6 +43,11 @@
 				g_strconcat ("orbit-", user, NULL),
 				NULL);
 	  
+	#ifdef __INTERIX
+	// keep it short!
+	g_free (dir);
+	dir = g_strdup("/tmp");
+	#endif
 
 	link_set_tmpdir (dir);
 
diff -ru -x '*.Po' -x '*.Plo' ORBit2-2.14.12.orig/src/orb/orb-core/corba-orb.c ORBit2-2.14.12/src/orb/orb-core/corba-orb.c
--- ORBit2-2.14.12.orig/src/orb/orb-core/corba-orb.c	2008-03-26 15:55:44 +0100
+++ ORBit2-2.14.12/src/orb/orb-core/corba-orb.c	2008-03-26 15:57:25 +0100
@@ -48,7 +48,7 @@
 static gboolean     orbit_use_irda           = FALSE;
 static gboolean     orbit_use_ssl            = FALSE;
 static gboolean     orbit_use_genuid_simple  = FALSE;
-#ifdef G_OS_WIN32
+#if defined(G_OS_WIN32) || defined(__INTERIX)
 static gboolean     orbit_local_only         = TRUE;
 #else
 static gboolean     orbit_local_only         = FALSE;
