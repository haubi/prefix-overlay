* originally from:
  http://debian-interix.net/debian-interix/pool/unreleased35/main/t/tcsh/tcsh_6.14.00-7+interix.1.diff.gz

--- config/interix
+++ config/interix
@@ -0,0 +1,129 @@
+/*
+ * config.h -- configure various defines for tcsh
+ *
+ * All source files should #include this FIRST.
+ *
+ * This is the config file for Interix systems
+ */
+
+#ifndef _h_config
+#define _h_config
+/****************** System dependant compilation flags ****************/
+/*
+ * POSIX	This system supports IEEE Std 1003.1-1988 (POSIX).
+ */
+#define POSIX
+
+/*
+ * POSIXJOBS	This system supports the optional IEEE Std 1003.1-1988 (POSIX)
+ *		job control facilities.
+ */
+#define POSIXJOBS
+
+/*
+ * POSIXSIGS	Use the POSIX signal facilities to emulate BSD signals.
+ */
+#define POSIXSIGS
+
+/*
+ * VFORK	This machine has a vfork().  
+ *		It used to be that for job control to work, this define
+ *		was mandatory. This is not the case any more.
+ *		If you think you still need it, but you don't have vfork, 
+ *		define this anyway and then do #define vfork fork.  
+ *		I do this anyway on a Sun because of yellow pages brain damage,
+ *		[should not be needed under 4.1]
+ *		and on the iris4d cause	SGI's fork is sufficiently "virtual" 
+ *		that vfork isn't necessary.  (Besides, SGI's vfork is weird).
+ *		Note that some machines eg. rs6000 have a vfork, but not
+ *		with the berkeley semantics, so we cannot use it there either.
+ */
+#define VFORK
+
+/*
+ * BSDJOBS	You have BSD-style job control (both process groups and
+ *		a tty that deals correctly
+ */
+#define BSDJOBS
+
+/*
+ * BSDSIGS	You have 4.2-style signals, rather than USG style.
+ *		Note: POSIX systems should not define this unless they
+ *		have sigvec() and friends (ie: 4.3BSD-RENO, HP-UX).
+ */
+#undef BSDSIGS
+
+/*
+ * BSDTIMES	You have BSD-style process time stuff (like rusage)
+ *		This may or may not be true.  For example, Apple Unix
+ *		(OREO) has BSDJOBS and BSDSIGS but not BSDTIMES.
+ */
+#undef BSDTIMES
+
+/*
+ * BSDLIMIT	You have BSD-style resource limit stuff (getrlimit/setrlimit)
+ */
+#define BSDLIMIT
+
+/*
+ * TERMIO	You have struct termio instead of struct sgttyb.
+ * 		This is usually the case for SVID systems, where
+ *		BSD uses sgttyb. POSIX systems should define this
+ *		anyway, even though they use struct termios.
+ */
+#define TERMIO
+
+/*
+ * SYSVREL	Your machine is SYSV based (HPUX, A/UX)
+ *		NOTE: don't do this if you are on a Pyramid -- tcsh is
+ *		built in a BSD universe.
+ *		Set SYSVREL to 1, 2, 3, or 4, depending the version of System V
+ *		you are running. Or set it to 0 if you are not SYSV based
+ *
+ *		Note: Linux should work with any SYSVREL < 3.
+ */
+#define SYSVREL	0
+
+/*
+ * YPBUGS	Work around Sun YP bugs that cause expansion of ~username
+ *		to send command output to /dev/null
+ */
+#undef YPBUGS
+
+/*
+ * Get the name space we want.
+ *
+ * The more recent defaults for gcc (e.g. on Red Hat 7.0)
+ * also define _POSIX_C_SOURCE, which throws our code off.
+ */
+
+#define __STRICT_ANSI__
+#define _BSD_SOURCE
+#define _SVID_SOURCE
+#define _POSIX_SOURCE
+#define _XOPEN_SOURCE 500
+#define _GNU_SOURCE
+
+/* need to define this on cmd line to use it while configuring too
+#define _ALL_SOURCE
+*/
+
+/*
+ * Large file support from <features.h>
+ */
+
+/*
+#define _LARGEFILE_SOURCE
+#define _LARGEFILE64_SOURCE
+#define _FILE_OFFSET_BITS 64
+*/
+
+/****************** local defines *********************/
+#ifndef _PATH_TCSHELL
+#define _PATH_TCSHELL "/bin/tcsh"
+#endif
+#define ECHO_STYLE      BOTH_ECHO
+
+#define NLS_CATALOGS
+
+#endif /* _h_config */
--- configure.in
+++ configure.in
@@ -120,6 +120,11 @@
     tcsh_config_file=bsd4.4
   ;;
 
+  ## Interix
+  *-*-interix* )
+    tcsh_config_file=interix
+  ;;
+
   ## Silicon Graphics machines
   *-sgi-iri* )
     tcsh_config_file=irix
--- host.defs
+++ host.defs
@@ -522,6 +522,15 @@
 enddef	:
 
 
+newdef	: defined(__INTERIX) 
+comment	: Interix
+vendor	: defined(M_intel)				: "intel"
+hosttype:						: "Interix"
+ostype	:						: "Interix"
+machtype: defined(M_i386)				: "i386"
+enddef	:
+
+
 newdef	: defined(__386BSD__)
 comment	: Bill Jolitz's 386BSD
 vendor	: defined(M_intel)				: "intel"
--- sh.file.c
+++ sh.file.c
@@ -249,7 +249,11 @@
     (void) ioctl(SHOUT, TCSETAW, (ioctl_t) &tty);
 # endif /* POSIX */
     tty_normal = tty;
-    tty.c_lflag &= ~(ECHOKE | ECHO | ECHOE | ECHOK | ECHONL | ECHOPRT | ECHOCTL);
+    tty.c_lflag &= ~(
+#ifndef __INTERIX
+    ECHOKE | ECHOPRT |
+#endif
+    ECHO | ECHOE | ECHOK | ECHONL | ECHOCTL);
 # ifdef POSIX
     (void) tcsetattr(SHOUT, TCSANOW, &tty);
 # else
@@ -441,7 +445,9 @@
     (void) ioctl(SHOUT, TCGETA, (ioctl_t) &tty);
 # endif /* POSIX */
 
+#ifndef __INTERIX
     tty.c_lflag |= PENDIN;
+#endif
 
 # ifdef POSIX
     (void) tcsetattr(SHOUT, TCSANOW, &tty);
