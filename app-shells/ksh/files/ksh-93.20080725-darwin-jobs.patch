--- a/src/cmd/ksh93/sh/jobs.c
+++ b/src/cmd/ksh93/sh/jobs.c
@@ -36,7 +36,7 @@
 #include	"jobs.h"
 #include	"history.h"
 
-#if !defined(WCONTINUED) || !defined(WIFCONTINUED)
+#if !defined(WCONTINUED) || !defined(WIFCONTINUED) || defined(__APPLE__)
 #   undef  WCONTINUED
 #   define WCONTINUED	0
 #   undef  WIFCONTINUED
@@ -664,6 +664,9 @@ static void job_reset(register struct process *pw)
 	/* save the terminal state for current job */
 #ifdef SIGTSTP
 	job_fgrp(pw,tcgetpgrp(job.fd));
+#ifdef SIGTTOU
+	signal(SIGTTOU, SIG_IGN);
+#endif	/* SIGTTOU */
 	if(tcsetpgrp(job.fd,job.mypid) !=0)
 		return;
 #endif	/* SIGTSTP */
@@ -1529,7 +1532,7 @@ static struct process *job_unpost(register struct process *pwtop,int notify)
 	if(pw)
 		return(pw);
 	/* all processes complete, unpost job */
-	job_unlink(pwtop);
+	if (pwtop) job_unlink(pwtop);
 	for(pw=pwtop; pw; pw=pw->p_nxtproc)
 	{
 		/* save the exit status for background jobs */
@@ -1558,7 +1561,7 @@ static struct process *job_unpost(register struct process *pwtop,int notify)
 	sfprintf(sfstderr,"ksh: job line %4d: free pid=%d critical=%d job=%d\n",__LINE__,getpid(),job.in_critical,pwtop->p_job);
 	sfsync(sfstderr);
 #endif /* DEBUG */
-	job_free((int)pwtop->p_job);
+	if (pwtop) job_free((int)pwtop->p_job);
 	return((struct process*)0);
 }
 
