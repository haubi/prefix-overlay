diff -ur gentoolkit-0.2.4_pre7.orig/src/revdep-rebuild/99revdep-rebuild gentoolkit-0.2.4_pre7/src/revdep-rebuild/99revdep-rebuild
--- gentoolkit-0.2.4_pre7.orig/src/revdep-rebuild/99revdep-rebuild	2007-09-14 16:03:13 +0200
+++ gentoolkit-0.2.4_pre7/src/revdep-rebuild/99revdep-rebuild	2007-09-14 16:25:21 +0200
@@ -16,6 +16,7 @@
 # Note: This file is sourced using bash by the revdep-rebuild script
 
 LD_LIBRARY_MASK="libodbcinst.so libodbc.so libjava.so libjvm.so"
+LD_LIBRARY_MASK="${LD_LIBRARY_MASK} libodbcinst.dylib libodbc.dylib libjava.dylib libjvm.dylib"
 SEARCH_DIRS="@GENTOO_PORTAGE_EPREFIX@/bin @GENTOO_PORTAGE_EPREFIX@/sbin @GENTOO_PORTAGE_EPREFIX@/usr/bin @GENTOO_PORTAGE_EPREFIX@/usr/sbin @GENTOO_PORTAGE_EPREFIX@/lib* @GENTOO_PORTAGE_EPREFIX@/usr/lib*"
 SEARCH_DIRS_MASK=""
 
diff -ur gentoolkit-0.2.4_pre7.orig/src/revdep-rebuild/revdep-rebuild gentoolkit-0.2.4_pre7/src/revdep-rebuild/revdep-rebuild
--- gentoolkit-0.2.4_pre7.orig/src/revdep-rebuild/revdep-rebuild	2007-09-14 16:03:12 +0200
+++ gentoolkit-0.2.4_pre7/src/revdep-rebuild/revdep-rebuild	2007-09-14 16:25:21 +0200
@@ -71,6 +71,28 @@
 EROOT="${PORTAGE_ROOT%/}${EPREFIX}"
 
 case `uname` in
+	Darwin)
+		SONAME_SUFFIX=".dylib"
+		function ldd_f () {
+			for d in `otool -L "$1" | awk '/^\t/{print $1;}'`; do
+				if ( cd `dirname "$1"` && test -e "$d" ); then  
+					echo "  $d";                            
+				else                                        
+					echo "  $d => not found";     
+				fi                                      
+			done
+		}
+		function all_missing_libs_f () {
+			ldd_f "$1" 2>/dev/null | sort -u | sed -n 's/   \(.*\) => not found/\1/p' | tr '\n' ' ' | sed 's/ $//'
+		}
+		# FIXME!!  How to check for required libs on Darwin?
+		function required_libs_f () {
+			all_missing_libs_f $1
+		}
+		function search_lib_f () {
+			ldd_f "$1" 2>/dev/null | sort -u | $2 "$3" | awk '{print $ 1}' | tr '\n' ' ' | sed 's/ $//'
+		}
+	;;
+
 	Linux)
 		SONAME_SUFFIX=".so"
 		function all_missing_libs_f () {
@@ -476,16 +482,14 @@
 	cat $LIST.1_files | egrep -v '*\.la$' | while read FILE ; do
 	# Note: double checking seems to be faster than single
 	# with complete path (special add ons are rare).
-
-	# How can one enter the block below, when $SONAME_SEARCH is set up the way it is?
 	if ldd_f $FILE 2>>$LLIST.3_ldd_errors | grep -v "$LD_MASK" | $SONAME_GREP -q "$SONAME_SEARCH" ; then
 		if $SEARCH_BROKEN && $FULL_LD_PATH ; then
 			if LD_LIBRARY_PATH="$COMPLETE_LD_LIBRARY_PATH" ldd_f $FILE 2>/dev/null | grep -v "$LD_MASK" | $SONAME_GREP -q "$SONAME_SEARCH" ; then
 				# FIX: I hate duplicating code
 				# Only build missing direct dependencies
-				ALL_MISSING_LIBS=$(ldd "$FILE" 2>/dev/null | sort -u | sed -n 's/	\(.*\) => not found/\1/p' | tr '\n' ' ' | sed 's/ $//' )
 				ALL_MISSING_LIBS=$(all_missing_libs_f $FILE)
 				REQUIRED_LIBS=$(required_libs_f $FILE)
+				MISSING_LIBS=""
 				for lib in $ALL_MISSING_LIBS
 				do
 					if echo $REQUIRED_LIBS | grep -q $lib
@@ -496,7 +500,7 @@
 				if [ "$MISSING_LIBS" != "" ]
 				then
 					echo "obj $FILE" >>$LLIST.3_rebuild
-					echo_v "  broken $FILE (requires ${MISSING_LIBS})"
+					echo_v "  broken $FILE (requires${MISSING_LIBS})"
 				fi
 			fi
 		else
@@ -516,7 +520,7 @@
 			then
 				echo "obj $FILE" >>$LLIST.3_rebuild
 				if $SEARCH_BROKEN ; then
-					echo_v "  broken $FILE (requires ${MISSING_LIBS})"
+					echo_v "  broken $FILE (requires${MISSING_LIBS})"
 				else
 					echo_v "  found $FILE"
 				fi
