diff -ru gentoolkit-0.2.4_pre7.orig/src/revdep-rebuild/revdep-rebuild gentoolkit-0.2.4_pre7/src/revdep-rebuild/revdep-rebuild
--- gentoolkit-0.2.4_pre7.orig/src/revdep-rebuild/revdep-rebuild	2008-04-01 14:59:07 +0200
+++ gentoolkit-0.2.4_pre7/src/revdep-rebuild/revdep-rebuild	2008-04-01 15:31:53 +0200
@@ -103,6 +103,57 @@
 			ldd "$1" 2>/dev/null | sort -u | $2 "$3" | awk '{print $ 1}' | tr '\n' ' ' | sed 's/ $//'
 		}
 	;;
+
+	Interix)
+		SONAME_SUFFIX=".so"
+		INTERIX_LDD_SEARCH_SPEC='${SEARCH_DIRS} /usr/lib /lib ${LD_LIBRARY_PATH}'
+
+		function interix_objdump_libs() {
+			/opt/gcc.3.3/bin/objdump -p "$1" | grep NEEDED | awk '{print $2}' | tr '\n' ' ' | sed 's/ $//'
+		}
+
+		function interix_objdump_rpath() {
+			/opt/gcc.3.3/bin/objdump -p "$1" | grep RPATH | awk '{print $2}'
+		}
+
+		function interix_resolve_path() {
+			local p=$(echo "$(interix_objdump_rpath "$1") ${INTERIX_LDD_SEARCH_SPEC}" | sed -e 's,:, ,g')
+
+			for x in ${p}; do
+				if [ -f "${x}/$2" ]; then
+					echo "${x}/$2"
+					return
+				fi
+			done
+		}
+
+		function all_missing_libs_f () {
+			local missing=
+			for x in $(interix_objdump_libs "$1"); do
+				test -z "$(interix_resolve_path "$1" "$x")" && missing="${missing} ${x}"
+			done
+			echo "$missing"
+		}
+
+		# WARNING: this is not recursive, so it doesn't give deep dependencies.
+		# This is because i believe i don't need deep dependencies in revdep-rebuild,
+		# and doing flat things is _muuuch_ faster
+		function ldd_f () {
+			for x in $(interix_objdump_libs "$1"); do
+				local f=$(interix_resolve_path "$1" "$x")
+				# CAREFULL: the whitespace before $x is a <tab>!!
+				echo "	$x => ${f:-not found}"
+			done
+		}
+		function required_libs_f () {
+			interix_objdump_libs "$1"
+		}
+		function search_lib_f () {
+			for x in $(interix_objdump_libs "$1"); do
+				echo "$x" | $2 "$3"
+			done
+		}
+	;;
 esac
 
 # Update the incremental variables using /etc/profile.env, /etc/ld.so.conf,
@@ -478,12 +529,14 @@
 	# with complete path (special add ons are rare).
 
 	# How can one enter the block below, when $SONAME_SEARCH is set up the way it is?
+	$EXTRA_VERBOSE && echo "inspecting $FILE..."
 	if ldd_f $FILE 2>>$LLIST.3_ldd_errors | grep -v "$LD_MASK" | $SONAME_GREP -q "$SONAME_SEARCH" ; then
+		$EXTRA_VERBOSE && echo " -> found occurence using \"$SONAME_SEARCH\"!"
 		if $SEARCH_BROKEN && $FULL_LD_PATH ; then
 			if LD_LIBRARY_PATH="$COMPLETE_LD_LIBRARY_PATH" ldd_f $FILE 2>/dev/null | grep -v "$LD_MASK" | $SONAME_GREP -q "$SONAME_SEARCH" ; then
 				# FIX: I hate duplicating code
 				# Only build missing direct dependencies
-				ALL_MISSING_LIBS=$(ldd "$FILE" 2>/dev/null | sort -u | sed -n 's/	\(.*\) => not found/\1/p' | tr '\n' ' ' | sed 's/ $//' )
+				ALL_MISSING_LIBS=$(ldd_f "$FILE" 2>/dev/null | sort -u | sed -n 's/	\(.*\) => not found/\1/p' | tr '\n' ' ' | sed 's/ $//' )
 				ALL_MISSING_LIBS=$(all_missing_libs_f $FILE)
 				REQUIRED_LIBS=$(required_libs_f $FILE)
 				for lib in $ALL_MISSING_LIBS
