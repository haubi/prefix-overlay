--- Makefile.orig	2008-07-31 10:39:47.364832000 +0200
+++ Makefile	2008-07-31 10:40:01.524427000 +0200
@@ -57,13 +57,13 @@
 ifeq ($(subst s,,$(MAKEFLAGS)),$(MAKEFLAGS))
 	@echo $(foreach a,$(APPLETS), : $a) :
 ifndef V
-	@echo $(CC) $(CFLAGS) $(PYFLAGS) $(LDFLAGS) main.c -o q $(LIBADD)
+	@echo $(CC) $(CFLAGS) $(PYFLAGS) main.c -o q $(LIBADD) $(LDFLAGS)
 endif
 endif
 ifndef V
-	@$(CC) $(WFLAGS) $(PYFLAGS) $(LDFLAGS) $(CFLAGS) $(HFLAGS) main.c -o q $(LIBADD)
+	@$(CC) $(WFLAGS) $(PYFLAGS) $(CFLAGS) $(HFLAGS) main.c -o q $(LIBADD) $(LDFLAGS)
 else
-	$(CC) $(WFLAGS) $(PYFLAGS) $(LDFLAGS) $(CFLAGS) $(HFLAGS) main.c -o q $(LIBADD)
+	$(CC) $(WFLAGS) $(PYFLAGS) $(CFLAGS) $(HFLAGS) main.c -o q $(LIBADD) $(LDFLAGS)
 endif
 
 .depend: $(SRC)
--- main.c.orig	2008-01-16 17:29:44.000000000 +0100
+++ main.c	2008-07-31 10:40:01.424428000 +0200
@@ -202,15 +202,15 @@
 	return ret;
 }
 
-int rematch(const char *regex, const char *match, int cflags)
+int rematch(const char *rex, const char *match, int cflags)
 {
 	regex_t preg;
 	int ret;
 
-	if ((match == NULL) || (regex == NULL))
+	if ((match == NULL) || (rex == NULL))
 		return EXIT_FAILURE;
 
-	if ((ret = regcomp(&preg, regex, cflags))) {
+	if ((ret = regcomp(&preg, rex, cflags))) {
 		char err[256];
 		if (regerror(ret, &preg, err, sizeof(err)))
 			warnf("regcomp failed: %s", err);
--- qcache.c.orig	2008-07-31 10:39:36.565152000 +0200
+++ qcache.c	2008-07-31 10:40:01.434480000 +0200
@@ -13,7 +13,9 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
+#ifndef __sun__
 #include <sys/dir.h>
+#endif
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <time.h>
@@ -441,10 +443,10 @@
  *   1 (OLDER)
  *   0 (SAME)
  */
-int qcache_vercmp(const void *x, const void *y);
-int qcache_vercmp(const void *x, const void *y)
+int qcache_vercmp(const struct dirent **x, const struct dirent **y);
+int qcache_vercmp(const struct dirent **x, const struct dirent **y)
 {
-	switch (atom_compare_str((*((const struct dirent **)x))->d_name, (*((const struct dirent **)y))->d_name)) {
+	switch (atom_compare_str((*x)->d_name, (*y)->d_name)) {
 		case NEWER: return -1;
 		case OLDER: return  1;
 		default:    return  0;
@@ -510,7 +512,7 @@
 	qcache_data data;
 	char *catpath, *pkgpath, *ebuildpath, *cachepath;
 	int i, j, k, len, num_cat, num_pkg, num_ebuild;
-	struct direct **categories, **packages, **ebuilds;
+	struct dirent **categories, **packages, **ebuilds;
 
 	xasprintf(&catpath, "%s%s", QCACHE_EDB, portdir);
 
@@ -762,7 +764,7 @@
 	int i;
 
 	if (!numpkg) {
-		struct direct **categories;
+		struct dirent **categories;
 		char *catpath;
 		int len;
 
--- qsize.c.orig	2008-01-16 17:29:44.000000000 +0100
+++ qsize.c	2008-07-31 10:41:03.902613000 +0200
@@ -35,6 +35,11 @@
 static const char qsize_rcsid[] = "$Id: qsize.c,v 1.28 2007/11/04 09:03:42 solar Exp $";
 #define qsize_usage(ret) usage(ret, QSIZE_FLAGS, qsize_long_opts, qsize_opts_help, lookup_applet_idx("qsize"))
 
+#ifdef __sun__
+#include <sys/dklabel.h>
+# define S_BLKSIZE DK_DEVID_BLKSIZE
+#endif
+
 int qsize_main(int argc, char **argv)
 {
 	DIR *dir, *dirp;
