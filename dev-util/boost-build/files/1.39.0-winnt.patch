diff -ruN boost_1_39_0.orig/tools/build/v2/tools/common.jam boost_1_39_0/tools/build/v2/tools/common.jam
--- boost_1_39_0.orig/tools/build/v2/tools/common.jam	2009-07-23 14:21:05 +0200
+++ boost_1_39_0/tools/build/v2/tools/common.jam	2009-07-23 14:22:47 +0200
@@ -846,6 +846,7 @@
         #case mingw* : tag += mgw ;
         case mipspro* : tag += mp ;
         case msvc* : tag += vc ;
+		case parity : tag += parity ;
         case sun* : tag += sw ;
         case tru64cxx* : tag += tru ;
         case vacpp* : tag += xlc ;
diff -ruN boost_1_39_0.orig/tools/build/v2/tools/msvc.jam boost_1_39_0/tools/build/v2/tools/msvc.jam
--- boost_1_39_0.orig/tools/build/v2/tools/msvc.jam	2009-07-23 14:21:05 +0200
+++ boost_1_39_0/tools/build/v2/tools/msvc.jam	2009-07-23 14:24:36 +0200
@@ -1020,6 +1020,8 @@
 
     # Intel and msvc supposedly have link-compatible objects.
     feature.subfeature toolset msvc : vendor : intel : propagated optional ;
+	# Parity and msvc have link-compatible objects (same compiler).
+	feature.subfeature toolset msvc : vendor : parity : propagated optional ;
 
     # Inherit MIDL flags.
     toolset.inherit-flags msvc : midl ;
diff -ruN boost_1_39_0.orig/tools/build/v2/tools/parity.jam boost_1_39_0/tools/build/v2/tools/parity.jam
--- boost_1_39_0.orig/tools/build/v2/tools/parity.jam	1970-01-01 01:00:00 +0100
+++ boost_1_39_0/tools/build/v2/tools/parity.jam	2009-07-23 14:22:47 +0200
@@ -0,0 +1,150 @@
+# Copyright (c) 2008 Markus Duft
+#
+# Use, modification and distribution is subject to the Boost Software
+# License Version 1.0. (See accompanying file LICENSE_1_0.txt or
+# http://www.boost.org/LICENSE_1_0.txt)
+
+import "class" : new ;
+import property ;
+import generators ;
+import feature ;
+import type ;
+import toolset : flags ;
+import common ;
+import errors ;
+import set ;
+import property-set ;
+import regex ;
+
+if [ MATCH (--debug-configuration) : [ modules.peek : ARGV ] ]
+{
+    .debug-configuration = true ;
+}
+
+feature.extend toolset : parity ;
+feature.subfeature toolset parity : vendor : msvc : propagated optional ;
+
+toolset.add-requirements <toolset>parity,<runtime-link>shared:<threading>multi:<pch>off ;
+
+type.set-generated-target-suffix OBJ : <toolset>parity : o ;
+type.set-generated-target-suffix STATIC_LIB : <toolset>parity : a ;
+type.set-generated-target-suffix SHARED_LIB : <toolset>parity : so.dll ;
+type.set-generated-target-suffix IMPORT_LIB : <toolset>parity : so ;
+type.set-generated-target-prefix SHARED_LIB : <toolset>parity : lib ;
+type.set-generated-target-prefix IMPORT_LIB : <toolset>parity : lib ;
+
+rule init ( version ? : command * : options * )
+{
+	local condition ;
+	condition = [ common.check-init-parameters parity : version $(version) ] ;
+	common.handle-options parity : $(condition) : $(command) : $(options)  ;
+}
+
+generators.register-c-compiler parity.compile.c++ : CPP : OBJ : <toolset>parity ;
+generators.register-c-compiler parity.compile.c   : C   : OBJ : <toolset>parity ;
+generators.register-c-compiler parity.compile.asm : ASM : OBJ : <toolset>parity ;
+
+generators.register-archiver parity.archive : OBJ : STATIC_LIB : <toolset>parity ;
+generators.register-linker parity.link : OBJ SEARCHED_LIB STATIC_LIB IMPORT_LIB : EXE : <toolset>parity ;
+generators.register-linker parity.link.dll : OBJ SEARCHED_LIB STATIC_LIB IMPORT_LIB : SHARED_LIB IMPORT_LIB : <toolset>parity ;
+
+flags parity.compile OPTIONS <optimization>off   : -O0 ;
+flags parity.compile OPTIONS <optimization>speed : -O2 ;
+flags parity.compile OPTIONS <optimization>speed : -O1 ;
+
+flags parity.compile OPTIONS <inlining>off  : -fno-inline ;
+
+flags parity.compile OPTIONS <warnings>off  : -w ;
+flags parity.compile OPTIONS <warnings>all  : -Wall ;
+flags parity.compile OPTIONS <warnings-as-errors>on  : -Werror ;
+
+flags parity.compile OPTIONS <debug-symbols>on : -g ;
+flags parity.compile OPTIONS <rtti>off : -fno-rtti ;
+
+flags parity.compile OPTIONS <link>shared : -fPIC ;
+
+flags parity.compile USER_OPTIONS <cflags> ;
+flags parity.compile.c++ USER_OPTIONS <cxxflags> ;
+flags parity.compile DEFINES <define> ;
+flags parity.compile INCLUDES <include> ;
+
+rule compile.c
+{
+	LANG on $(<) = "-x c" ;
+}
+
+rule compile.c++
+{
+	LANG on $(<) = "-x c++" ;
+}
+
+rule compile.asm
+{
+	LANG on $(<) = "-x asm" ;
+}
+
+actions compile.c
+{
+	"$(CONFIG_COMMAND)" $(LANG) $(OPTIONS) $(USER_OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" -c -o "$(<)" "$(>)"
+}
+
+actions compile.c++
+{
+	"$(CONFIG_COMMAND)" $(LANG) $(OPTIONS) $(USER_OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" -c -o "$(<)" "$(>)"
+}
+
+actions compile.asm
+{
+	"$(CONFIG_COMMAND)" $(LANG) $(OPTIONS) $(USER_OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" -c -o "$(<)" "$(>)"
+}
+
+flags parity.link OPTIONS <debug-symbols>on : -g ;
+flags parity.link USER_OPTIONS <linkflags> ;
+flags parity.link LINKPATH <library-path> ;
+flags parity.link FINDLIBS-ST <find-static-library> ;
+flags parity.link FINDLIBS-SA <find-shared-library> ;
+flags parity.link LIBRARIES <library-file> ;
+
+rule link ( targets * : sources * : properties * )
+{
+}
+
+actions link bind LIBRARIES
+{
+	"$(CONFIG_COMMAND)" -L"$(LINKPATH)" -Wl,-rpath,"$(RPATH)" -o "$(<)" "$(>)" "$(LIBRARIES)" -l$(FINDLIBS-ST) -l$(FINDLIBS-SA) $(OPTIONS) $(USER_OPTIONS)
+}
+
+.AR = ar ;
+
+flags parity.archive AROPTIONS <archiveflags> ;
+
+rule archive ( targets * : sources * : properties * )
+{
+	# see gcc.jam for explanation.
+	local clean.a = $(targets[1])(clean) ;
+    TEMPORARY $(clean.a) ;
+    NOCARE $(clean.a) ;
+    LOCATE on $(clean.a) = [ on $(targets[1]) return $(LOCATE) ] ;
+    DEPENDS $(clean.a) : $(sources) ;
+    DEPENDS $(targets) : $(clean.a) ;
+    common.RmTemps $(clean.a) : $(targets) ;
+}
+
+actions archive
+{
+	"$(.AR)" $(AROPTIONS) rc "$(<)" "$(>)"
+}
+
+rule link.dll ( targets * : sources * : properties * )
+{
+}
+
+actions link.dll bind LIBRARIES
+{
+	"$(CONFIG_COMMAND)" -shared -L"$(LINKPATH)" -Wl,-rpath,"$(RPATH)" -o "$(<[2])" "$(>)" "$(LIBRARIES)" -l$(FINDLIBS-ST) -l$(FINDLIBS-SA) $(OPTIONS) $(USER_OPTIONS)
+}
+
+
+
+
+
