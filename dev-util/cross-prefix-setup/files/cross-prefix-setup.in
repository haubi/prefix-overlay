#!/bin/env bash

PARENT_PREFIX=@GENTOO_PORTAGE_EPREFIX@

source "${PARENT_PREFIX}"/sbin/functions.sh

function die() {
	eerror "$@"
	exit 1
}

_target_prefix=
_target_profile=
_target_use=

_print_usage=no

while [[ -n ${1} ]]; do
	case "${1}" in
	--prefix=*)		_target_prefix="${1#--prefix=}"					;;
	--profile=*)	_target_profile="${1#--profile=}"				;;
	--use=*)		_target_use="${1#--use=}"						;;
	--help)			_print_usage=1									;; # ignore
	*)				ewarn "unknown argument: $1"; _print_usage=1	;;
	esac

	if [[ ${_print_usage} != "no" ]]; then
		einfo "usage: $0 --prefix=<new prefix> --profile=<absolute path to profile in parent prefix>"
		einfo "          --use=<initial use flags for new prefix> --help"
		einfo ""
		einfo "Say you have an existing EPREFIX in /opt/gentoo, and you want another one"
		einfo "with a different ABI in /opt/gentoo.winnt, you'd call this:"
		einfo " $0 --prefix=/opt/gentoo-x86-64 \\\\"
		einfo "    --profile=/opt/gentoo/usr/portage/profiles/default-prefix/windows/winnt/6.0/x86"

		exit ${_print_usage}
	fi

	shift
done

[[ -z "${BASH}" ]] && die "sorry, only bash is supported as shell!"

[[ -z "${_target_prefix}"	]] && die "missing the --prefix argument. the value of this argument should be a non-existant path."
[[ -d "${_target_prefix}"	]] && die "the directory given to --prefix should not yet exist!"
[[ ${_target_profile#${PARENT_PREFIX}} == ${_target_profile}	]] && die "the directory given to --profile does not live in ${PARENT_PREFIX}."
[[ -z "${_target_profile}"	]] && die "missing the --profile argument. the value of this argument should be the absolute path to the profile (in the parent prefix) to use for make.profile."
[[ -d "${_target_profile}"	]] || die "the directory given to --profile does not exist, or is not a directory!"

einfo ""
einfo "creating ${_target_prefix}"
einfo ""

echo ""

ebegin "creating directory structure"
(
	mkdir -p "${_target_prefix}/etc" || exit 1
	mkdir -p "${_target_prefix}/usr" || exit 1
)
eend $?

cd "${_target_prefix}" || die "cannot change to new prefix!"

echo "# Generated by cross-prefix-setup, please check the following settings for correctness" > etc/make.conf

_target_sync=$(cat "${PARENT_PREFIX}/etc/make.conf" | grep "SYNC=")
_target_source=$(cat "${PARENT_PREFIX}/etc/make.conf" | grep "^source")

if [[ -n "${_target_sync}" ]]; then
	ebegin "using sync from parent: ${_target_sync}"
	echo "${_target_sync}" >> etc/make.conf
	eend $?
fi

if [[ -n "${_target_use}" ]]; then
	ebegin "using USE flags: ${_target_use}"
	echo "USE=\"${_target_use}\"" >> etc/make.conf
	eend $?
fi

if [[ ${_target_profile} == *winnt* ]]; then
	ebegin "using /var/tmp as temporary directory for winnt profiles"
	echo "PORTAGE_TMPDIR=/var/tmp" >> etc/make.conf
	eend $?
fi

if [[ -n "${_target_source}" ]]; then
	ebegin "inheriting overlay inclusions from parent prefix"
	echo "${_target_source}" >> etc/make.conf
	eend $?
fi

ebegin "linking profile (${_target_profile#${PARENT_PREFIX}})."
ln -fs "../${_target_profile#${PARENT_PREFIX}}" etc/make.profile
eend $?

ebegin "linking portage tree from parent to new prefix."
ln -fs "${PARENT_PREFIX}/usr/portage" usr/portage
eend $?

ebegin "creating '${_target_prefix}/etc/profile'"
(
	cat > "${_target_prefix}/etc/profile" <<EOF
# source parent profile, since we really need our parent in the
# environment. this makes it possible to source this profile from
# virtually any (even dirty) shell, and still get a working
# environment.
. "${PARENT_PREFIX}/etc/profile"

# put ourselves in the EPREFIX and PATH variables, since we're the
# one to work with right now.
export EPREFIX="${_target_prefix}"
export PATH="${_target_prefix}/bin:${_target_prefix}/usr/bin:\${PATH}"

if [ -e "${_target_prefix}/etc/profile.env" ]; then
	. "${_target_prefix}/etc/profile.env"
fi

for sh in "/opt/gentoo"/etc/profile.d/*.sh ; do 
    if [ -r "\$sh" ] ; then
        . "\$sh"
    fi 
done
unset sh 
EOF
)
eend $?

ebegin "creating '${_target_prefix}/startprefix'"
(
	cat > "${_target_prefix}/startprefix" <<EOF
#!${BASH}

#
# Start a bash sourcing the profile. i don't use a login
# shell intentionally, since the user profiles may override
# some of the pre-set values.
#

echo "Entering Gentoo Prefix in ${_target_prefix}"

. "${_target_prefix}/etc/profile"
${BASH} --noprofile

echo "Leaving Gentoo Prefix in ${_target_prefix}"
EOF
)
eend $?

chmod a+x "${_target_prefix}/startprefix"

echo ""

[[ -z "${_target_use}"		]] && { ewarn ""; ewarn "don't forget to set the USE flags for the new prefix in '${_target_prefix}/etc/make.conf'."; ewarn ""; echo ""; }

einfo "Done. Please check '${_target_prefix}/etc/make.conf' for correctness."

echo ""

einfo ""
einfo "to start merging into the new prefix, do the following:"
einfo ""
einfo " $ ${_target_prefix}/startprefix"
einfo " $ emerge ...."
einfo " $ exit"
einfo ""
einfo "please note, that calling emerge inside the new prefix, may also"
einfo "modify the parent prefix you supplied, since DEPEND atoms are merged"
einfo "there, if possible."
einfo ""

exit 0

