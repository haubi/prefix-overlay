#!/usr/bin/env bash

# <grobian@gentoo.org> -- 2006-11-03
# time to get more careful about what we do.  Don't replace anything if
# an ebuild is already EAPI="prefix", unless -f flag is given to
# "force".  Only run legacy cleanup stuff when using -f.  A special case
# is when the file to process is an eclass; in that case we run the
# normal replace rules, regardless.
# <grobian@gentoo.org> -- 2006-10-24
# because portage now deals differently (saner) with ebuilds, we replace
# all ${EDEST} with ${D} again as "cleanup" action.  Instead we look at
# all ${D} not in a make call and ${ROOT} variables.
# <grobian@gentoo.org> -- 2006-09-22
# eapify is a small hackish script that usually does fine in adding
# EAPI="prefix" if there is not yet a EAPI=something line in the ebuild.
# Next to this, it applies ${D} -> ${EDEST} transformation to "make
# DESTDIR=${D} install".  Because of the nature of this script, running
# it multiple times should not harm.  It might, however, do wrong
# things, so always check the result.  You have been warned.

while [[ ! -z $1 ]] ; do
	case $1 in
		-f)
			force=1
		;;
		*)
			[[ -z $files ]] \
				&& files=$1 \
				|| files="$files $1"
		;;
	esac
	shift
done

# default to all ebuilds if no files given
[[ -z $files ]] && files="*.ebuild"


replace() {
	echo -n "  replacing $1 -> $2 ... "
	local cnt=$(sed -e "${4:-s}|$1|$2|g" "$3" | diff "$3" - | grep -o "$2" | wc -l)
	if [[ $cnt > 0 ]];
	then
		sed -i -e "${4:-s}|$1|$2|g" "$3"
		echo -n "$cnt occurence"
		[[ $cnt == 1 ]] \
			&& echo "" \
			|| echo "s"
	else
		echo "not found"
	fi
}

for f in $files ; do
	if [[ ! -f $f ]] ; then
		echo "no such file: $f"
		exit -1
	fi

	echo "Processing $f"

	if [[ ${f##*.} == "ebuild" ]] ; then
		unset EAPI
		echo -n "  EAPI ... "
		eval "`egrep "^EAPI=" "$f"`"

		if [[ $EAPI != "" ]] ; then
			echo "already $EAPI"
			# don't process any more, we're done with this ebuild
			# (unless we were forced)
			[[ $force == 1 ]] || continue
		else
			sed -i \
				-e 's|^# \$Header:.*$|&\n\nEAPI="prefix"|' \
				"$f"
			echo 'added EAPI="prefix"'
		fi
	elif [[ ${f##*.} != "eclass" ]] ; then
		# don't try anything on arbitrary files
		continue
	fi

	if [[ $force == 1 ]] ; then 
		# cleanup mess from previous portage APIs
		replace '${EDEST}' '${D}' "$f"
		replace '${PROOT}' '${EROOT}' "$f"
	fi

	# we replace all ${D} with ${ED} if not in a make ... install line
	replace '${D}' '${ED}' "$f" '/make.*install/!s'

	# replace ${ROOT} with ${EROOT}
	replace '${ROOT}' '${EROOT}' "$f"
done
