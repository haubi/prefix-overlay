#!/usr/bin/env bash

# <grobian@gentoo.org> -- 2006-10-24
# because portage now deals differently (saner) with ebuilds, we replace
# all ${EDEST} with ${D} again as "cleanup" action.  Instead we look at
# all ${D} not in a make call and ${ROOT} variables.
# <grobian@gentoo.org> -- 2006-09-22
# eapify is a small hackish script that usually does fine in adding
# EAPI="prefix" if there is not yet a EAPI=something line in the ebuild.
# Next to this, it applies ${D} -> ${EDEST} transformation to "make
# DESTDIR=${D} install".  Because of the nature of this script, running
# it multiple times should not harm.  It might, however, do wrong
# things, so always check the result.  You have been warned.

if [ -z $1 ];
then
	files="*.ebuild"
else
	files="$*"
fi

for f in $files;
do
	echo "Processing $f"

	unset EAPI
	echo -n "  EAPI ... "
	eval "`egrep "^EAPI=" "$f"`"

	if [[ $EAPI != "" ]];
	then
		echo "already $EAPI"
	else
		sed -i \
			-e 's|^# \$Header:.*$|&\n\nEAPI="prefix"|' \
			"$f"
		echo 'added EAPI="prefix"'
	fi

	# cleanup mess from previous portage APIs
	echo -n "  replacing \${EDEST} -> \${D} ... "
	sed -i -e 's|${EDEST}|${D}|g' "$f"
	echo "done"

	# we replace all ${D} with ${ED} if not in a make ... install line
	echo -n "  replacing \${D} -> \${ED} ... "
	sed -i -e '/make.*install/!s|${D}|${ED}|g' "$f"
	echo "done"

	# replace ${ROOT} with ${EROOT}
	echo -n "  replacing \${ROOT} -> \${EROOT} ... "
	sed -i -e 's|${ROOT}|${EROOT}|g' "$f"
	echo "done"
done
