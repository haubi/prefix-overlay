diff -ru -x '*.Po' -x '*.Plo' gnutls-2.5.3.orig/src/cli.c gnutls-2.5.3/src/cli.c
--- gnutls-2.5.3.orig/src/cli.c	2008-08-20 11:04:44 +0200
+++ gnutls-2.5.3/src/cli.c	2008-08-20 11:29:02 +0200
@@ -102,10 +102,14 @@
   gnutls_session_t session;
   int secure;
   char *hostname;
+#ifndef __INTERIX
   char *ip;
   char *service;
   struct addrinfo *ptr;
   struct addrinfo *addr_info;
+#else
+  struct sockaddr addr;
+#endif
 } socket_st;
 
 ssize_t socket_recv (const socket_st * socket, void *buffer, int buffer_size);
@@ -1218,12 +1222,14 @@
       socket->session = NULL;
     }
 
+#ifndef __INTERIX
   freeaddrinfo (socket->addr_info);
   socket->addr_info = socket->ptr = NULL;
 
   free (socket->ip);
-  free (socket->hostname);
   free (socket->service);
+#endif
+  free (socket->hostname);
 
   shutdown (socket->fd, SHUT_RDWR);	/* no more receptions */
   close (socket->fd);
@@ -1237,13 +1243,26 @@
 {
   int err;
 
+#ifndef __INTERIX
   printf ("Connecting to '%s:%s'...\n", hd->ip, hd->service);
+#else
+  printf ("Connecting to '%s'...\n", hd->hostname);
+#endif
 
+#ifndef __INTERIX
   err = connect (hd->fd, hd->ptr->ai_addr, hd->ptr->ai_addrlen);
+#else
+  err = connect (hd->fd, &hd->addr, sizeof(hd->addr));
+#endif
   if (err < 0)
     {
+#ifndef __INTERIX
       fprintf (stderr, "Cannot connect to %s:%s: %s\n", hd->hostname,
 	       hd->service, strerror (errno));
+#else
+      fprintf (stderr, "Cannot connect to %s: %s\n", hd->hostname,
+	       strerror (errno));
+#endif
       exit (1);
     }
 }
@@ -1251,13 +1270,16 @@
 void
 socket_open (socket_st * hd, const char *hostname, const char *service)
 {
+#ifndef __INTERIX
   struct addrinfo hints, *res, *ptr;
+#endif
   int sd, err;
   char buffer[MAX_BUF + 1];
   char portname[16] = { 0 };
 
   printf ("Resolving '%s'...\n", hostname);
   /* get server name */
+#ifndef __INTERIX
   memset (&hints, 0, sizeof (hints));
   hints.ai_socktype = SOCK_STREAM;
   if ((err = getaddrinfo (hostname, service, &hints, &res)))
@@ -1300,5 +1322,52 @@
   hd->ptr = ptr;
   hd->addr_info = res;
 
+#else
+ {
+     char **cur;
+     struct hostent* h;
+     int fam = AF_INET;
+
+     if((h = gethostbyname(hostname)) == NULL)
+     {
+       fprintf(stderr, "Failed to get host information for \"%s\"", hostname);
+       exit(1);
+     }
+
+     cur = h->h_addr_list;
+
+     sd=-1;
+
+     while(*cur)
+     {
+         struct sockaddr_in s;
+
+         s.sin_family = fam;
+         s.sin_port = htons(atoi(service));
+         inet_aton(*cur, &s.sin_addr);
+
+		 sd = socket(s.sin_family, SOCK_STREAM, 0);
+         if(sd == -1) continue;
+
+         if (connect (sd, (struct sockaddr*)&s, sizeof(s)) < 0)
+         {
+           close(sd);
+           sd = -1;
+
+           ++cur;
+           continue;
+         }
+
+         hd->addr = *((struct sockaddr*)&s);
+         break;
+     }
+ }
+
+  hd->secure = 0;
+  hd->fd = sd;
+  hd->hostname = strdup (hostname);
+
+#endif
+
   return;
 }
diff -ru -x '*.Po' -x '*.Plo' gnutls-2.5.3.orig/src/serv.c gnutls-2.5.3/src/serv.c
--- gnutls-2.5.3.orig/src/serv.c	2008-08-20 11:04:45 +0200
+++ gnutls-2.5.3/src/serv.c	2008-08-20 11:31:59 +0200
@@ -776,9 +776,9 @@
 {
   fprintf (stderr, "|<%d>| %s", level, str);
 }
-
 static void gaa_parser (int argc, char **argv);
 
+#ifndef __INTERIX
 static int
 get_port (const struct sockaddr_storage *addr)
 {
@@ -791,6 +791,13 @@
     }
   return -1;
 }
+#else
+static int get_port (const struct sockaddr *addr)
+{
+	return ntohs (((const struct sockaddr_in*)addr)->sin_port);
+}
+#endif
+
 
 static const char *
 addr_ntop (const struct sockaddr *sa, socklen_t salen,
@@ -810,7 +817,11 @@
   char topbuf[512];
   char name[256];
   int accept_fd;
+#ifndef __INTERIX
   struct sockaddr_storage client_address;
+#else
+  struct sockaddr client_address;
+#endif
   socklen_t calen;
 
 #ifndef _WIN32
diff -ru -x '*.Po' -x '*.Plo' gnutls-2.5.3.orig/src/tests.c gnutls-2.5.3/src/tests.c
--- gnutls-2.5.3.orig/src/tests.c	2008-08-20 11:04:45 +0200
+++ gnutls-2.5.3/src/tests.c	2008-08-20 11:29:02 +0200
@@ -512,7 +512,7 @@
   if (ret < 0)
     return TEST_FAILED;
 
-#ifndef _WIN32
+#if !defined(_WIN32) && !defined(__INTERIX)
   old = siginterrupt (SIGALRM, 1);
   alarm (secs);
 #else
@@ -526,9 +526,12 @@
     }
   while (ret > 0);
 
-#ifndef _WIN32
+#if !defined(_WIN32) && !defined(__INTERIX)
   siginterrupt (SIGALRM, old);
-#else
+#elif defined(__INTERIX)
+  if(errno == ETIMEDOUT || ECONNABORTED)
+	alrm = 1;
+#elif defined(_WIN32)
   if (WSAGetLastError () == WSAETIMEDOUT ||
       WSAGetLastError () == WSAECONNABORTED)
     alrm = 1;
diff -ru -x '*.Po' -x '*.Plo' gnutls-2.5.3.orig/src/tls_test.c gnutls-2.5.3/src/tls_test.c
--- gnutls-2.5.3.orig/src/tls_test.c	2008-08-20 11:04:45 +0200
+++ gnutls-2.5.3/src/tls_test.c	2008-08-20 11:29:03 +0200
@@ -156,6 +156,8 @@
 int
 main (int argc, char **argv)
 {
+// on interix things would have to look somehow different (no addrinfo stuff...)
+#ifndef __INTERIX
   int err, ret;
   int sd, i;
   gnutls_session_t state;
@@ -298,6 +300,7 @@
 #endif
   gnutls_global_deinit ();
 
+#endif /* __INTERIX */
   return 0;
 }
 
