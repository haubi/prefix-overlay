diff -x '*.Po' -x '*.Plo' -ru libsoup-2.28.2.orig/libsoup/soup-address.c libsoup-2.28.2/libsoup/soup-address.c
--- libsoup-2.28.2.orig/libsoup/soup-address.c	2010-02-03 08:59:16 +0100
+++ libsoup-2.28.2/libsoup/soup-address.c	2010-02-03 10:35:28 +0100
@@ -72,17 +72,31 @@
 #define SOUP_ADDRESS_GET_FAMILY(priv) (priv->sockaddr->sa_family)
 #define SOUP_ADDRESS_SET_FAMILY(priv, family) \
 	(priv->sockaddr->sa_family = family)
+
+#ifdef AF_INET6
 #define SOUP_ADDRESS_FAMILY_IS_VALID(family) \
 	(family == AF_INET || family == AF_INET6)
+#else
+#define SOUP_ADDRESS_FAMILY_IS_VALID(family) \
+	(family == AF_INET)
+#endif
+
+#ifdef AF_INET6
 #define SOUP_ADDRESS_FAMILY_SOCKADDR_SIZE(family) \
 	(family == AF_INET ? sizeof (struct sockaddr_in) : \
 			     sizeof (struct sockaddr_in6))
 #define SOUP_ADDRESS_FAMILY_DATA_SIZE(family) \
 	(family == AF_INET ? sizeof (struct in_addr) : \
 			     sizeof (struct in6_addr))
+#else
+#define SOUP_ADDRESS_FAMILY_SOCKADDR_SIZE(family) sizeof (struct sockaddr_in)
+#define SOUP_ADDRESS_FAMILY_DATA_SIZE(family) sizeof (struct in_addr)
+#endif
 
 /* sockaddr port macros */
 #define SOUP_ADDRESS_PORT_IS_VALID(port) (port >= 0 && port <= 65535)
+
+#ifdef AF_INET6
 #define SOUP_ADDRESS_GET_PORT(priv) \
 	(priv->sockaddr->sa_family == AF_INET ? \
 		SOUP_SIN(priv)->sin_port : \
@@ -100,6 +114,16 @@
 	(priv->sockaddr->sa_family == AF_INET ? \
 		(gpointer)&SOUP_SIN(priv)->sin_addr : \
 		(gpointer)&SOUP_SIN6(priv)->sin6_addr)
+#else /* !AF_INET6 */
+#define SOUP_ADDRESS_GET_PORT(priv) SOUP_SIN(priv)->sin_port
+#define SOUP_ADDRESS_SET_PORT(priv, port) \
+	G_STMT_START {					\
+		SOUP_SIN(priv)->sin_port = port;	\
+	} G_STMT_END
+
+/* sockaddr data macros */
+#define SOUP_ADDRESS_GET_DATA(priv) (gpointer)&SOUP_SIN(priv)->sin_addr
+#endif /* !AF_INET6 */
 #define SOUP_ADDRESS_SET_DATA(priv, data, length) \
 	memcpy (SOUP_ADDRESS_GET_DATA (priv), data, length)
 
diff -x '*.Po' -x '*.Plo' -ru libsoup-2.28.2.orig/libsoup/soup-address.h libsoup-2.28.2/libsoup/soup-address.h
--- libsoup-2.28.2.orig/libsoup/soup-address.h	2010-02-03 08:59:16 +0100
+++ libsoup-2.28.2/libsoup/soup-address.h	2010-02-03 09:59:54 +0100
@@ -47,7 +47,12 @@
 	SOUP_ADDRESS_FAMILY_INVALID = -1,
 
 	SOUP_ADDRESS_FAMILY_IPV4 = G_SOCKET_FAMILY_IPV4,
+/*
+ * ifdef is not enough - mkenums still picks is up
+#ifdef AF_INET6
 	SOUP_ADDRESS_FAMILY_IPV6 = G_SOCKET_FAMILY_IPV6
+#endif
+*/
 } SoupAddressFamily;
 
 #define SOUP_ADDRESS_ANY_PORT 0
diff -x '*.Po' -x '*.Plo' -ru libsoup-2.28.2.orig/libsoup/soup-socket.c libsoup-2.28.2/libsoup/soup-socket.c
--- libsoup-2.28.2.orig/libsoup/soup-socket.c	2010-02-03 08:59:18 +0100
+++ libsoup-2.28.2/libsoup/soup-socket.c	2010-02-03 10:40:06 +0100
@@ -844,7 +844,11 @@
 {
 	SoupSocket *sock = data, *new;
 	SoupSocketPrivate *priv = SOUP_SOCKET_GET_PRIVATE (sock), *new_priv;
+	#ifndef __INTERIX
 	struct sockaddr_storage sa;
+	#else
+	struct sockaddr sa;
+	#endif
 	int sa_len, sockfd;
 
 	if (condition & (G_IO_HUP | G_IO_ERR)) {
@@ -1111,7 +1115,11 @@
 
 	g_mutex_lock (priv->addrlock);
 	if (!priv->local_addr) {
+		#ifndef __INTERIX
 		struct sockaddr_storage bound_sa;
+		#else
+		struct sockaddr bound_sa;
+		#endif
 		int sa_len;
 
 		sa_len = sizeof (bound_sa);
@@ -1141,7 +1149,11 @@
 
 	g_mutex_lock (priv->addrlock);
 	if (!priv->remote_addr) {
+		#ifndef __INTERIX
 		struct sockaddr_storage bound_sa;
+		#else
+		struct sockaddr bound_sa;
+		#endif
 		int sa_len;
 
 		sa_len = sizeof (bound_sa);
