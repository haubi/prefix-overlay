diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/include/X11/Xaw/Template.c libXaw-1.0.5/include/X11/Xaw/Template.c
--- libXaw-1.0.5.orig/include/X11/Xaw/Template.c	2009-01-20 14:51:27 +0100
+++ libXaw-1.0.5/include/X11/Xaw/Template.c	2009-01-20 15:58:25 +0100
@@ -30,6 +30,11 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xaw/TemplateP.h>
@@ -196,3 +201,8 @@
 TemplateAction(Widget w, XEvent *event, String *params, Cardinal *num_params)
 {
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Actions.c libXaw-1.0.5/src/Actions.c
--- libXaw-1.0.5.orig/src/Actions.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Actions.c	2009-01-20 16:08:13 +0100
@@ -34,6 +34,11 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/Xmd.h>
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
@@ -1137,3 +1142,8 @@
 }
 
 #endif /* OLDXAW */
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/AllWidgets.c libXaw-1.0.5/src/AllWidgets.c
--- libXaw-1.0.5.orig/src/AllWidgets.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/AllWidgets.c	2009-01-20 16:22:40 +0100
@@ -30,10 +30,16 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/Xmu/WidgetNode.h>
+#include <X11/Shell.h>
 
-extern WidgetClass applicationShellWidgetClass;
+//extern WidgetClass applicationShellWidgetClass;
 extern WidgetClass asciiSinkObjectClass;
 extern WidgetClass asciiSrcObjectClass;
 extern WidgetClass asciiTextWidgetClass;
@@ -47,13 +53,13 @@
 extern WidgetClass menuButtonWidgetClass;
 extern WidgetClass multiSinkObjectClass;
 extern WidgetClass multiSrcObjectClass;
-extern WidgetClass overrideShellWidgetClass;
+//extern WidgetClass overrideShellWidgetClass;
 extern WidgetClass panedWidgetClass;
 extern WidgetClass pannerWidgetClass;
 extern WidgetClass portholeWidgetClass;
 extern WidgetClass repeaterWidgetClass;
 extern WidgetClass scrollbarWidgetClass;
-extern WidgetClass shellWidgetClass;
+//extern WidgetClass shellWidgetClass;
 extern WidgetClass simpleMenuWidgetClass;
 extern WidgetClass simpleWidgetClass;
 extern WidgetClass smeBSBObjectClass;
@@ -64,12 +70,12 @@
 extern WidgetClass textSrcObjectClass;
 extern WidgetClass textWidgetClass;
 extern WidgetClass toggleWidgetClass;
-extern WidgetClass topLevelShellWidgetClass;
-extern WidgetClass transientShellWidgetClass;
+//extern WidgetClass topLevelShellWidgetClass;
+//extern WidgetClass transientShellWidgetClass;
 extern WidgetClass treeWidgetClass;
 extern WidgetClass vendorShellWidgetClass;
 extern WidgetClass viewportWidgetClass;
-extern WidgetClass wmShellWidgetClass;
+//extern WidgetClass wmShellWidgetClass;
 #if !defined(OLDXAW) && !defined(XAW7)
 extern WidgetClass xawPrintShellWidgetClass;
 #endif
@@ -124,3 +130,8 @@
 
 int XawWidgetCount = XtNumber(XawWidgetArray);
 
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/AsciiSink.c libXaw-1.0.5/src/AsciiSink.c
--- libXaw-1.0.5.orig/src/AsciiSink.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/AsciiSink.c	2009-01-20 16:39:26 +0100
@@ -53,6 +53,11 @@
 #endif
 #include <stdio.h>
 #include <stdlib.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xatom.h>
@@ -806,7 +811,7 @@
 	for (i = 0; i < n_paints - 1; i++)
 	    paints[i]->next = paints[i + 1];
 	paints[i]->next = NULL;
-	XtFree((XtPointer)paints);
+	XtFree((String)paints);
     }
 
     /* pass 3: clip gc */
@@ -845,7 +850,7 @@
 	    }
 	    if (i_rects <= n_rects)
 		rects = (XRectangle*)
-		    XtRealloc((XtPointer)rects,	sizeof(XRectangle) *
+		    XtRealloc((String)rects,	sizeof(XRectangle) *
 			      ++n_rects);
 	    rects[i_rects].x = paint->x;
 	    rects[i_rects].y = paint->y - font->ascent;
@@ -858,7 +863,7 @@
 		    for (seg = scan->segment; seg; seg = seg->next) {
 			if (i_rects <= n_rects)
 			    rects = (XRectangle*)
-				XtRealloc((XtPointer)rects, sizeof(XRectangle) *
+				XtRealloc((String)rects, sizeof(XRectangle) *
 					  ++n_rects);
 			rects[i_rects].x = seg->x1;
 			rects[i_rects].y = scan->y;
@@ -882,7 +887,7 @@
 		XSetForeground(XtDisplay(ctx), gc, sink->text_sink.cursor_color);
 	    if (i_rects <= n_rects)
 		rects = (XRectangle*)
-		    XtRealloc((XtPointer)rects,	sizeof(XRectangle) *
+		    XtRealloc((String)rects,	sizeof(XRectangle) *
 			      ++n_rects);
 	    rects[i_rects].x = paint->x;
 	    rects[i_rects].y = paint->y - paint->max_ascent;
@@ -900,7 +905,7 @@
 				   sink->text_sink.cursor_color);
 		if (i_rects <= n_rects)
 		    rects = (XRectangle*)
-			XtRealloc((XtPointer)rects, sizeof(XRectangle) *
+			XtRealloc((String)rects, sizeof(XRectangle) *
 				  ++n_rects);
 		rects[i_rects].x = seg->x1;
 		rects[i_rects].y = scan->y;
@@ -912,7 +917,7 @@
     if (i_rects)
 	XFillRectangles(XtDisplay(ctx), XtWindow(ctx), gc, rects, i_rects);
     if (rects)
-	XtFree((XtPointer)rects);
+	XtFree((String)rects);
 
     /* pass 5: draw text! */
     paint = list->paint;
@@ -1949,3 +1954,8 @@
     }
 #endif
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/AsciiSrc.c libXaw-1.0.5/src/AsciiSrc.c
--- libXaw-1.0.5.orig/src/AsciiSrc.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/AsciiSrc.c	2009-01-20 15:59:44 +0100
@@ -40,6 +40,15 @@
 #include <stdlib.h>
 #include <ctype.h>
 #include <errno.h>
+
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <fcntl.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xos.h>
@@ -55,10 +64,6 @@
 #endif
 #include "Private.h"
 
-#include <sys/types.h>
-#include <sys/stat.h>
-#include <fcntl.h>
-
 #if (defined(ASCII_STRING) || defined(ASCII_DISK))
 #include <X11/Xaw/AsciiText.h>		/* for Widget Classes */
 #endif
@@ -1884,3 +1889,8 @@
     return (src);
 }
 #endif /* ASCII_DISK */
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/AsciiText.c libXaw-1.0.5/src/AsciiText.c
--- libXaw-1.0.5.orig/src/AsciiText.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/AsciiText.c	2009-01-20 16:00:41 +0100
@@ -65,6 +65,11 @@
 #include <config.h>
 #endif
 #include <stdio.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xaw/AsciiTextP.h>
@@ -358,3 +363,8 @@
 			 w == XtParent(ascii->text.source));
 #endif
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Box.c libXaw-1.0.5/src/Box.c
--- libXaw-1.0.5.orig/src/Box.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Box.c	2009-01-20 16:01:06 +0100
@@ -51,6 +51,11 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xmu/Misc.h>
@@ -673,3 +678,8 @@
 	XawRunDisplayList(w, xaw->box.display_list, event, region);
 }
 #endif /* OLDXAW */
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Command.c libXaw-1.0.5/src/Command.c
--- libXaw-1.0.5.orig/src/Command.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Command.c	2009-01-20 16:01:31 +0100
@@ -56,6 +56,11 @@
 #include <config.h>
 #endif
 #include <stdio.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/extensions/shape.h>
@@ -658,3 +663,8 @@
 
     return (False);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Converters.c libXaw-1.0.5/src/Converters.c
--- libXaw-1.0.5.orig/src/Converters.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Converters.c	2009-01-20 16:40:10 +0100
@@ -31,6 +31,11 @@
 #include <config.h>
 #endif
 #include <stdio.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xmu/CharSet.h>
@@ -628,7 +633,7 @@
 	{
 	  XtDisplayStringConversionWarning(dpy, (String)fromVal->addr,
 					   XtRPixmap);
-	  toVal->addr = (XtPointer)XtUnspecifiedPixmap;
+	  toVal->addr = (XPointer)XtUnspecifiedPixmap;
 	  toVal->size = sizeof(Pixmap);
 	  return (False);
 	}
@@ -699,3 +704,8 @@
 }
 
 #endif /* OLDXAW */
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Dialog.c libXaw-1.0.5/src/Dialog.c
--- libXaw-1.0.5.orig/src/Dialog.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Dialog.c	2009-01-20 16:01:43 +0100
@@ -51,6 +51,11 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xos.h>
@@ -461,3 +466,8 @@
 
     return(value);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/DisplayList.c libXaw-1.0.5/src/DisplayList.c
--- libXaw-1.0.5.orig/src/DisplayList.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/DisplayList.c	2009-01-20 16:41:21 +0100
@@ -36,6 +36,11 @@
 #include <string.h>
 #include <stdio.h>
 #include <stdlib.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/CoreP.h>
@@ -1249,7 +1254,7 @@
 	 XEvent *event, Region region)
 {
   XawXlibData *xdata = (XawXlibData *)data;
-  char *dashes = args;
+  char *dashes = (char*)args;
 
   if (xdata->dashes != dashes)
     {
@@ -2075,14 +2080,14 @@
     case COPYAREA:
     case COPYPLANE:
     case IMAGE:
-      XtFree(args);
+      XtFree((String)args);
       break;
     case DSTRING:
     case PSTRING:
       {
 	XawDLStringArgs *string = (XawDLStringArgs *)args;
 	XtFree(string->string);
-	XtFree(args);
+	XtFree((String)args);
       } break;
     case DLINES:
     case FPOLY:
@@ -2093,7 +2098,7 @@
 	XawDLPositionPtr *ptr = (XawDLPositionPtr *)args;
 
 	XtFree((char *)ptr->pos);
-	XtFree(args);
+	XtFree((String)args);
       } break;
     }
 }
@@ -2255,3 +2260,8 @@
 }
 
 #endif /* OLDXAW */
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Form.c libXaw-1.0.5/src/Form.c
--- libXaw-1.0.5.orig/src/Form.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Form.c	2009-01-20 16:01:55 +0100
@@ -52,6 +52,11 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xmu/CharSet.h>
@@ -1108,3 +1113,8 @@
 	}
     }
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Grip.c libXaw-1.0.5/src/Grip.c
--- libXaw-1.0.5.orig/src/Grip.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Grip.c	2009-01-20 16:02:04 +0100
@@ -55,6 +55,11 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xaw/GripP.h>
@@ -186,3 +191,8 @@
 
     XtCallCallbacks(widget, XtNcallback, (XtPointer)&call_data);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Label.c libXaw-1.0.5/src/Label.c
--- libXaw-1.0.5.orig/src/Label.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Label.c	2009-01-20 16:02:06 +0100
@@ -53,6 +53,11 @@
 #endif
 #include <stdio.h>
 #include <ctype.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xos.h>
@@ -822,3 +827,8 @@
 
     return (XtGeometryAlmost);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/List.c libXaw-1.0.5/src/List.c
--- libXaw-1.0.5.orig/src/List.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/List.c	2009-01-20 16:02:08 +0100
@@ -41,6 +41,11 @@
 #endif
 #include <stdio.h>
 #include <ctype.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xmu/Drawing.h>
@@ -1271,3 +1276,8 @@
 
     return (ret_val);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/MenuButton.c libXaw-1.0.5/src/MenuButton.c
--- libXaw-1.0.5.orig/src/MenuButton.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/MenuButton.c	2009-01-20 16:02:11 +0100
@@ -44,6 +44,11 @@
 #include <config.h>
 #endif
 #include <stdio.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xmu/SysUtil.h>
@@ -274,3 +279,8 @@
 
     XtPopupSpringLoaded(menu);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/MultiSink.c libXaw-1.0.5/src/MultiSink.c
--- libXaw-1.0.5.orig/src/MultiSink.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/MultiSink.c	2009-01-20 16:02:28 +0100
@@ -75,6 +75,13 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+#include <stdio.h>
+#include <ctype.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xatom.h>
@@ -83,8 +90,6 @@
 #include <X11/Xaw/MultiSrcP.h>
 #include <X11/Xaw/TextP.h>
 #include "XawI18n.h"
-#include <stdio.h>
-#include <ctype.h>
 #include "Private.h"
 
 #ifdef GETLASTPOS
@@ -976,3 +981,8 @@
     _XawTextPosToXY(w, pos, x, y);
     *y += abs(ext->max_logical_extent.y);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/MultiSrc.c libXaw-1.0.5/src/MultiSrc.c
--- libXaw-1.0.5.orig/src/MultiSrc.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/MultiSrc.c	2009-01-20 16:09:33 +0100
@@ -62,6 +62,14 @@
 #include <stdlib.h>
 #include <ctype.h>
 #include <errno.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <fcntl.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xfuncs.h>
@@ -74,10 +82,6 @@
 #include "XawI18n.h"
 #include "Private.h"
 
-#include <sys/types.h>
-#include <sys/stat.h>
-#include <fcntl.h>
-
 #define MAGIC_VALUE	((XawTextPosition)-1)
 #define streq(a, b)	(strcmp((a), (b)) == 0)
 
@@ -1346,7 +1350,7 @@
 		    "<<< FILE CONTENTS NOT REPRESENTABLE IN THIS LOCALE >>>";
 
 		params[0] = XtName(XtParent((Widget)src));
-		params[1] = src->multi_src.string;
+		params[1] = (String)src->multi_src.string;
 		num_params = 2;
 
 		XtAppWarningMsg(XtWidgetToApplicationContext((Widget)src),
@@ -1618,3 +1622,8 @@
 
     value->addr = (XPointer)&pagesize;
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/OS.c libXaw-1.0.5/src/OS.c
--- libXaw-1.0.5.orig/src/OS.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/OS.c	2009-01-20 16:03:22 +0100
@@ -5,14 +5,19 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
-#include <X11/Xosdefs.h>
-#include <X11/IntrinsicP.h>
-#include "Private.h"
 
 #ifndef X_NOT_POSIX
 #include <unistd.h>	/* for sysconf(), and getpagesize() */
 #endif
 
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#include <X11/Xosdefs.h>
+#include <X11/IntrinsicP.h>
+#include "Private.h"
+
 #if defined(linux)
 /* kernel header doesn't work with -ansi */
 /* #include <asm/page.h> *//* for PAGE_SIZE */
@@ -62,3 +67,8 @@
 
     return pagesize;
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Paned.c libXaw-1.0.5/src/Paned.c
--- libXaw-1.0.5.orig/src/Paned.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Paned.c	2009-01-20 16:03:34 +0100
@@ -61,6 +61,11 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/cursorfont.h>
 #include <X11/StringDefs.h>
@@ -2065,3 +2070,8 @@
 {
     PaneInfo(widget)->allow_resize = allow_resize;
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Panner.c libXaw-1.0.5/src/Panner.c
--- libXaw-1.0.5.orig/src/Panner.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Panner.c	2009-01-20 16:04:01 +0100
@@ -33,6 +33,17 @@
 #endif
 #include <ctype.h>
 #include <math.h>
+
+#if defined(ISC) && __STDC__ && !defined(ISC30)
+extern double atof(char *);
+#else
+#include <stdlib.h>			/* for atof() */
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xos.h>
@@ -43,12 +54,6 @@
 #include <X11/Xaw/XawInit.h>
 #include "Private.h"
 
-#if defined(ISC) && __STDC__ && !defined(ISC30)
-extern double atof(char *);
-#else
-#include <stdlib.h>			/* for atof() */
-#endif
-
 /*
  * Class Methods
  */
@@ -1080,3 +1085,8 @@
 	XtSetValues(gw, args, 1);
     }
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Pixmap.c libXaw-1.0.5/src/Pixmap.c
--- libXaw-1.0.5.orig/src/Pixmap.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Pixmap.c	2009-01-20 16:04:07 +0100
@@ -33,6 +33,11 @@
 #include <string.h>
 #include <stdio.h>
 #include <stdlib.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/Xmu/CharSet.h>
 #include <X11/Xfuncs.h>
@@ -991,3 +996,8 @@
 }
 
 #endif /* OLDXAW */
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Porthole.c libXaw-1.0.5/src/Porthole.c
--- libXaw-1.0.5.orig/src/Porthole.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Porthole.c	2009-01-20 16:04:15 +0100
@@ -33,6 +33,11 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xmu/Misc.h>
@@ -376,3 +381,8 @@
 	SendReport(pw, XawPRAll);
     }
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Repeater.c libXaw-1.0.5/src/Repeater.c
--- libXaw-1.0.5.orig/src/Repeater.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Repeater.c	2009-01-20 16:04:23 +0100
@@ -32,6 +32,11 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xaw/RepeaterP.h>
@@ -298,3 +303,8 @@
     if (rw->repeater.stop_callbacks) 
 	XtCallCallbackList(gw, rw->repeater.stop_callbacks, NULL);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Scrollbar.c libXaw-1.0.5/src/Scrollbar.c
--- libXaw-1.0.5.orig/src/Scrollbar.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Scrollbar.c	2009-01-20 16:04:31 +0100
@@ -51,6 +51,11 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xmu/Drawing.h>
@@ -883,3 +888,8 @@
 				shown : w->scrollbar.shown;
     PaintThumb(w);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Simple.c libXaw-1.0.5/src/Simple.c
--- libXaw-1.0.5.orig/src/Simple.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Simple.c	2009-01-20 16:42:38 +0100
@@ -53,6 +53,11 @@
 #include <config.h>
 #endif
 #include <stdio.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xmu/Drawing.h>
@@ -306,7 +311,7 @@
     SimpleWidget simple = (SimpleWidget)w;
 
     if (simple->simple.tip)
-	XtFree((XtPointer)simple->simple.tip);
+	XtFree((String)simple->simple.tip);
 }
 #endif
 
@@ -449,7 +454,7 @@
 
     if (s_old->simple.tip != s_new->simple.tip) {
 	if (s_old->simple.tip)
-	    XtFree((XtPointer)s_old->simple.tip);
+	    XtFree((String)s_old->simple.tip);
 	if (s_new->simple.tip)
 	    s_new->simple.tip = XtNewString(s_new->simple.tip);
     }
@@ -502,3 +507,8 @@
 
     return (False);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/SimpleMenu.c libXaw-1.0.5/src/SimpleMenu.c
--- libXaw-1.0.5.orig/src/SimpleMenu.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/SimpleMenu.c	2009-01-20 16:04:47 +0100
@@ -40,6 +40,11 @@
 #include <config.h>
 #endif
 #include <stdio.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xmu/Initer.h>
@@ -1832,3 +1837,8 @@
     smw->simple_menu.state &= ~(SMW_UNMAPPING | SMW_POPLEFT);
 }
 #endif /* OLDXAW */
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Sme.c libXaw-1.0.5/src/Sme.c
--- libXaw-1.0.5.orig/src/Sme.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Sme.c	2009-01-20 16:04:49 +0100
@@ -37,6 +37,11 @@
 #include <config.h>
 #endif
 #include <stdio.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xaw/Cardinals.h>
@@ -270,3 +275,8 @@
 
     return (ret_val);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/SmeBSB.c libXaw-1.0.5/src/SmeBSB.c
--- libXaw-1.0.5.orig/src/SmeBSB.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/SmeBSB.c	2009-01-20 16:04:52 +0100
@@ -40,6 +40,11 @@
 #include <config.h>
 #endif
 #include <stdio.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xos.h>
@@ -772,3 +777,8 @@
     XtReleaseGC(w, entry->sme_bsb.rev_gc);
     XtReleaseGC(w, entry->sme_bsb.invert_gc);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/SmeLine.c libXaw-1.0.5/src/SmeLine.c
--- libXaw-1.0.5.orig/src/SmeLine.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/SmeLine.c	2009-01-20 16:04:54 +0100
@@ -41,6 +41,11 @@
 #include <config.h>
 #endif
 #include <stdio.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xaw/Cardinals.h>
@@ -265,3 +270,8 @@
 
     return (False);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/StripChart.c libXaw-1.0.5/src/StripChart.c
--- libXaw-1.0.5.orig/src/StripChart.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/StripChart.c	2009-01-20 16:10:27 +0100
@@ -52,6 +52,11 @@
 #include <config.h>
 #endif
 #include <stdio.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xfuncs.h>
@@ -567,7 +572,7 @@
     
     size = sizeof(XPoint) * (w->strip_chart.scale - 1);
 
-    points = (XPoint *)XtRealloc((XtPointer)w->strip_chart.points, size);
+    points = (XPoint *)XtRealloc((String)w->strip_chart.points, size);
     w->strip_chart.points = points;
 
     /* Draw graph reference lines into clip mask */
@@ -577,3 +582,8 @@
 	points[i - 1].y = XtHeight(w) / w->strip_chart.scale;
     }
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Text.c libXaw-1.0.5/src/Text.c
--- libXaw-1.0.5.orig/src/Text.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Text.c	2009-01-20 16:10:58 +0100
@@ -80,6 +80,11 @@
 #include <config.h>
 #endif
 #include <stdio.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Shell.h>
@@ -2062,7 +2067,7 @@
 
 	    textprop.encoding = XA_COMPOUND_TEXT(d);
 	    textprop.value = (unsigned char *)*value;
-	    textprop.nitems = strlen(*value);
+	    textprop.nitems = strlen((String)*value);
 	    textprop.format = 8;
 	    if (XwcTextPropertyToTextList(d, &textprop, &wlist, &count)
 		 < Success
@@ -2086,7 +2091,7 @@
 
 	    textprop.encoding = XA_COMPOUND_TEXT(d);
 	    textprop.value = (unsigned char *)*value;
-	    textprop.nitems = strlen(*value);
+	    textprop.nitems = strlen((String)*value);
 	    textprop.format = 8;
 	    if (Xutf8TextPropertyToTextList(d, &textprop, &list, &count)
 		 < Success
@@ -4162,3 +4167,8 @@
 };
 
 WidgetClass textWidgetClass = (WidgetClass)&textClassRec;
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/TextAction.c libXaw-1.0.5/src/TextAction.c
--- libXaw-1.0.5.orig/src/TextAction.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/TextAction.c	2009-01-20 16:52:25 +0100
@@ -32,8 +32,13 @@
 #endif
 #include <stdio.h>
 #include <stdlib.h>
-#include <X11/Xos.h>		/* for select() and struct timeval */
 #include <ctype.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#include <X11/Xos.h>		/* for select() and struct timeval */
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xatom.h>
@@ -394,7 +399,7 @@
 		/* We tried all possible text targets in this param.
 		   Recurse on the tail of the params list. */
 		GetSelection(w, list->time, list->params, list->count);
-		XtFree(client_data);
+		XtFree((String)client_data);
 	    }
 	}
 	return;
@@ -408,7 +413,7 @@
 
 	textprop.encoding = *type;
 	textprop.value = (unsigned char *)value;
-	textprop.nitems = strlen(value);
+	textprop.nitems = strlen((String)value);
 	textprop.format = 8;
 
 	if (XwcTextPropertyToTextList(d, &textprop, &wlist, &count)
@@ -432,7 +437,7 @@
 	value = (XPointer)wlist[0];
 
 	*length = wcslen(wlist[0]);
-	XtFree((XtPointer)wlist);
+	XtFree((String)wlist);
 	text.format = XawFmtWide;
     } else {
 	XTextProperty textprop;
@@ -441,7 +446,7 @@
 
 	textprop.encoding = *type;
 	textprop.value = (unsigned char *)value;
-	textprop.nitems = strlen(value);
+	textprop.nitems = strlen((String)value);
 	textprop.format = 8;
 
 	if (XmbTextPropertyToTextList(d, &textprop, &list, &count)
@@ -465,7 +470,7 @@
 	value = (XPointer)list[0];
 
 	*length = strlen(list[0]);
-	XtFree((XtPointer)list);
+	XtFree((String)list);
 	text.format = XawFmt8Bit;
     }
     text.ptr = (char*)value;
@@ -482,7 +487,7 @@
 				  XawstPositions, XawsdRight, text.length, True);
 
     EndAction(ctx);
-    XtFree(client_data);
+    XtFree((String)client_data);
     XFree(value);	/* the selection value should be freed with XFree */
 }
 
@@ -1053,19 +1058,19 @@
 		if (XwcTextListToTextProperty(d, (wchar_t**)value, 1,
 					      XCompoundTextStyle, &textprop)
 		    < Success) {
-		    XtFree(*value);
+		    XtFree((String)*value);
 		    return (False);
 		}
-		XtFree(*value);
+		XtFree((String)*value);
 		*value = (XtPointer)textprop.value;
 		*length = textprop.nitems;
 	    }
 	    else
-		*length = strlen(*value);
+		*length = strlen((String)*value);
 	}
 	else {
 	    *value = XtMalloc((salt->length + 1) * sizeof(unsigned char));
-	    strcpy (*value, salt->contents);
+	    strcpy ((String)*value, salt->contents);
 	    *length = salt->length;
 	}
 	/* Got *value,*length, now in COMPOUND_TEXT format. */
@@ -1076,15 +1081,15 @@
 
 	    textprop.encoding = XA_COMPOUND_TEXT(d);
 	    textprop.value = (unsigned char *)*value;
-	    textprop.nitems = strlen(*value);
+	    textprop.nitems = strlen((String)*value);
 	    textprop.format = 8;
 	    if (XwcTextPropertyToTextList(d, &textprop, &wlist, &count)
 		 < Success
 		|| count < 1) {
-		XtFree(*value);
+		XtFree((String)*value);
 		return (False);
 	    }
-	    XtFree(*value);
+	    XtFree((String)*value);
 	    if (XwcTextListToTextProperty(d, wlist, 1, XStringStyle, &textprop)
 		 < Success) {
 		XwcFreeStringList((wchar_t**)wlist);
@@ -1100,15 +1105,15 @@
 
 	    textprop.encoding = XA_COMPOUND_TEXT(d);
 	    textprop.value = (unsigned char *)*value;
-	    textprop.nitems = strlen(*value);
+	    textprop.nitems = strlen((String)*value);
 	    textprop.format = 8;
 	    if (Xutf8TextPropertyToTextList(d, &textprop, &list, &count)
 		 < Success
 		|| count < 1) {
-		XtFree(*value);
+		XtFree((String)*value);
 		return (False);
 	    }
-	    XtFree(*value);
+	    XtFree((String)*value);
 	    *value = *list;
 	    *length = strlen(*list);
 	    XFree(list);
@@ -2015,7 +2020,7 @@
     if (undo) {
 	if (!pos) {
 	    num_pos = src->textSrc.num_text;
-	    pos = XawStackAlloc(sizeof(XawTextPosition) * num_pos, buf);
+	    pos = (XawTextPosition*)XawStackAlloc(sizeof(XawTextPosition) * num_pos, buf);
 	    for (i = 0; i < num_pos; i++)
 		pos[i] = ((TextWidget)src->textSrc.text[i])->text.insertPos;
 	    freepos = True;
@@ -2147,7 +2152,7 @@
     if (count < ctx->text.left_column) {
 	int bytes = ctx->text.left_column - count;
 
-	text.ptr = XawStackAlloc(bytes, buf);
+	text.ptr = (String)XawStackAlloc(bytes, buf);
 	text.length = bytes;
 	for (i = 0; i < bytes; i++)
 	    text.ptr[i] = ' ';
@@ -2250,7 +2255,7 @@
 		    }
 		    count = (count + alnum) >> 1;
 		}
-		text.ptr = XawStackAlloc(count, buf);
+		text.ptr = (String)XawStackAlloc(count, buf);
 		text.length = count;
 		for (i = 0; i < count; i++)
 		    text.ptr[i] = ' ';
@@ -2290,7 +2295,7 @@
 		    inc = ii = (count + .5) / (double)i;
 
 		    steps = count;
-		    text.ptr = XawStackAlloc(steps, buf);
+		    text.ptr = (String)XawStackAlloc(steps, buf);
 		    for (i = 0; i < steps; i++)
 			text.ptr[i] = ' ';
 		    tmp = left;
@@ -2363,7 +2368,7 @@
 
     StartAction(ctx, event);
 
-    pos = XawStackAlloc(sizeof(XawTextPosition) * src->textSrc.num_text, posbuf);
+    pos = (XawTextPosition*)XawStackAlloc(sizeof(XawTextPosition) * src->textSrc.num_text, posbuf);
     for (i = 0; i < src->textSrc.num_text; i++)
 	pos[i] = ((TextWidget)src->textSrc.text[i])->text.insertPos;
 
@@ -2396,7 +2401,7 @@
     tmp = from;
 
     if (spaces > 0) {
-	text.ptr = XawStackAlloc(spaces, buf);
+	text.ptr = (String)XawStackAlloc(spaces, buf);
 	for (i = 0; i < spaces; i++)
 	    text.ptr[i] = ' ';
 
@@ -2520,13 +2525,13 @@
     if (text.format == XawFmtWide) {
 	wchar_t *wptr;
 
-	text.ptr =  XawStackAlloc(sizeof(wchar_t) * mult, buf);
+	text.ptr =  (String)XawStackAlloc(sizeof(wchar_t) * mult, buf);
 	wptr = (wchar_t *)text.ptr;
 	for (count = 0; count < mult; count++)
 	    wptr[count] = _Xaw_atowc(XawLF);
     }
     else {
-	text.ptr = XawStackAlloc(sizeof(char) * mult, buf);
+	text.ptr = (String)XawStackAlloc(sizeof(char) * mult, buf);
 	for (count = 0; count < mult; count++)
 	    text.ptr[count] = XawLF;
     }
@@ -2908,7 +2913,7 @@
 	    break;
     if (i >= num_focus) {
 	focus = (struct _focus*)
-	    XtRealloc((XtPointer)focus, sizeof(struct _focus) * (num_focus + 1));
+	    XtRealloc((String)focus, sizeof(struct _focus) * (num_focus + 1));
 	i = num_focus;
 	focus[i].widget = NULL;
 	focus[i].display = XtDisplay(w);
@@ -3090,7 +3095,7 @@
 
     text.format = _XawTextFormat(ctx);
     if (text.format == XawFmtWide) {
-	text.ptr = ptr = XawStackAlloc(sizeof(wchar_t) * text.length
+	text.ptr = ptr = (String)XawStackAlloc(sizeof(wchar_t) * text.length
 				       * mult, ptrbuf);
 	for (count = 0; count < mult; count++) {
 	    memcpy((char*)ptr, (char *)strbuf, sizeof(wchar_t) * text.length);
@@ -3102,7 +3107,7 @@
 #endif
     }
     else {	/* == XawFmt8Bit */
-	text.ptr = ptr = XawStackAlloc(text.length * mult, ptrbuf);
+	text.ptr = ptr = (String)XawStackAlloc(text.length * mult, ptrbuf);
 	for (count = 0; count < mult; count++) {
 	    strncpy(ptr, strbuf, text.length);
 	    ptr += text.length;
@@ -3943,7 +3948,7 @@
     StartAction(ctx, event);
 
 #ifndef OLDXAW
-    pos = XawStackAlloc(sizeof(XawTextPosition) * src->textSrc.num_text, buf);
+    pos = (XawTextPosition*)XawStackAlloc(sizeof(XawTextPosition) * src->textSrc.num_text, buf);
     for (i = 0; i < src->textSrc.num_text; i++)
 	pos[i] = ((TextWidget)src->textSrc.text[i])->text.old_insert;
 #else
@@ -4426,3 +4431,8 @@
 };
 
 Cardinal _XawTextActionsTableCount = XtNumber(_XawTextActionsTable);
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/TextPop.c libXaw-1.0.5/src/TextPop.c
--- libXaw-1.0.5.orig/src/TextPop.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/TextPop.c	2009-01-20 16:19:22 +0100
@@ -52,6 +52,11 @@
 #endif
 #include <stdio.h>
 #include <errno.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Shell.h> 
@@ -66,6 +71,10 @@
 #include <X11/Xaw/Toggle.h>
 #include "XawI18n.h"
 
+#ifdef _WIN32
+#undef CreateDialog
+#endif
+
 static char* INSERT_FILE = "Enter Filename:";
 static char* SEARCH_LABEL_1 = "Use <Tab> to change fields.";
 static char* SEARCH_LABEL_2 = "Use ^q<Tab> for <Tab>.";
@@ -1552,3 +1561,8 @@
     wm_delete_window = XInternAtom(XtDisplay(w), WM_DELETE_WINDOW, False);
     (void)XSetWMProtocols(XtDisplay(w), XtWindow(w), &wm_delete_window, 1);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/TextSink.c libXaw-1.0.5/src/TextSink.c
--- libXaw-1.0.5.orig/src/TextSink.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/TextSink.c	2009-01-20 16:44:13 +0100
@@ -43,6 +43,11 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <ctype.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xaw/TextP.h>
@@ -666,7 +671,7 @@
 {
     TextSinkObjectClass cclass = (TextSinkObjectClass)w->core.widget_class;
 
-    (*cclass->text_sink_class.InsertCursor)(w, x, y, state);
+    (*cclass->text_sink_class.InsertCursor)(w, x, y, (XawTextInsertState)state);
 }
 
 /*
@@ -990,10 +995,10 @@
     while (paint) {
 	next = paint->next;
 	if (paint->text)
-	    XtFree((XtPointer)paint->text);
+	    XtFree((String)paint->text);
 	if (paint->backtabs)
 	    XmuDestroyArea(paint->backtabs);
-	XtFree((XtPointer)paint);
+	XtFree((String)paint);
 	paint = next;
     }
 
@@ -1001,12 +1006,12 @@
     while (paint) {
 	next = paint->next;
 	if (paint->text)
-	    XtFree((XtPointer)paint->text);
-	XtFree((XtPointer)paint);
+	    XtFree((String)paint->text);
+	XtFree((String)paint);
 	paint = next;
     }
 
-    XtFree((XtPointer)sink->text_sink.paint);
+    XtFree((String)sink->text_sink.paint);
     sink->text_sink.paint = NULL;
     return (True);
 }
@@ -1351,13 +1356,13 @@
 	if (result->font)
 	    XFreeFont(DisplayOfScreen(list->screen), result->font);
 	if (replace)
-	    XtFree((XtPointer)result);
+	    XtFree((String)result);
 
 	return (property);
     }
 
     list->properties = (XawTextProperty**)
-	XtRealloc((XtPointer)list->properties, sizeof(XawTextProperty*) *
+	XtRealloc((String)list->properties, sizeof(XawTextProperty*) *
 		  (list->num_properties + 1));
     list->properties[list->num_properties++] = result;
     qsort((void*)list->properties, list->num_properties,
@@ -1713,7 +1718,7 @@
     }
 
     prop_lists = (XawTextPropertyList**)
-    XtRealloc((XtPointer)prop_lists, sizeof(XawTextPropertyList*) *
+    XtRealloc((String)prop_lists, sizeof(XawTextPropertyList*) *
 	      (num_prop_lists + 1));
     prop_lists[num_prop_lists++] = propl;
     qsort((void*)prop_lists, num_prop_lists, sizeof(XawTextPropertyList*),
@@ -1827,3 +1832,8 @@
     return (True);
 }
 #endif
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/TextSrc.c libXaw-1.0.5/src/TextSrc.c
--- libXaw-1.0.5.orig/src/TextSrc.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/TextSrc.c	2009-01-20 16:45:55 +0100
@@ -37,6 +37,11 @@
 #endif
 #include <stdio.h>
 #include <ctype.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xfuncs.h>
@@ -348,12 +353,12 @@
 	    entity = src->textSrc.anchors[i]->entities;
 	    while (entity) {
 		enext = entity->next;
-		XtFree((XtPointer)entity);
+		XtFree((String)entity);
 		entity = enext;
 	    }
-	    XtFree((XtPointer)src->textSrc.anchors[i]);
+	    XtFree((String)src->textSrc.anchors[i]);
 	}
-	XtFree((XtPointer)src->textSrc.anchors);
+	XtFree((String)src->textSrc.anchors);
     }
 #endif /* OLDXAW */
 }
@@ -1030,7 +1035,7 @@
 		    enext = entity->next;
 		    eprev->next = enext;
 		    anchor->cache = NULL;
-		    XtFree((XtPointer)entity);
+		    XtFree((String)entity);
 		    if (entity == anchor->entities) {
 			if ((anchor->entities = enext) == NULL) {
 			    eprev = NULL;
@@ -1061,7 +1066,7 @@
 		    enext = entity->next;
 		    if (eprev)
 			eprev->next = enext;
-		    XtFree((XtPointer)entity);
+		    XtFree((String)entity);
 		    anchor->cache = NULL;
 		    if (entity == anchor->entities) {
 			eprev = NULL;
@@ -1073,7 +1078,7 @@
 					&src->textSrc.anchors[i + 1],
 					(src->textSrc.num_anchors - i) *
 					sizeof(XawTextAnchor*));
-				XtFree((XtPointer)anchor);
+				XtFree((String)anchor);
 			    }
 			    if (i >= src->textSrc.num_anchors) {
 				anchor = NULL;
@@ -1152,7 +1157,7 @@
 		    while (entity) {
 			enext = entity->next;
 			if (entity->offset + entity->length <= -diff)
-			    XtFree((XtPointer)entity);
+			    XtFree((String)entity);
 			else
 			    break;
 			entity = enext;
@@ -1425,7 +1430,7 @@
     TextSrcObjectClass cclass = (TextSrcObjectClass)w->core.widget_class;
 
     return ((*cclass->textSrc_class.Scan)
-	    (w, position, type, dir, count, include));
+	    (w, position, (XawTextScanType)type, (XawTextScanDirection)dir, count, include));
 }
 
 /*
@@ -1455,7 +1460,7 @@
 {
     TextSrcObjectClass cclass = (TextSrcObjectClass)w->core.widget_class;
 
-    return ((*cclass->textSrc_class.Search)(w, position, dir, text));
+    return ((*cclass->textSrc_class.Search)(w, position, (XawTextScanDirection)dir, text));
 }
 
 /*
@@ -1588,7 +1593,7 @@
     }
     wstr = wlist[0];
     *len_in_out = wcslen(wstr);
-    XtFree((XtPointer)wlist);
+    XtFree((String)wlist);
 
     return (wstr);
 }
@@ -1661,7 +1666,7 @@
     anchor->cache = NULL;
 
     src->textSrc.anchors = (XawTextAnchor**)
-	XtRealloc((XtPointer)src->textSrc.anchors, sizeof(XawTextAnchor*) *
+	XtRealloc((String)src->textSrc.anchors, sizeof(XawTextAnchor*) *
 		  (src->textSrc.num_anchors + 1));
     src->textSrc.anchors[src->textSrc.num_anchors++] = anchor;
     qsort((void*)src->textSrc.anchors, src->textSrc.num_anchors,
@@ -1781,7 +1786,7 @@
 	return (src->textSrc.num_anchors > 1 ? src->textSrc.anchors[1] : NULL);
 
     if (i < src->textSrc.num_anchors) {
-	XtFree((XtPointer)anchor);
+	XtFree((String)anchor);
 	if (i < --src->textSrc.num_anchors) {
 	    memmove(&src->textSrc.anchors[i],
 		    &src->textSrc.anchors[i + 1],
@@ -1934,7 +1939,7 @@
 	if (length <= 0) {
 	    enext = entity->next;
 	    eprev->next = enext;
-	    XtFree((XtPointer)entity);
+	    XtFree((String)entity);
 	    anchor->cache = NULL;
 	    if (entity == anchor->entities) {
 		eprev = NULL;
@@ -1971,7 +1976,7 @@
 	    enext = entity->next;
 	    if (eprev)
 		eprev->next = enext;
-	    XtFree((XtPointer)entity);
+	    XtFree((String)entity);
 	    if (entity == anchor->entities) {
 		eprev = anchor->cache = NULL;
 		if ((anchor->entities = enext) == NULL) {
@@ -2009,3 +2014,8 @@
     return (anchor);
 }
 #endif
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/TextTr.c libXaw-1.0.5/src/TextTr.c
--- libXaw-1.0.5.orig/src/TextTr.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/TextTr.c	2009-01-20 16:06:51 +0100
@@ -43,6 +43,10 @@
 input.  This merely makes sure the input is connected.
 */
 
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 char _XawDefaultTextTranslations[] =
 "c<Key>A:"		"beginning-of-line()\n"
 "c<Key>B:"		"backward-character()\n"
@@ -157,3 +161,7 @@
 "<Btn3Motion>:"		"extend-adjust()\n"
 "<Btn3Up>:"		"extend-end(PRIMARY, CUT_BUFFER0)\n"
 ;
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Tip.c libXaw-1.0.5/src/Tip.c
--- libXaw-1.0.5.orig/src/Tip.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Tip.c	2009-01-20 16:06:59 +0100
@@ -32,6 +32,11 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xos.h>
@@ -636,3 +641,8 @@
     if (info->widget == w)
 	ResetTip(info, False);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Toggle.c libXaw-1.0.5/src/Toggle.c
--- libXaw-1.0.5.orig/src/Toggle.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Toggle.c	2009-01-20 16:07:02 +0100
@@ -40,6 +40,11 @@
 #include <config.h>
 #endif
 #include <stdio.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xmu/Converters.h>
@@ -630,3 +635,8 @@
 
     TurnOffRadioSiblings(radio_group);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Tree.c libXaw-1.0.5/src/Tree.c
--- libXaw-1.0.5.orig/src/Tree.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Tree.c	2009-01-20 16:07:09 +0100
@@ -53,6 +53,11 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xaw/XawInit.h>
@@ -1015,3 +1020,8 @@
     layout_tree ((TreeWidget) tree, FALSE);
 }
 
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Vendor.c libXaw-1.0.5/src/Vendor.c
--- libXaw-1.0.5.orig/src/Vendor.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Vendor.c	2009-01-20 16:19:49 +0100
@@ -61,6 +61,11 @@
 #include <config.h>
 #endif
 #include <stdio.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/ShellP.h>
@@ -315,7 +320,7 @@
     mbs = XtRealloc(mbs, len + 1); /* keep buffer because no one call free :( */
     strcpy(mbs, *list);
     XFreeStringList(list);
-    toVal->addr = (XtPointer)mbs;
+    toVal->addr = (XPointer)mbs;
     return True;
 }
 
@@ -525,3 +530,8 @@
 	    }
 	}
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/Viewport.c libXaw-1.0.5/src/Viewport.c
--- libXaw-1.0.5.orig/src/Viewport.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/Viewport.c	2009-01-20 16:07:23 +0100
@@ -51,6 +51,11 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xmu/Misc.h>
@@ -1100,3 +1105,8 @@
 
     MoveChild (w, -x, -y);
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/XawI18n.c libXaw-1.0.5/src/XawI18n.c
--- libXaw-1.0.5.orig/src/XawI18n.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/XawI18n.c	2009-01-20 16:07:29 +0100
@@ -58,6 +58,11 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include "XawI18n.h"
 
@@ -106,3 +111,8 @@
     return (isalnum(*mb));
 #endif    
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/XawIm.c libXaw-1.0.5/src/XawIm.c
--- libXaw-1.0.5.orig/src/XawIm.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/XawIm.c	2009-01-20 16:21:32 +0100
@@ -57,6 +57,13 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+#include <ctype.h>
+#include <stdarg.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/StringDefs.h>
 #include <X11/Xos.h>
@@ -68,9 +75,11 @@
 #include <X11/Xaw/XawImP.h>
 #include <X11/Xaw/VendorEP.h>
 #include "XawI18n.h"
-#include <ctype.h>
 
-#include <stdarg.h>
+#ifdef _WIN32
+# undef CreateIC
+# define SetFocus XawSetFocus
+#endif
 
 #define maxAscentOfFontSet(fontset)     \
         ( - (XExtentsOfFontSet((fontset)))->max_logical_extent.y)
@@ -295,7 +304,7 @@
 
 	pe_attr = XVaCreateNestedList(0, XNArea, &pe_area, NULL);
 	XSetICValues(p->xic, XNPreeditAttributes, pe_attr, NULL);
-	XtFree(pe_attr);
+	XtFree((String)pe_attr);
     }
 }
 
@@ -912,8 +921,8 @@
 		       ic_a[4], ic_a[5], ic_a[6], ic_a[7], ic_a[8], ic_a[9],
 		       ic_a[10], ic_a[11], ic_a[12], ic_a[13], ic_a[14],
 		       ic_a[15], ic_a[16], ic_a[17], ic_a[18], NULL);
-    if (pe_attr) XtFree(pe_attr);
-    if (st_attr) XtFree(st_attr);
+    if (pe_attr) XtFree((String)pe_attr);
+    if (st_attr) XtFree((String)st_attr);
 
     if (p->xic == NULL) {
 	p->openic_error = True;
@@ -1053,8 +1062,8 @@
 		     ic_a[5], ic_a[6], ic_a[7], ic_a[8], ic_a[9], ic_a[10],
 		     ic_a[11], ic_a[12], ic_a[13], ic_a[14], ic_a[15],
 		     ic_a[16], ic_a[17], ic_a[18], NULL);
-	if (pe_attr) XtFree(pe_attr);
-	if (st_attr) XtFree(st_attr);
+	if (pe_attr) XtFree((String)pe_attr);
+	if (st_attr) XtFree((String)st_attr);
     }
 
     if (IsSharedIC(ve) && p->flg & CIFontSet)
@@ -1610,3 +1619,8 @@
     if ( (ve = GetExtPart( (VendorShellWidget) w )) != NULL )
         Destroy( w, ve );
 }
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/XawInit.c libXaw-1.0.5/src/XawInit.c
--- libXaw-1.0.5.orig/src/XawInit.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/XawInit.c	2009-01-20 16:07:58 +0100
@@ -38,6 +38,11 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/Intrinsic.h>
 #include <X11/Vendor.h>
 #include <X11/Xaw/XawInit.h>
@@ -98,3 +103,8 @@
     return toplevel;
 }
 
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
diff -ru -x '*.Po' -x '*.Plo' libXaw-1.0.5.orig/src/sharedlib.c libXaw-1.0.5/src/sharedlib.c
--- libXaw-1.0.5.orig/src/sharedlib.c	2009-01-20 14:51:28 +0100
+++ libXaw-1.0.5/src/sharedlib.c	2009-01-20 16:04:40 +0100
@@ -30,6 +30,11 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <X11/IntrinsicP.h>
 #include <X11/Xaw/AsciiSinkP.h>
 #include <X11/Xaw/AsciiSrcP.h>
@@ -180,3 +185,8 @@
 #endif
  
 #endif /* SUNSHLIB */
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif
+
