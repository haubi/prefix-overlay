diff -ru -x '*.Po' -x '*.Plo' libxcb-1.4.orig/src/xcb_auth.c libxcb-1.4/src/xcb_auth.c
--- libxcb-1.4.orig/src/xcb_auth.c	2009-08-20 16:04:01 +0200
+++ libxcb-1.4/src/xcb_auth.c	2009-08-20 16:39:28 +0200
@@ -34,6 +34,10 @@
 #include <unistd.h>
 #include <stdlib.h>
 
+#ifdef __INTERIX
+#include <arpa/inet.h>
+#endif
+
 #include "xcb.h"
 #include "xcbint.h"
 
@@ -119,7 +123,9 @@
         if(!addr)
             addr = (char *) &((struct sockaddr_in *)sockname)->sin_addr;
         addrlen = sizeof(((struct sockaddr_in *)sockname)->sin_addr);
+#ifndef __INTERIX
         if(*(in_addr_t *) addr != htonl(INADDR_LOOPBACK))
+#endif
             family = XCB_FAMILY_INTERNET;
         break;
     case AF_UNIX:
diff -ru -x '*.Po' -x '*.Plo' libxcb-1.4.orig/src/xcb_util.c libxcb-1.4/src/xcb_util.c
--- libxcb-1.4.orig/src/xcb_util.c	2009-08-20 16:04:01 +0200
+++ libxcb-1.4/src/xcb_util.c	2009-08-20 16:38:16 +0200
@@ -43,6 +43,10 @@
 #include <unistd.h>
 #include <string.h>
 
+#ifdef __INTERIX
+#include <arpa/inet.h>
+#endif
+
 #include "xcb.h"
 #include "xcbext.h"
 #include "xcbint.h"
@@ -220,14 +224,17 @@
 static int _xcb_open_tcp(char *host, char *protocol, const unsigned short port)
 {
     int fd = -1;
+#ifndef __INTERIX
     struct addrinfo hints;
-    char service[6]; /* "65535" with the trailing '\0' */
     struct addrinfo *results, *addr;
+#endif
+    char service[6]; /* "65535" with the trailing '\0' */
     char *bracket;
 
     if (protocol && strcmp("tcp",protocol))
         return -1;
 
+#ifndef __INTERIX
     memset(&hints, 0, sizeof(hints));
 #ifdef AI_ADDRCONFIG
     hints.ai_flags |= AI_ADDRCONFIG;
@@ -237,6 +244,7 @@
 #endif
     hints.ai_family = AF_UNSPEC;
     hints.ai_socktype = SOCK_STREAM;
+#endif
 
 #ifdef AF_INET6
     /* Allow IPv6 addresses enclosed in brackets. */
@@ -249,6 +257,7 @@
     }
 #endif
 
+#ifndef __INTERIX
     snprintf(service, sizeof(service), "%hu", port);
     if(getaddrinfo(host, service, &hints, &results))
         /* FIXME: use gai_strerror, and fill in error connection */
@@ -269,6 +278,42 @@
     }
     freeaddrinfo(results);
     return fd;
+#else
+	{
+		struct hostent* _h;
+		struct sockaddr_in _s;
+		struct in_addr ** _c;
+		int on = 1;
+
+		if((_h = gethostbyname(host)) == NULL)
+			return -1;
+
+		_c = _h->h_addr_list;
+		fd = -1;
+
+		while(*_c) {
+			_s.sin_family = AF_INET;
+			_s.sin_port = htons(port);
+			_s.sin_addr = *(*_c);
+
+			fd = socket(_s.sin_family, SOCK_STREAM, 0);
+
+			if(fd == -1)
+				continue;
+
+            setsockopt(fd, IPPROTO_TCP, TCP_NODELAY, &on, sizeof(on));
+
+			if(connect(fd, (struct sockaddr*)&_s, sizeof(_s)) >= 0)
+				break;
+
+			close(fd);
+			fd = -1;
+			++_c;
+		}
+
+		return fd;
+	}
+#endif
 }
 
 static int _xcb_open_unix(char *protocol, const char *file)
