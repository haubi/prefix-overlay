
# HG changeset patch
# User John H. Robinson, IV <jaqque@sbih.org>
# Date 1229206629 28800
# Node ID 17b8b5652f973923c0e07baddeb5765d9acedf55
# Parent 714532b354dd0e89ae06060d64916ac592ba7e99
Add option to allow starting DockApps with a single click

This patch is from the contrib directory. It adds an option to allow starting
DockApps with a single click. It's a handy option that adds only a few lines to
the code. It is a good feature patch example because it includes modifications
to the WPrefs application so that the feature can be easily enabled or
disabled. The one-click ability allows wmaker to integrate more seemlessly with
programs like ROX-Filer which can be configured to use single or double click
actions.

Author: unknown
Submitted by: Gilbert Ashley <amigo@ibiblio.org>

--- a/WPrefs.app/Expert.c	Sat Dec 13 14:10:41 2008 -0800
+++ b/WPrefs.app/Expert.c	Sat Dec 13 14:17:09 2008 -0800
@@ -54,6 +54,7 @@
     WMSetButtonSelected(panel->swi[4], GetBoolForKey("DontConfirmKill"));
     WMSetButtonSelected(panel->swi[5], GetBoolForKey("DisableBlinking"));
     WMSetButtonSelected(panel->swi[6], GetBoolForKey("AntialiasedText"));
+    WMSetButtonSelected(panel->swi[7], GetBoolForKey("SingleClickLaunch"));
 }
 
 
@@ -66,7 +67,7 @@
     panel->box = WMCreateBox(panel->parent);
     WMSetViewExpandsToParent(WMWidgetView(panel->box), 2, 2, 2, 2);
 
-    for (i=0; i<7; i++) {
+    for (i=0; i<8; i++) {
         panel->swi[i] = WMCreateSwitchButton(panel->box);
         WMResizeWidget(panel->swi[i], FRAME_WIDTH-40, 25);
         WMMoveWidget(panel->swi[i], 20, 20+i*25);
@@ -79,6 +80,7 @@
     WMSetButtonText(panel->swi[4], _("Disable confirmation panel for the Kill command."));
     WMSetButtonText(panel->swi[5], _("Disable selection animation for selected icons."));
     WMSetButtonText(panel->swi[6], _("Smooth font edges (needs restart)."));
+    WMSetButtonText(panel->swi[7], _("Launch applications and restore windows with a single click."));
 
     WMSetButtonEnabled(panel->swi[6], True);
 
@@ -103,6 +105,7 @@
     SetBoolForKey(WMGetButtonSelected(panel->swi[4]), "DontConfirmKill");
     SetBoolForKey(WMGetButtonSelected(panel->swi[5]), "DisableBlinking");
     SetBoolForKey(WMGetButtonSelected(panel->swi[6]), "AntialiasedText");
+    SetBoolForKey(WMGetButtonSelected(panel->swi[7]), "SingleClickLaunch");
 }
 
 
--- a/src/WindowMaker.h	Sat Dec 13 14:10:41 2008 -0800
+++ b/src/WindowMaker.h	Sat Dec 13 14:17:09 2008 -0800
@@ -472,6 +472,9 @@
     unsigned int workspace_border_size; /* Size in pixels of the workspace border */
     char workspace_border_position;     /* Where to leave a workspace border */
 
+    /* single click to lauch applications */
+    char single_click;
+
     RImage *swtileImage;
     RImage *swbackImage[9];
 
--- a/src/appicon.c	Sat Dec 13 14:10:41 2008 -0800
+++ b/src/appicon.c	Sat Dec 13 14:17:09 2008 -0800
@@ -590,6 +590,7 @@
     Bool movingSingle = False;
     int oldX = x;
     int oldY = y;
+    Bool hasMoved = False;
 
     if (aicon->editing || WCHECK_STATE(WSTATE_MODAL))
         return;
@@ -665,6 +666,7 @@
             break;
 
         case MotionNotify:
+            hasMoved = True;
             if (!grabbed) {
                 if (abs(dx-ev.xmotion.x)>=MOVE_THRESHOLD
                     || abs(dy-ev.xmotion.y)>=MOVE_THRESHOLD) {
@@ -802,6 +804,9 @@
             if (wPreferences.auto_arrange_icons)
                 wArrangeIcons(scr, True);
 
+            if (wPreferences.single_click && !hasMoved)
+                iconDblClick(desc, event);
+
             done = 1;
             break;
         }
--- a/src/defaults.c	Sat Dec 13 14:10:41 2008 -0800
+++ b/src/defaults.c	Sat Dec 13 14:17:09 2008 -0800
@@ -552,6 +552,9 @@
     },
     {"DisableBlinking",	"NO",		NULL,
     &wPreferences.dont_blink,	getBool,	NULL
+    },
+    {"SingleClickLaunch",	"NO",	NULL,
+    &wPreferences.single_click,	getBool,	NULL
     },
     /* style options */
     {"MenuStyle", 	"normal",  		seMenuStyles,
--- a/src/dock.c	Sat Dec 13 14:10:41 2008 -0800
+++ b/src/dock.c	Sat Dec 13 14:17:09 2008 -0800
@@ -3758,7 +3758,7 @@
 
 
 
-static void
+static Bool
 handleIconMove(WDock *dock, WAppIcon *aicon, XEvent *event)
 {
     WScreen *scr = dock->screen_ptr;
@@ -3776,6 +3776,7 @@
     Bool docked;
     int superfluous = wPreferences.superfluous; /* we catch it to avoid problems */
     int omnipresent = aicon->omnipresent; /* this must be cached!!! */
+    Bool hasMoved = False;
 
 
     if (wPreferences.flags.noupdates)
@@ -3828,6 +3829,7 @@
             break;
 
         case MotionNotify:
+            hasMoved = True;
             if (!grabbed) {
                 if (abs(ofs_x-ev.xmotion.x)>=MOVE_THRESHOLD
                     || abs(ofs_y-ev.xmotion.y)>=MOVE_THRESHOLD) {
@@ -3977,9 +3979,11 @@
 #ifdef DEBUG
             puts("End icon move");
 #endif
-            return;
-        }
-    }
+            return hasMoved;
+        }
+    }
+
+    return False;  /* never reached */
 }
 
 
@@ -4116,8 +4120,11 @@
                 handleClipChangeWorkspace(scr, event);
             else
                 handleDockMove(dock, aicon, event);
-        } else
-            handleIconMove(dock, aicon, event);
+        } else {
+            Bool hasMoved = handleIconMove(dock, aicon, event);
+            if (wPreferences.single_click && !hasMoved)
+                iconDblClick(desc, event);
+        }
 
     } else if (event->xbutton.button==Button2 && dock->type==WM_CLIP &&
                aicon==scr->clip_icon) {
--- a/src/icon.c	Sat Dec 13 14:10:41 2008 -0800
+++ b/src/icon.c	Sat Dec 13 14:17:09 2008 -0800
@@ -891,6 +891,7 @@
     int dx=event->xbutton.x, dy=event->xbutton.y;
     int grabbed=0;
     int clickButton=event->xbutton.button;
+    Bool hasMoved = False;
 
     if (WCHECK_STATE(WSTATE_MODAL))
         return;
@@ -942,6 +943,7 @@
             break;
 
         case MotionNotify:
+            hasMoved = True;
             if (!grabbed) {
                 if (abs(dx-ev.xmotion.x)>=MOVE_THRESHOLD
                     || abs(dy-ev.xmotion.y)>=MOVE_THRESHOLD) {
@@ -979,6 +981,8 @@
 
             if (wPreferences.auto_arrange_icons)
                 wArrangeIcons(wwin->screen_ptr, True);
+            if (wPreferences.single_click && !hasMoved)
+                miniwindowDblClick(desc, event);
             return;
 
         }

