GCC's -fstack-protector is only activated for functions that allocate
more than 8 bytes on the stack.  -fstack-protector-all adds guards for
all function calls.  The test program does not use the stack, neither
does it call any function, hence it becomes a problem in some cases.

This is a problem on Solaris where the option exists, but linking fails,
since libssp doesn't exist.


--- Configure
+++ Configure
@@ -5124,11 +5124,13 @@
 	# is to add the flag to the flags passed to the compiler at link time,
 	# as that way the compiler can do the right implementation dependant
 	# thing. (NWC)
-	case "$gccversion" in
-	?*)	set stack-protector -fstack-protector
-		eval $checkccflag
-		;;
-	esac
+#	case "$gccversion" in
+#	?*)	set stack-protector -fstack-protector
+# doesn't check anything but if the compiler groks the flag, since the
+# test program lacks anything to stack protect
+#		eval $checkccflag
+#		;;
+#	esac
 	;;
 esac
 
