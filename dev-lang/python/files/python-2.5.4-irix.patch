http://bugs.gentoo.org/show_bug.cgi?id=260143

IRIX's MIPSpro is a bit stricter, ffi needs some patching for mips too

--- Modules/cjkcodecs/_codecs_iso2022.c.dist	2009-02-23 12:26:12.061698640 +0000
+++ Modules/cjkcodecs/_codecs_iso2022.c	2009-02-23 12:26:32.838388400 +0000
@@ -203,7 +203,7 @@ ENCODER(iso2022)
 				} else
 					encoded = dsg->encoder(&c, &length);
 #else
-				encoded = dsg->encoder(*inbuf, &length);
+				encoded = dsg->encoder((ucs4_t *)inbuf, &length);
 #endif
 				if (encoded != MAP_UNMAPPABLE) {
 					insize = length;
--- Modules/_ctypes/_ctypes.c.dist	2009-02-23 12:18:27.845157680 +0000
+++ Modules/_ctypes/_ctypes.c	2009-02-23 12:18:43.892351040 +0000
@@ -3360,7 +3360,7 @@ CFuncPtr_call(CFuncPtrObject *self, PyOb
 		}
 	}
 
-	result = _CallProc(pProc,
+	result = _CallProc((PPROC)pProc,
 			   callargs,
 #ifdef MS_WIN32
 			   piunk,
--- Modules/_ctypes/_ctypes_test.c.dist	2009-02-23 12:18:53.824224640 +0000
+++ Modules/_ctypes/_ctypes_test.c	2009-02-23 12:19:26.997856000 +0000
@@ -319,8 +319,8 @@ EXPORT(PY_LONG_LONG) last_tf_arg_s;
 EXPORT(unsigned PY_LONG_LONG) last_tf_arg_u;
 
 struct BITS {
-	int A: 1, B:2, C:3, D:4, E: 5, F: 6, G: 7, H: 8, I: 9;
-	short M: 1, N: 2, O: 3, P: 4, Q: 5, R: 6, S: 7;
+	unsigned int A: 1, B:2, C:3, D:4, E: 5, F: 6, G: 7, H: 8, I: 9;
+	unsigned short M: 1, N: 2, O: 3, P: 4, Q: 5, R: 6, S: 7;
 };
 
 DL_EXPORT(void) set_bitfields(struct BITS *bits, char name, int value)
--- Modules/posixmodule.c.dist	2009-02-23 12:19:42.736067280 +0000
+++ Modules/posixmodule.c	2009-02-23 12:20:23.027415120 +0000
@@ -169,7 +169,9 @@ corresponding Unix manual entries for mo
 extern char        *ctermid_r(char *);
 #endif
 
-#ifndef HAVE_UNISTD_H
+#ifdef HAVE_UNISTD_H
+#include <unistd.h>
+#else
 #if defined(PYCC_VACPP)
 extern int mkdir(char *);
 #else
--- Modules/mmapmodule.c.dist	2009-02-23 12:20:32.633851120 +0000
+++ Modules/mmapmodule.c	2009-02-23 12:21:09.995162000 +0000
@@ -37,6 +37,10 @@ my_getpagesize(void)
 #include <sys/mman.h>
 #include <sys/stat.h>
 
+#ifdef HAVE_FCNTL_H
+#include <fcntl.h>
+#endif
+
 #if defined(HAVE_SYSCONF) && defined(_SC_PAGESIZE)
 static int
 my_getpagesize(void)
--- Modules/_cursesmodule.c.dist	2009-02-23 12:21:30.340303200 +0000
+++ Modules/_cursesmodule.c	2009-02-23 12:22:11.324549840 +0000
@@ -117,9 +117,6 @@ char *PyCursesVersion = "2.2";
     curses module in other ways.  So the code will just specify 
     explicit prototypes here. */
 extern int setupterm(char *,int,int *);
-#ifdef __sgi
-#include <term.h>
-#endif
 
 #if !defined(HAVE_NCURSES_H) && (defined(sgi) || defined(__sun) || defined(SCO5))
 #define STRICT_SYSV_CURSES       /* Don't use ncurses extensions */
--- Modules/_ctypes/libffi/src/mips/ffitarget.h.dist	2009-02-23 17:21:24.215344800 +0000
+++ Modules/_ctypes/libffi/src/mips/ffitarget.h	2009-02-23 17:22:48.681740400 +0000
@@ -121,12 +121,12 @@
 #else /* !LIBFFI_ASM */
 #ifdef FFI_MIPS_O32
 /* O32 stack frames have 32bit integer args */
-typedef unsigned int     ffi_arg __attribute__((__mode__(__SI__)));
-typedef signed   int     ffi_sarg __attribute__((__mode__(__SI__)));
+typedef __uint32_t ffi_arg;
+typedef __int32_t ffi_sarg;
 #else
 /* N32 and N64 frames have 64bit integer args */
-typedef unsigned int     ffi_arg __attribute__((__mode__(__DI__)));
-typedef signed   int     ffi_sarg __attribute__((__mode__(__DI__)));
+typedef __uint64_t ffi_arg;
+typedef __int64_t ffi_sarg;
 #endif
 
 typedef enum ffi_abi {
--- Makefile.pre.in.dist	2009-02-23 18:17:45.443021760 +0000
+++ Makefile.pre.in	2009-02-23 18:18:07.095735440 +0000
@@ -481,7 +481,7 @@ Modules/python.o: $(srcdir)/Modules/pyth
 
 
 $(GRAMMAR_H) $(GRAMMAR_C): $(PGEN) $(GRAMMAR_INPUT)
-		-@ mkdir Include
+		-@ mkdir -p Include
 		-$(PGEN) $(GRAMMAR_INPUT) $(GRAMMAR_H) $(GRAMMAR_C)
 
 $(PGEN):	$(PGENOBJS)
