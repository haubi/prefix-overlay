diff -ur /var/tmp/eselect-1.1.1-orig/bin/Makefile.am ./bin/Makefile.am
--- /var/tmp/eselect-1.1.1-orig/bin/Makefile.am	2009-06-06 16:10:16 +0200
+++ ./bin/Makefile.am	2009-06-20 17:21:10 +0200
@@ -3,6 +3,7 @@
 
 dosed = @SED@ -e 's,\@BASH\@,$(BASH),g' \
 	      -e 's,\@DATADIR\@,$(datadir),g' \
+	      -e 's,\@SYSCONFDIR\@,$(sysconfdir),g' \
 	      -e 's,\@VERSION\@,$(VERSION),g'
 
 % : %.in
diff -ur /var/tmp/eselect-1.1.1-orig/bin/Makefile.in ./bin/Makefile.in
--- /var/tmp/eselect-1.1.1-orig/bin/Makefile.in	2009-06-06 16:12:15 +0200
+++ ./bin/Makefile.in	2009-06-20 17:22:15 +0200
@@ -123,7 +123,9 @@
 bin_SCRIPTS = eselect
 EXTRA_DIST = eselect.in
 dosed = @SED@ -e 's,\@BASH\@,$(BASH),g' \
+	      -e 's,\@PREFIX\@,$(prefix),g' \
 	      -e 's,\@DATADIR\@,$(datadir),g' \
+	      -e 's,\@SYSCONFDIR\@,$(sysconfdir),g' \
 	      -e 's,\@VERSION\@,$(VERSION),g'
 
 MAINTAINERCLEANFILES = Makefile.in
diff -ur /var/tmp/eselect-1.1.1-orig/bin/eselect.in ./bin/eselect.in
--- /var/tmp/eselect-1.1.1-orig/bin/eselect.in	2009-06-06 16:11:04 +0200
+++ ./bin/eselect.in	2009-06-20 17:21:25 +0200
@@ -18,6 +18,18 @@
 # Where are our data?
 ESELECT_DATA_PATH="@DATADIR@/eselect"
 
+# That of most others
+ESELECT_DATA_DIR="@DATADIR@"
+
+# Configurations?
+ESELECT_SYS_CONF="@SYSCONFDIR@"
+
+# Generic prefix?
+ESELECT_PREFIX="@PREFIX@"
+
+# Offset Prefix?
+ESELECT_EPREFIX=${ESELECT_PREFIX%/usr}
+
 # Where are modules installed by default?
 ESELECT_DEFAULT_MODULES_PATH="${ESELECT_DATA_PATH}/modules"
 
diff -ur /var/tmp/eselect-1.1.1-orig/modules/bashcomp.eselect ./modules/bashcomp.eselect
--- /var/tmp/eselect-1.1.1-orig/modules/bashcomp.eselect	2009-06-06 16:11:04 +0200
+++ ./modules/bashcomp.eselect	2009-06-20 17:21:10 +0200
@@ -9,7 +9,7 @@
 
 find_targets() {
 	local targets bc x i=0
-	bcdirs[i]="${ROOT}/usr/share/bash-completion/*"
+	bcdirs[i]="${ROOT}${ESELECT_DATA_DIR}/bash-completion/*"
 
 	if [[ -n "${ES_BASHCOMP_DIRS}" ]] ; then
 		for x in ${ES_BASHCOMP_DIRS} ; do
@@ -28,7 +28,7 @@
 	local bcdir="${ROOT}/${HOME}/.bash_completion.d"
 
 	if [[ ${1} == "--global" ]] ; then
-		bcdir="${ROOT}/etc/bash_completion.d"
+		bcdir="${ROOT}${ESELECT_SYS_CONF}/bash_completion.d"
 		shift
 	fi
 
@@ -88,7 +88,7 @@
 	local bc bcdir="${ROOT}/${HOME}/.bash_completion.d"
 
 	if [[ ${1} == "--global" ]] ; then
-		bcdir="${ROOT}/etc/bash_completion.d"
+		bcdir="${ROOT}${ESELECT_SYS_CONF}/bash_completion.d"
 		shift
 	fi
 
@@ -137,9 +137,9 @@
 				if [[ -f ${bc} ]] ; then
 					file="${ROOT}/${PWD}/${bc}"
 				# assume /usr/share/bash-completion
-				elif [[ -f ${ROOT}/usr/share/bash-completion/${bc} ]]
+				elif [[ -f ${ROOT}${ESELECT_DATA_DIR}/bash-completion/${bc} ]]
 				then
-					file="${ROOT}/usr/share/bash-completion/${bc}"
+					file="${ROOT}${ESELECT_DATA_DIR}/bash-completion/${bc}"
 				else
 					if [[ -n "${ES_BASHCOMP_DIRS}" ]] ; then
 						for x in ${ES_BASHCOMP_DIRS} ; do
@@ -148,7 +148,7 @@
 					fi
 
 					[[ -e ${file} ]] || \
-						file="${ROOT}/usr/share/bash-completion/${bc}"
+						file="${ROOT}${ESELECT_DATA_DIR}/bash-completion/${bc}"
 				fi
 				;;
 		esac
@@ -191,7 +191,7 @@
 	local bc bcdir="${ROOT}/${HOME}/.bash_completion.d"
 
 	if [[ ${1} == "--global" ]] ; then
-		bcdir="${ROOT}/etc/bash_completion.d"
+		bcdir="${ROOT}${ESELECT_SYS_CONF}/bash_completion.d"
 		shift
 	fi
 
diff -ur /var/tmp/eselect-1.1.1-orig/modules/binutils.eselect ./modules/binutils.eselect
--- /var/tmp/eselect-1.1.1-orig/modules/binutils.eselect	2009-06-06 16:11:04 +0200
+++ ./modules/binutils.eselect	2009-06-20 17:21:10 +0200
@@ -9,7 +9,7 @@
 SVN_DATE='$Date: 2009-06-06 16:09:29 +0200 (Sat, 06 Jun 2009) $'
 VERSION=$(svn_date_to_version "${SVN_DATE}" )
 
-BINUTILS_ENVFILE="${ROOT}/etc/env.d/05binutils"
+BINUTILS_ENVFILE="${ROOT}${ESELECT_SYS_CONF}/env.d/05binutils"
 
 # find_targets [patterns]
 # find all possible targets [that match one of ${@}]
@@ -19,7 +19,7 @@
 	for item in ${args} ; do
 		item=${item%%-[1-9]*}
 		[[ ${item:0:1} == '-' ]] || item=-${item}
-		for file in ${ROOT}/etc/env.d/binutils/config${item} ; do
+		for file in ${ROOT}${ESELECT_SYS_CONF}/env.d/binutils/config${item} ; do
 			[[ -f ${file} ]] || continue
 			targets=(${targets[@]} "${file##*/config-}")
 		done
@@ -34,12 +34,12 @@
 	local last_versions_count
 	for target in $(find_targets) ; do
 		last_version_count=${#versions[@]}
-		for file in ${ROOT}/etc/env.d/binutils/${target}-* ; do
+		for file in ${ROOT}${ESELECT_SYS_CONF}/env.d/binutils/${target}-* ; do
 			[[ -f ${file} ]] || continue
 			versions=(${versions[@]} "${file##*/}")
 		done
 		[[ ${last_version_count} == ${#versions[@]} ]] \
-			&& die -q "Please remove stray file: ${ROOT}/etc/env.d/binutils/config-${target}"
+			&& die -q "Please remove stray file: ${ROOT}${ESELECT_SYS_CONF}/env.d/binutils/config-${target}"
 	done
 	echo ${versions[@]}
 }
@@ -48,13 +48,13 @@
 # returns true if $version is currently used
 is_active() {
 	[[ ${#@} -eq 2 ]] || die "Need exactly 2 arguments!"
-	current=$(load_config ${ROOT}/etc/env.d/binutils/config-${1} CURRENT)
+	current=$(load_config ${ROOT}${ESELECT_SYS_CONF}/env.d/binutils/config-${1} CURRENT)
 	[[ ${current} == ${2} ]]
 }
 
 # is_valid $profile
 is_valid() {
-	([[ ${#@} -eq 1 ]] && [[ -e ${ROOT}/etc/env.d/binutils/${profile} ]]) \
+	([[ ${#@} -eq 1 ]] && [[ -e ${ROOT}${ESELECT_SYS_CONF}/env.d/binutils/${profile} ]]) \
 		|| die "Need exactly 1 argument!"
 }
 
@@ -64,7 +64,7 @@
 	# set us up
 	[[ ${#@} -eq 1 ]] || die "Need exactly 1 argument!"
 	local profile=${1##*/}
-	local profile_file="${ROOT}/etc/env.d/binutils/${profile}"
+	local profile_file="${ROOT}${ESELECT_SYS_CONF}/env.d/binutils/${profile}"
 	local target targets version binutilspath libpath chost
 	version=$(load_config ${profile_file} VER)
 	target=$(load_config ${profile_file} TARGET)
@@ -72,46 +72,46 @@
 		&& die -q "Profile \"${profile}\" is already active!"
 	chost=$(envvar sys-devel/binutils CHOST)
 	libpath=$(load_config ${profile_file} LIBPATH)
-	libpath=${libpath:-/usr/lib/binutils/${TARGET}/${VER}}
+	libpath=${libpath:-${ESELECT_PREFIX}/lib/binutils/${TARGET}/${VER}}
 	faketargets=( $(load_config ${profile_file} FAKE_TARGETS) )
 
 	# Generate binary symlinks
 	echo "Switching to ${profile}..."
-	[[ -d  "${ROOT}/usr/${target}/binutils-bin/${version}" ]] \
-		|| die -q "Can't cd ${ROOT}/usr/${target}/binutils-bin/${version}!"
-	mkdir -p "${ROOT}/usr/${target}/bin" \
-		|| die -q "Can't create ${ROOT}/usr/${target}/bin!"
+	[[ -d  "${ROOT}${ESELECT_PREFIX}/${target}/binutils-bin/${version}" ]] \
+		|| die -q "Can't cd ${ROOT}${ESELECT_PREFIX}/${target}/binutils-bin/${version}!"
+	mkdir -p "${ROOT}${ESELECT_PREFIX}/${target}/bin" \
+		|| die -q "Can't create ${ROOT}${ESELECT_PREFIX}/${target}/bin!"
 
-	binutilspath="/usr/${target}/binutils-bin/${version}"
+	binutilspath="${ESELECT_PREFIX}/${target}/binutils-bin/${version}"
 	for app in "${ROOT}"/${binutilspath}/* ; do
 		app=${app##*/}
 		ln -sf \
 			"${binutilspath}/${app}" \
-			"${ROOT}/usr/${target}/bin/${app}" \
+			"${ROOT}${ESELECT_PREFIX}/${target}/bin/${app}" \
 			|| die -q "Linking ${ROOT}/${binutilspath}/${app} failed!"
 		ln -sf \
 			../${target}/bin/${app} \
-			"${ROOT}/usr/bin/${target}-${app}" \
-			|| die -q "Linking ${ROOT}/usr/bin/${target}-${app} failed!"
+			"${ROOT}${ESELECT_PREFIX}/bin/${target}-${app}" \
+			|| die -q "Linking ${ROOT}${ESELECT_PREFIX}/bin/${target}-${app} failed!"
 		for fake in ${faketargets} ; do
-			[[ -f "${ROOT}/etc/env.d/binutils/config-${fake}" ]] \
+			[[ -f "${ROOT}${ESELECT_SYS_CONF}/env.d/binutils/config-${fake}" ]] \
 				&& continue
-			ln -sf ../${target}/bin/${app} "${ROOT}/usr/bin/${fake}-${app}"
+			ln -sf ../${target}/bin/${app} "${ROOT}${ESELECT_PREFIX}/bin/${fake}-${app}"
 		done
 		[[ ${chost} == ${target} ]] || continue
 		ln -sf \
 			${target}-${app} \
-			"${ROOT}/usr/bin/${app}" \
-			|| die -q "Linking ${ROOT}/usr/bin/${app} failed!"
+			"${ROOT}${ESELECT_PREFIX}/bin/${app}" \
+			|| die -q "Linking ${ROOT}${ESELECT_PREFIX}/bin/${app} failed!"
 	done
 
 	# Generate library and ldscripts symlinks
-	mkdir -p "${ROOT}"/usr/${target}/lib
-	rm -r "${ROOT}"/usr/${target}/lib/ldscripts
-	ln -sf "${libpath}/ldscripts" "${ROOT}"/usr/${target}/lib/ldscripts
+	mkdir -p "${ROOT}${ESELECT_PREFIX}"/${target}/lib
+	rm -r "${ROOT}${ESELECT_PREFIX}"/${target}/lib/ldscripts
+	ln -sf "${libpath}/ldscripts" "${ROOT}${ESELECT_PREFIX}"/${target}/lib/ldscripts
 	[[ ${target} == ${chost} ]] \
-		&& dest="${ROOT}"/usr/${chost}/lib \
-		|| dest="${ROOT}"/usr/${chost}/${target}/lib
+		&& dest="${ROOT}${ESELECT_PREFIX}"/${chost}/lib \
+		|| dest="${ROOT}${ESELECT_PREFIX}"/${chost}/${target}/lib
 	mkdir -p "${dest}"
 	for lib in "${ROOT}"/${libpath}/lib* ; do
 		ln -sf "${libpath}/${lib##*/}" "${dest}/${lib##*/}"
@@ -119,8 +119,8 @@
 
 	# Generate include symlink
 	[[ ${target} == ${chost} ]] \
-		&& dest="${ROOT}/usr/include" \
-		|| dest="${ROOT}/usr/${target}/include"
+		&& dest="${ROOT}${ESELECT_PREFIX}/include" \
+		|| dest="${ROOT}${ESELECT_PREFIX}/${target}/include"
 	mkdir -p "${dest}"
 	for inc in "${ROOT}"/${libpath}/include/* ; do
 		ln -sf "${inc##${ROOT}}" "${dest}/${inc##*/}"
@@ -128,16 +128,16 @@
 
 	# Update the environment
 	if [[ ${target} == ${chost} ]] ; then
-		datapath=/usr/share/binutils-date/${target}/${version}
+		datapath=${ESELECT_DATA_DIR}/binutils-date/${target}/${version}
 		[[ -d ${datapath}/man ]] \
 			&& store_config ${BINUTILS_ENVFILE} MANPATH "${datapath}/man"
 		[[ -d ${datapath}/info ]] \
 			&& store_config ${BINUTILS_ENVFILE} INFOPATH "${datapath}/info"
-		store_config ${BINUTILS_ENVFILE} LDPATH "/usr/${target}/lib"
+		store_config ${BINUTILS_ENVFILE} LDPATH "${ESELECT_PREFIX}/${target}/lib"
 	fi
 
 	store_config \
-		"${ROOT}"/etc/env.d/binutils/config-${target} \
+		"${ROOT}${ESELECT_SYS_CONF}"/env.d/binutils/config-${target} \
 		CURRENT ${version}
 	if [[ ${ROOT:-/} == / ]] && [[ ${target} == ${chost} ]] ; then
 		do_action env update
@@ -167,7 +167,7 @@
 		[[ ${targets[@]/${target}/} == ${targets[@]} ]] \
 			|| write_list_start "Installed binutils for target $(highlight ${target})"
 		last_processed_count=${#processed[@]}
-		for file in ${ROOT}/etc/env.d/binutils/${@:-*} ; do
+		for file in ${ROOT}${ESELECT_SYS_CONF}/env.d/binutils/${@:-*} ; do
 			[[ -f ${file} ]] || continue
 			version=${file##*/${target}-}
 			[[ ${version} == ${file} ]] && continue
@@ -182,7 +182,7 @@
 			write_numbered_list_entry $i "${version}$(highlight "${active}")"
 		done
 		[[ ${last_processed_count} == ${#processed[@]} ]] \
-			&& die -q "Please remove stray file: ${ROOT}/etc/env.d/binutils/config-${target}"
+			&& die -q "Please remove stray file: ${ROOT}${ESELECT_SYS_CONF}/env.d/binutils/config-${target}"
 	done
 }
 
@@ -216,7 +216,7 @@
 					continue
 				fi
 			else
-				file=( ${ROOT}/etc/env.d/binutils/${item} )
+				file=( ${ROOT}${ESELECT_SYS_CONF}/env.d/binutils/${item} )
 				if [[ ${#file[@]} -gt 1 ]] ; then
 					fail=1
 					echo "Ambigious pattern: ${item}"
@@ -246,15 +246,15 @@
 	[[ -n ${chost} ]] \
 		|| die -q "Portage returned empty CHOST!"
 
-	config=${ROOT}/etc/env.d/binutils/config-${chost}
+	config=${ROOT}${ESELECT_SYS_CONF}/env.d/binutils/config-${chost}
 	[[ ${#config[@]} -eq 1 ]] \
 		|| return
 	[[ -e ${config} ]] \
 		|| return
 
-	version=$(load_config ${ROOT}/etc/env.d/binutils/config-${chost} CURRENT)
-	[[ -e ${ROOT}/etc/env.d/binutils/${chost}-${version} ]] \
-		|| die "File \"${ROOT}/etc/env.d/binutils/${chost}-${version}\" is missing!"
+	version=$(load_config ${ROOT}${ESELECT_SYS_CONF}/env.d/binutils/config-${chost} CURRENT)
+	[[ -e ${ROOT}${ESELECT_SYS_CONF}/env.d/binutils/${chost}-${version} ]] \
+		|| die "File \"${ROOT}${ESELECT_SYS_CONF}/env.d/binutils/${chost}-${version}\" is missing!"
 
 	echo "${chost}-${version}"
 }
diff -ur /var/tmp/eselect-1.1.1-orig/modules/editor.eselect ./modules/editor.eselect
--- /var/tmp/eselect-1.1.1-orig/modules/editor.eselect	2009-06-06 16:11:04 +0200
+++ ./modules/editor.eselect	2009-06-20 17:21:10 +0200
@@ -3,16 +3,16 @@
 # $Id: editor.eselect 584 2009-06-06 14:09:29Z ulm $
 
 EDITOR_VAR="EDITOR"
-EDITOR_ENVFILE="/etc/env.d/99editor"
+EDITOR_ENVFILE="${ESELECT_SYS_CONF}/env.d/99editor"
 # list of most common cases only
-EDITOR_LIST="/bin/nano
-	/bin/ed
-	/usr/bin/emacs
-	/usr/bin/ex
-	/usr/bin/pico
-	/usr/bin/vi
-	/usr/bin/xemacs
-	/usr/bin/zile"
+EDITOR_LIST="${ESELECT_EPREFIX}/bin/nano
+	${ESELECT_EPREFIX}/bin/ed
+	${ESELECT_PREFIX}/bin/emacs
+	${ESELECT_PREFIX}/bin/ex
+	${ESELECT_PREFIX}/bin/pico
+	${ESELECT_PREFIX}/bin/vi
+	${ESELECT_PREFIX}/bin/xemacs
+	${ESELECT_PREFIX}/bin/zile"
 
 inherit editor-variable
 
diff -ur /var/tmp/eselect-1.1.1-orig/modules/env.eselect ./modules/env.eselect
--- /var/tmp/eselect-1.1.1-orig/modules/env.eselect	2009-06-06 16:11:04 +0200
+++ ./modules/env.eselect	2009-06-20 17:21:10 +0200
@@ -31,10 +31,10 @@
 MIME_WHITELIST="text/plain text/x-makefile"
 
 # Configuration files
-ENVPROFILE="${ROOT}/etc/profile.env"
-LDCONFIG="${ROOT}/etc/ld.so.conf"
-PRELINK="${ROOT}/etc/prelink.conf"
-LDMTIMEDB="${ROOT}/var/lib/eselect/env/ld-mtimedb"
+ENVPROFILE="${ROOT}${ESELECT_SYS_CONF}/profile.env"
+LDCONFIG="${ROOT}${ESELECT_SYS_CONF}/ld.so.conf"
+PRELINK="${ROOT}${ESELECT_SYS_CONF}/prelink.conf"
+LDMTIMEDB="${ROOT}${ESELECT_EPREFIX}/var/lib/eselect/env/ld-mtimedb"
 
 # Keep all stored LDPATHS
 ESELECT_LDPATH=( )
@@ -64,7 +64,7 @@
 update_envvar_classes() {
 	local -a envfiles
 	local value
-	envfiles=( ${ROOT}/etc/env.d/* )
+	envfiles=( ${ROOT}${ESELECT_SYS_CONF}/env.d/* )
 
 	for envfile in ${envfiles[@]} ; do
 		is_envfile ${envfile} || continue
@@ -88,7 +88,7 @@
 create_profile_env() {
 	local -a envfiles
 	local vars store items tmpprofile
-	envfiles=( ${ROOT}/etc/env.d/* )
+	envfiles=( ${ROOT}${ESELECT_SYS_CONF}/env.d/* )
 
 	# Blank the file first!
 	tmpprofile="$(mktemp ${ROOT}/tmp/profile.XXXXXX)"
@@ -167,7 +167,7 @@
 # create_ld_so_conf()
 # Create ld.so.conf file based upon gathered LDPATHs
 create_ld_so_conf() {
-	[[ -z ${ESELECT_LDPATH[@]} ]] && die -q 'No LDPATHs found in ${ROOT}/etc/env.d/*'
+	[[ -z ${ESELECT_LDPATH[@]} ]] && die -q 'No LDPATHs found in ${ROOT}${ESELECT_SYS_CONF}/env.d/*'
 
 	local str
 	str="# ld.so.conf autogenerated by eselect\n"
@@ -181,17 +181,17 @@
 # create_prelink_conf()
 # Create prelink.conf file based upon existing profile.env
 create_prelink_conf() {
-	[[ -z ${ESELECT_LDPATH[@]} ]] && die -q 'No LDPATHs found in ${ROOT}/etc/env.d/*'
+	[[ -z ${ESELECT_LDPATH[@]} ]] && die -q 'No LDPATHs found in ${ROOT}${ESELECT_SYS_CONF}/env.d/*'
 	local str
 	str="# prelink.conf autogenerated by eselect\n"
 	str="${str}# Make all changes to /etc/env.d files\n"
 	# Add default items
-	for x in /bin /sbin /usr/bin /usr/sbin ; do
+	for x in ${ESELECT_EPREFIX}/bin ${ESELECT_EPREFIX}/sbin ${ESELECT_EPREFIX}/usr/bin ${ESELECT_EPREFIX}/usr/sbin ; do
 		str="${str}-l ${x}\n"
 	done
 	for x in $(list_libdirs) ; do
-		[[ -e ${ROOT}/${x} ]] && str="${str}-l /${x}\n"
-		[[ -e ${ROOT}/usr/${x} ]] && str="${str}-l /usr/${x}\n"
+		[[ -e ${ROOT}${ESELECT_EPREFIX}/${x} ]] && str="${str}-l ${ESELECT_EPREFIX}/${x}\n"
+		[[ -e ${ROOT}${ESELECT_EPREFIX}/usr/${x} ]] && str="${str}-l ${ESELECT_EPREFIX}/usr/${x}\n"
 	done
 	prelink_mask=$(load_config ${ENVPROFILE} PRELINK_PATH_MASK)
 	prelink_mask=( ${prelink_mask//:/ } )
@@ -282,18 +282,18 @@
 		shift
 	done
 
-	if [[ -e ${ROOT}/etc/profile.env ]] ; then
-		[[ -w ${ROOT}/etc/profile.env ]] \
+	if [[ -e ${ROOT}${ESELECT_SYS_CONF}/profile.env ]] ; then
+		[[ -w ${ROOT}${ESELECT_SYS_CONF}/profile.env ]] \
 			|| die -q "You need to be root!"
 	else
-		touch ${ROOT}/etc/profile.env
+		touch ${ROOT}${ESELECT_SYS_CONF}/profile.env
 	fi
 
 	# Create configuration files
 	create_profile_env
 	if [[ ${ldconfig} == 1 ]] ; then
 		create_ld_so_conf
-		[[ -e ${ROOT}/usr/sbin/prelink ]] && create_prelink_conf
+		[[ -e ${ROOT}${ESELECT_PREFIX}/sbin/prelink ]] && create_prelink_conf
 		need_links && makelinks="-X"
 		update_ldcache ${makelinks}
 	fi
@@ -308,4 +308,4 @@
 		$(canonicalise ${ENVPROFILE/.env/.csh})
 }
 
-# vim: ft=eselect
+# vim: ft=eselect:
diff -ur /var/tmp/eselect-1.1.1-orig/modules/kernel.eselect ./modules/kernel.eselect
--- /var/tmp/eselect-1.1.1-orig/modules/kernel.eselect	2009-06-06 16:11:04 +0200
+++ ./modules/kernel.eselect	2009-06-20 17:21:10 +0200
@@ -30,14 +30,14 @@
 # find a list of kernel symlink targets
 find_targets() {
 	local f
-	for f in "${ROOT}"/usr/src/linux-[[:digit:]]* ; do
+	for f in "${ROOT}"${ESELECT_PREFIX}/src/linux-[[:digit:]]* ; do
 		[[ -d ${f} ]] && basename "${f}"
 	done | sort_kernel_versions
 }
 
 # try to remove the kernel symlink
 remove_symlink() {
-	rm "${ROOT}/usr/src/linux"
+	rm "${ROOT}${ESELECT_PREFIX}/src/linux"
 }
 
 # set the kernel symlink
@@ -49,10 +49,10 @@
 	fi
 	if [[ -z ${target} ]] ; then
 		die -q "Target \"${1}\" doesn't appear to be valid!"
-	elif [[ -d ${ROOT}/usr/src/${target} ]] ; then
-		ln -s "${target}" "${ROOT}/usr/src/linux"
-	elif [[ -d ${ROOT}/usr/src/linux-${target} ]] ; then
-		ln -s "linux-${target}" "${ROOT}/usr/src/linux"
+	elif [[ -d ${ROOT}${ESELECT_PREFIX}/src/${target} ]] ; then
+		ln -s "${target}" "${ROOT}${ESELECT_PREFIX}/src/linux"
+	elif [[ -d ${ROOT}${ESELECT_PREFIX}/src/linux-${target} ]] ; then
+		ln -s "linux-${target}" "${ROOT}${ESELECT_PREFIX}/src/linux"
 	else
 		die -q "Target \"$1\" doesn't appear to be valid!"
 	fi
@@ -66,8 +66,8 @@
 
 do_show() {
 	write_list_start "Current kernel symlink:"
-	if [[ -L ${ROOT}/usr/src/linux ]] ; then
-		local kernel=$(canonicalise "${ROOT}/usr/src/linux")
+	if [[ -L ${ROOT}${ESELECT_PREFIX}/src/linux ]] ; then
+		local kernel=$(canonicalise "${ROOT}${ESELECT_PREFIX}/src/linux")
 		write_kv_list_entry "${kernel%/}" ""
 	else
 		write_kv_list_entry "(unset)" ""
@@ -87,7 +87,7 @@
 		local i
 		for (( i = 0; i < ${#targets[@]}; i++ )) ; do
 			[[ ${targets[i]} = \
-				$(basename "$(canonicalise "${ROOT}/usr/src/linux")") ]] \
+				$(basename "$(canonicalise "${ROOT}${ESELECT_PREFIX}/src/linux")") ]] \
 				&& targets[i]="${targets[${i}]} $(highlight '*')"
 		done
 		write_numbered_list "${targets[@]}"
@@ -114,16 +114,16 @@
 	if [[ -z ${1} ]] ; then
 		# no parameter
 		die -q "You didn't tell me what to set the symlink to"
-	elif [[ -L ${ROOT}/usr/src/linux ]] ; then
+	elif [[ -L ${ROOT}${ESELECT_PREFIX}/src/linux ]] ; then
 		# existing symlink
 		if ! remove_symlink ; then
 			die -q "Couldn't remove existing symlink"
 		elif ! set_symlink "${1}" ; then
 			die -q "Couldn't set a new symlink"
 		fi
-	elif [[ -e ${ROOT}/usr/src/linux ]] ; then
+	elif [[ -e ${ROOT}${ESELECT_PREFIX}/src/linux ]] ; then
 		# we have something strange
-		die -q "${ROOT}/usr/src/linux exists but is not a symlink"
+		die -q "${ROOT}${ESELECT_PREFIX}/src/linux exists but is not a symlink"
 	else
 		set_symlink "${1}" || die -q "Couldn't set a new symlink"
 	fi
diff -ur /var/tmp/eselect-1.1.1-orig/modules/news-tng.eselect ./modules/news-tng.eselect
--- /var/tmp/eselect-1.1.1-orig/modules/news-tng.eselect	2009-06-06 16:11:04 +0200
+++ ./modules/news-tng.eselect	2009-06-20 17:21:10 +0200
@@ -9,7 +9,7 @@
 SVN_DATE='$Date: 2009-06-06 16:09:29 +0200 (Sat, 06 Jun 2009) $'
 VERSION=$(svn_date_to_version "${SVN_DATE}")
 
-NEWS_DIR="/var/lib/gentoo/news"
+NEWS_DIR="${ESELECT_EPREFIX}/var/lib/gentoo/news"
 
 # read list of news items
 # list of parameters may contain "unread" or "read"
diff -ur /var/tmp/eselect-1.1.1-orig/modules/pager.eselect ./modules/pager.eselect
--- /var/tmp/eselect-1.1.1-orig/modules/pager.eselect	2009-06-06 16:11:04 +0200
+++ ./modules/pager.eselect	2009-06-20 17:21:10 +0200
@@ -3,8 +3,8 @@
 # $Id: pager.eselect 584 2009-06-06 14:09:29Z ulm $
 
 EDITOR_VAR="PAGER"
-EDITOR_ENVFILE="/etc/env.d/99pager"
-EDITOR_LIST="/bin/more /usr/bin/less /usr/bin/most"
+EDITOR_ENVFILE="${ESELECT_SYS_CONF}/env.d/99pager"
+EDITOR_LIST="${ESELECT_EPREFIX}/bin/more ${ESELECT_PREFIX}/bin/less ${ESELECT_PREFIX}/bin/most"
 
 inherit editor-variable
 
diff -ur /var/tmp/eselect-1.1.1-orig/modules/profile.eselect ./modules/profile.eselect
--- /var/tmp/eselect-1.1.1-orig/modules/profile.eselect	2009-06-06 16:11:04 +0200
+++ ./modules/profile.eselect	2009-06-20 17:21:10 +0200
@@ -27,7 +27,7 @@
 
 # remove make.profile symlink
 remove_symlink() {
-	rm "${ROOT}/etc/make.profile"
+	rm "${ROOT}${ESELECT_SYS_CONF}/make.profile"
 }
 
 # set the make.profile symlink
@@ -61,13 +61,13 @@
 		# we must call remove_symlink() here instead of calling
 		# it from do_set(), since if the link is removed, we
 		# cannot determine $ARCH in find_targets()
-		if [[ -L "${ROOT}/etc/make.profile" ]] ; then
+		if [[ -L "${ROOT}${ESELECT_SYS_CONF}/make.profile" ]] ; then
 			remove_symlink || \
 				die -q "Couldn't remove current make.profile symlink"
 		fi
 
-		pushd "${ROOT}/etc" 1>/dev/null
-		ln -s "../${portdir}/profiles/${target}" "make.profile"
+		pushd "${ROOT}${ESELECT_SYS_CONF}" 1>/dev/null
+		ln -s "..${portdir#${ESELECT_SYS_CONF%/*}}/profiles/${target}" "make.profile"
 		popd 1>/dev/null
 	else
 		die -q "Target \"${1}\" doesn't appear to be valid!"
@@ -82,8 +82,8 @@
 
 do_show() {
 	write_list_start "Current make.profile symlink:"
-	if [[ -L "${ROOT}/etc/make.profile" ]] ; then
-		local link=$(canonicalise "${ROOT}/etc/make.profile")
+	if [[ -L "${ROOT}${ESELECT_SYS_CONF}/make.profile" ]] ; then
+		local link=$(canonicalise "${ROOT}${ESELECT_SYS_CONF}/make.profile")
 		local portdir=$(portageq portdir)
 		local profiledir=$(canonicalise "${ROOT}/${portdir}/profiles")
 		link=${link##${profiledir}/}
@@ -107,7 +107,7 @@
 
 	portdir=$(portageq portdir)
 	profiledir=$(canonicalise "${ROOT}/${portdir}/profiles")
-	active=$(canonicalise "${ROOT}/etc/make.profile")
+	active=$(canonicalise "${ROOT}${ESELECT_SYS_CONF}/make.profile")
 	active=${active##${profiledir}/}
 	if [[ -n ${targets[@]} ]] ; then
 		local i
@@ -145,9 +145,9 @@
 
 	if [[ -z ${1} ]] ; then
 		die -q "You didn't tell me what to set the symlink to"
-	elif [[ -e "${ROOT}/etc/make.profile" ]] &&
-		[[ ! -L "${ROOT}/etc/make.profile" ]] ; then
-		die -q "${ROOT}/etc/make.profile isn't a symlink"
+	elif [[ -e "${ROOT}${ESELECT_SYS_CONF}/make.profile" ]] &&
+		[[ ! -L "${ROOT}${ESELECT_SYS_CONF}/make.profile" ]] ; then
+		die -q "${ROOT}${ESELECT_SYS_CONF}/make.profile isn't a symlink"
 	else
 		set_symlink "${1}" ${force} || die -q "Couldn't set a new symlink"
 	fi
diff -ur /var/tmp/eselect-1.1.1-orig/modules/rc.eselect ./modules/rc.eselect
--- /var/tmp/eselect-1.1.1-orig/modules/rc.eselect	2009-06-06 16:11:04 +0200
+++ ./modules/rc.eselect	2009-06-20 17:21:10 +0200
@@ -13,7 +13,7 @@
 # API for OpenRC or baselayout-1
 source_rc_functions() {
 	[[ ${RC_GOT_FUNCTIONS} = yes ]] && return
-	source /etc/init.d/functions.sh || die "Failed to source functions.sh"
+	source ${ESELECT_SYS_CONF}/init.d/functions.sh || die "Failed to source functions.sh"
 	# baselayout-1 compatibility
 	if [[ -e ${svclib}/sh/rc-services.sh ]]; then
 		source "${svclib}/sh/rc-services.sh" \
@@ -39,7 +39,7 @@
 list_runlevels() {
 	[[ $# -eq 1 ]] || return
 	local x runlevels
-	for x in ${ROOT}/etc/runlevels/* ; do
+	for x in ${ROOT}${ESELECT_SYS_CONF}/runlevels/* ; do
 		[[ -d ${x} && -L ${x}/${1} ]] \
 			&& runlevels=(${runlevels[@]} "${x##*/}")
 	done
@@ -69,8 +69,8 @@
 # find scripts in /etc/init.d not belonging to any runlevel
 find_unused_scripts() {
 	local file x
-	for file in $(find_scripts "${ROOT}/etc/init.d"); do
-		for x in "${ROOT}"/etc/runlevels/*; do
+	for file in $(find_scripts "${ROOT}${ESELECT_SYS_CONF}/init.d"); do
+		for x in "${ROOT}"${ESELECT_SYS_CONF}/runlevels/*; do
 			[[ -d ${x} && -L ${x}/${file} ]] && continue 2
 		done
 		echo "${file##*/}"
@@ -107,8 +107,8 @@
 	local command=${1}
 	shift
 	for script in "$@"; do
-		is_script "${ROOT}/etc/init.d/${script}" \
-			&& /sbin/runscript "${ROOT}/etc/init.d/${script}" "${command}"
+		is_script "${ROOT}${ESELECT_SYS_CONF}/init.d/${script}" \
+			&& /sbin/runscript "${ROOT}${ESELECT_SYS_CONF}/init.d/${script}" "${command}"
 	done
 }
 
@@ -131,22 +131,22 @@
 	[[ $# -gt 0 ]] \
 		|| die -q "Please specify the init script to be added!"
 	local script=${1##*/}
-	[[ -e ${ROOT}/etc/init.d/${script} ]] \
+	[[ -e ${ROOT}${ESELECT_SYS_CONF}/init.d/${script} ]] \
 		|| die -q "Please specify a valid init script!"
 	shift 1
 	local runlevels=${@:-default}
 	write_list_start "Adding $(highlight ${script}) to following runlevels"
 	for runlevel in ${runlevels} ; do
-		if [[ ! -d ${ROOT}/etc/runlevels/${runlevel} ]] ; then
+		if [[ ! -d ${ROOT}${ESELECT_SYS_CONF}/runlevels/${runlevel} ]] ; then
 			write_kv_list_entry ${runlevel} "[invalid]"
 			continue
 		else
-			if [[ -L ${ROOT}/etc/runlevels/${runlevel}/${script} ]] ; then
+			if [[ -L ${ROOT}${ESELECT_SYS_CONF}/runlevels/${runlevel}/${script} ]] ; then
 				write_kv_list_entry ${runlevel} "[skipped]"
 			else
 				ln -sf \
-					/etc/init.d/${script} \
-					${ROOT}/etc/runlevels/${runlevel}/${script} \
+					${ESELECT_SYS_CONF}/init.d/${script} \
+					${ROOT}${ESELECT_SYS_CONF}/runlevels/${runlevel}/${script} \
 					&& write_kv_list_entry ${runlevel} "[done]" \
 					|| write_kv_list_entry ${runlevel} "[failed]"
 			fi
@@ -174,17 +174,17 @@
 		|| die -q "Please specify the init script to be deleted!"
 	local script=${1##*/}
 	shift 1
-	[[ -e ${ROOT}/etc/init.d/${script} ]] || write_warning_msg \
-		"Init script not found in /etc/init.d/. Continuing anyway."
+	[[ -e ${ROOT}${ESELECT_SYS_CONF}/init.d/${script} ]] || write_warning_msg \
+		"Init script not found in ${ESELECT_SYS_CONF}/init.d/. Continuing anyway."
 	local runlevels=${@:-default}
 	write_list_start "Deleting $(highlight ${script}) from following runlevels"
 	for runlevel  in ${runlevels} ; do
-		if [[ ! -d ${ROOT}/etc/runlevels/${runlevel} ]] ; then
+		if [[ ! -d ${ROOT}${ESELECT_SYS_CONF}/runlevels/${runlevel} ]] ; then
 			write_kv_list_entry ${runlevel} "[invalid]"
 			continue
 		else
-			if [[ -L ${ROOT}/etc/runlevels/${runlevel}/${script} ]] ; then
-				rm ${ROOT}/etc/runlevels/${runlevel}/${script} \
+			if [[ -L ${ROOT}${ESELECT_SYS_CONF}/runlevels/${runlevel}/${script} ]] ; then
+				rm ${ROOT}${ESELECT_SYS_CONF}/runlevels/${runlevel}/${script} \
 					&& write_kv_list_entry ${runlevel} "[done]" \
 					|| write_kv_list_entry ${runlevel} "[failed]"
 			else
@@ -210,11 +210,11 @@
 
 do_list() {
 	local dir file item
-	if [[ -n ${1} ]] && [[ -d ${ROOT}/etc/runlevels/${1} ]] ; then
-		dir=${ROOT}/etc/runlevels/${1}
+	if [[ -n ${1} ]] && [[ -d ${ROOT}${ESELECT_SYS_CONF}/runlevels/${1} ]] ; then
+		dir=${ROOT}${ESELECT_SYS_CONF}/runlevels/${1}
 		write_list_start "Init scripts to be started by runlevel $(highlight ${1})"
 	elif [[ -z ${1} ]] ; then
-		dir=${ROOT}/etc/init.d
+		dir=${ROOT}${ESELECT_SYS_CONF}/init.d
 		write_list_start "Available init scripts"
 	else
 		die -q "${1} is no valid runlevel!"
@@ -263,7 +263,7 @@
 		done
 		if [[ -n ${all} ]]; then
 			local runlevels=()
-			for x in "${ROOT}"/etc/runlevels/*; do
+			for x in "${ROOT}${ESELECT_SYS_CONF}"/runlevels/*; do
 				[[ -d "${x}" ]] && runlevels=("${runlevels[@]}" "${x##*/}")
 			done
 			set -- "${runlevels[@]}"
@@ -271,12 +271,12 @@
 	fi
 
 	for runlevel in "$@"; do
-		[[ -n ${runlevel} && -d ${ROOT}/etc/runlevels/${runlevel} ]] \
+		[[ -n ${runlevel} && -d ${ROOT}${ESELECT_SYS_CONF}/runlevels/${runlevel} ]] \
 			|| die -q "\"${runlevel}\" is no valid runlevel"
 
 		write_list_start "Status of init scripts in runlevel \"${runlevel}\""
 		n=0
-		for script in $(find_scripts "${ROOT}/etc/runlevels/${runlevel}"); do
+		for script in $(find_scripts "${ROOT}${ESELECT_SYS_CONF}/runlevels/${runlevel}"); do
 			show_script_status ${script}
 			((n++))
 		done
diff -ur /var/tmp/eselect-1.1.1-orig/modules/visual.eselect ./modules/visual.eselect
--- /var/tmp/eselect-1.1.1-orig/modules/visual.eselect	2009-06-06 16:11:04 +0200
+++ ./modules/visual.eselect	2009-06-20 17:21:10 +0200
@@ -3,14 +3,14 @@
 # $Id: visual.eselect 584 2009-06-06 14:09:29Z ulm $
 
 EDITOR_VAR="VISUAL"
-EDITOR_ENVFILE="/etc/env.d/99editor"
+EDITOR_ENVFILE="${ESELECT_SYS_CONF}/env.d/99editor"
 # list of most common cases only
-EDITOR_LIST="/bin/nano
-	/usr/bin/emacs
-	/usr/bin/pico
-	/usr/bin/vi
-	/usr/bin/xemacs
-	/usr/bin/zile"
+EDITOR_LIST="${ESELECT_EPREFIX}/bin/nano
+	${ESELECT_PREFIX}/bin/emacs
+	${ESELECT_PREFIX}/bin/pico
+	${ESELECT_PREFIX}/bin/vi
+	${ESELECT_PREFIX}/bin/xemacs
+	${ESELECT_PREFIX}/bin/zile"
 
 inherit editor-variable
 
Only in .: test.patch
