diff -ur eselect-emacs-1.2.orig/ctags.eselect eselect-emacs-1.2/ctags.eselect
--- eselect-emacs-1.2.orig/ctags.eselect	2007-08-23 18:45:13.473529000 +0200
+++ eselect-emacs-1.2/ctags.eselect	2007-08-23 18:51:09.033769603 +0200
@@ -19,7 +19,7 @@
 # do_set(): Set a version to be target of the symlink.
 # do_update(): Set the target to the "best" available version. See below.
 
-DESCRIPTION="Manage /usr/bin/ctags implementations"
+DESCRIPTION="Manage @GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags implementations"
 MAINTAINER="emacs@gentoo.org"
 SVN_DATE='$Date: 2007-08-22 20:06:41 +0200 (Wed, 22 Aug 2007) $'
 VERSION=$(svn_date_to_version "${SVN_DATE}" )
@@ -31,40 +31,40 @@
 	# currently active Emacs version (selected by emacs.eselect)
 	# The logic here is the same as in emacs.eselect, don't change it!
 	local emacs
-	if [[ -L "${ROOT}/usr/bin/emacs" && \
-		  -e $(canonicalise "${ROOT}/usr/bin/emacs") ]]; then
-		emacs=$(basename $(canonicalise "${ROOT}/usr/bin/emacs") )
-		[[ -f "${ROOT}/usr/bin/ctags-${emacs}" ]] && echo "ctags-${emacs}"
-	elif [[ -f "${ROOT}/usr/bin/xemacs" ]]; then
-		[[ -f "${ROOT}/usr/bin/ctags-xemacs" ]] && echo ctags-xemacs
+	if [[ -L "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs" && \
+		  -e $(canonicalise "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs") ]]; then
+		emacs=$(basename $(canonicalise "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs") )
+		[[ -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags-${emacs}" ]] && echo "ctags-${emacs}"
+	elif [[ -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/xemacs" ]]; then
+		[[ -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags-xemacs" ]] && echo ctags-xemacs
 	fi
 
 	# Exuberant ctags
-	[[ -f "${ROOT}"/usr/bin/exuberant-ctags ]] && echo exuberant-ctags
+	[[ -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@"/usr/bin/exuberant-ctags ]] && echo exuberant-ctags
 }
 
 remove_symlinks() {
 	# Remove existing symlinks to binary and man page
-	rm -f "${ROOT}"/usr/bin/ctags
-	rm -f "${ROOT}"/usr/share/man/man1/ctags.1*
+	rm -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@"/usr/bin/ctags
+	rm -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@"/usr/share/man/man1/ctags.1*
 }
 
 set_bin_symlinks() {
 	# Set symlink to binary
 	local target=${1}
-	ln -s "${target}" "${ROOT}/usr/bin/ctags" \
-		|| die "Couldn't set ${target} ${ROOT}/usr/bin/ctags symlink"
+	ln -s "${target}" "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags" \
+		|| die "Couldn't set ${target} ${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags symlink"
 }
 
 set_man_symlinks() {
 	# Set symlink to man page
 	local target=${1} extension i
-	for i in "${ROOT}"/usr/share/man/man1/${target}.1*; do
+	for i in "${ROOT}@GENTOO_PORTAGE_EPREFIX@"/usr/share/man/man1/${target}.1*; do
 		if [[ -f ${i} ]]; then
 			# target file exists; determine compress extension
 			extension=${i##*/${target}.1}
 			ln -s "${target}.1${extension}" \
-				"${ROOT}/usr/share/man/man1/ctags.1${extension}"
+				"${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/share/man/man1/ctags.1${extension}"
 		fi
 	done
 }
@@ -82,7 +82,7 @@
 	fi
 
 	# is the target valid, i.e. does a ctags binary with this name exist?
-	[[ -f "${ROOT}/usr/bin/${target}" ]] \
+	[[ -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/${target}" ]] \
 		|| die -q "Target \"${1}\" doesn't appear to be valid!"
 
 	echo "Switching to ${target} ..."
@@ -94,7 +94,7 @@
 
 test_for_root() {
 	# checks if the user has rights to modify /usr/bin/
-	[[ -w "${ROOT}/usr/bin" ]] || die -q "You need to be root!"
+	[[ -w "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin" ]] || die -q "You need to be root!"
 }
 
 ### show action ###
@@ -107,11 +107,11 @@
 	[[ ${#@} -gt 0 ]] && die -q "Too many parameters"
 
 	write_list_start "Current target of ctags symlink:"
-	if [[ -L "${ROOT}/usr/bin/ctags" && \
-		  -e $(canonicalise "${ROOT}/usr/bin/ctags") ]]; then
+	if [[ -L "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags" && \
+		  -e $(canonicalise "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags") ]]; then
 		write_kv_list_entry \
-			$(basename $(canonicalise "${ROOT}/usr/bin/ctags") ) ""
-	elif [[ -e "${ROOT}/usr/bin/ctags" ]]; then
+			$(basename $(canonicalise "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags") ) ""
+	elif [[ -e "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags" ]]; then
 		write_kv_list_entry \
 			"(not a symlink or target of symlink does not exist)" ""
 	else
@@ -135,7 +135,7 @@
 		for (( i = 0; i < ${#targets[@]}; i = i + 1 )); do
 			# Display a star to indicate the currently chosen version
 			[[ ${targets[${i}]} = \
-				$(basename $(canonicalise "${ROOT}/usr/bin/ctags") ) ]] \
+				$(basename $(canonicalise "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags") ) ]] \
 				&& targets[${i}]="${targets[${i}]} $(highlight '*')"
 		done
 		write_list_start "Available ctags symlink targets:"
@@ -164,13 +164,13 @@
 	[[ ${#@} -gt 1 ]] && die -q "Too many parameters"
 	test_for_root
 
-	if [[ -e "${ROOT}/usr/bin/ctags" && ! -L "${ROOT}/usr/bin/ctags" ]]; then
-		if [[ -f "${ROOT}/usr/bin/ctags" && $(uname) == FreeBSD ]]; then
+	if [[ -e "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags" && ! -L "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags" ]]; then
+		if [[ -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags" && $(uname) == FreeBSD ]]; then
 			# On FreeBSD ctags is a real file, installed by freebsd-ubin
-			echo "${ROOT}/usr/bin/ctags is a real file - no action"
+			echo "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags is a real file - no action"
 			return
 		fi
-		die -q "Sorry, ${ROOT}/usr/bin/ctags exists but is not a symlink"
+		die -q "Sorry, ${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags exists but is not a symlink"
 	fi
 
 	set_symlinks "${1}" || die -q "Couldn't set a new symlink"
@@ -187,18 +187,18 @@
 	test_for_root
 
 	local ctags=""
-	if [[ -L "${ROOT}/usr/bin/ctags" ]]; then
-		ctags=$(basename $(canonicalise "${ROOT}/usr/bin/ctags") )
-		if [[ ! -e $(canonicalise "${ROOT}/usr/bin/ctags") ]]; then
+	if [[ -L "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags" ]]; then
+		ctags=$(basename $(canonicalise "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags") )
+		if [[ ! -e $(canonicalise "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags") ]]; then
 			# clean up dead symlinks
 			remove_symlinks || die -q "Couldn't remove existing symlink"
 		fi
-	elif [[ -e "${ROOT}/usr/bin/ctags" ]]; then
-		if [[ -f "${ROOT}/usr/bin/ctags" && $(uname) == FreeBSD ]]; then
+	elif [[ -e "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags" ]]; then
+		if [[ -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags" && $(uname) == FreeBSD ]]; then
 			# On FreeBSD ctags is a real file, installed by freebsd-ubin
 			return
 		fi
-		die -q "Sorry, ${ROOT}/usr/bin/ctags exists but is not a symlink"
+		die -q "Sorry, ${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/ctags exists but is not a symlink"
 	fi
 
 	# For an "update" only the version should be changed, but not the
diff -ur eselect-emacs-1.2.orig/emacs.eselect eselect-emacs-1.2/emacs.eselect
--- eselect-emacs-1.2.orig/emacs.eselect	2007-08-23 18:45:13.484903000 +0200
+++ eselect-emacs-1.2/emacs.eselect	2007-08-23 18:52:48.857434024 +0200
@@ -20,7 +20,7 @@
 # do_update(): Set the target to the highest version available
 #	(optionally: only if not set)
 
-DESCRIPTION="Manage /usr/bin/emacs version"
+DESCRIPTION="Manage @GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs version"
 MAINTAINER="emacs@gentoo.org"
 SVN_DATE='$Date: 2007-08-19 12:39:31 +0200 (Sun, 19 Aug 2007) $'
 VERSION=$(svn_date_to_version "${SVN_DATE}" )
@@ -32,32 +32,32 @@
 find_targets() {
 	# Return the list of available Emacs binaries
 	local j
-	for j in "${ROOT}"/usr/bin/emacs-[0-9]*; do
+	for j in "${ROOT}@GENTOO_PORTAGE_EPREFIX@"/usr/bin/emacs-[0-9]*; do
 		[[ -f ${j} ]] && basename ${j}
 	done
 }
 
 remove_infopath() {
 	# When cleaning symlinks this takes care of the info documentation settings
-	rm -f "${ROOT}/etc/env.d/50emacs"
+	rm -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@/etc/env.d/50emacs"
 }
 
 # Define INFOPATH environment variable in env file
 set_infopath() {
-	[[ -d "${ROOT}"/usr/share/info/${1} ]] || return 1
-	echo "INFOPATH=/usr/share/info/${1}" > "${ROOT}/etc/env.d/50emacs"
+	[[ -d "${ROOT}@GENTOO_PORTAGE_EPREFIX@"/usr/share/info/${1} ]] || return 1
+	echo "INFOPATH=@GENTOO_PORTAGE_EPREFIX@/usr/share/info/${1}" > "${ROOT}@GENTOO_PORTAGE_EPREFIX@/etc/env.d/50emacs"
 }
 
 remove_symlinks() {
 	# Remove existing symlinks to binaries, man pages,
 	# and the env file (own function)
 	local f
-	rm -f "${ROOT}"/usr/bin/emacs
+	rm -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@"/usr/bin/emacs
 	for f in ${BINARYLIST}; do
-		rm -f "${ROOT}"/usr/bin/${f}
+		rm -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@"/usr/bin/${f}
 	done
 	for f in ${MANPAGELIST}; do
-		rm -f "${ROOT}"/usr/share/man/man1/${f}.1*
+		rm -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@"/usr/share/man/man1/${f}.1*
 	done
 	remove_infopath
 }
@@ -67,9 +67,9 @@
 	local target=${1} f
 	for f in ${BINARYLIST}; do
 		# set symlink only if target binary actually exists
-		if [[ -f "${ROOT}/usr/bin/${f}-${target}" ]]; then
-			ln -s "${f}-${target}" "${ROOT}/usr/bin/${f}" ||
-				die "Couldn't set ${f}-${target} ${ROOT}/usr/bin/${f} symlink"
+		if [[ -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/${f}-${target}" ]]; then
+			ln -s "${f}-${target}" "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/${f}" ||
+				die "Couldn't set ${f}-${target} ${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/${f} symlink"
 		fi
 	done
 }
@@ -78,12 +78,12 @@
 	# Set symlinks to man pages
 	local target=${1} extension f i
 	for f in ${MANPAGELIST}; do
-		for i in "${ROOT}"/usr/share/man/man1/${f}-${target}.1*; do
+		for i in "${ROOT}@GENTOO_PORTAGE_EPREFIX@"/usr/share/man/man1/${f}-${target}.1*; do
 			if [[ -f ${i} ]]; then
 				# target file exists; determine compress extension
 				extension=${i##*/${f}-${target}.1}
 				ln -s "${f}-${target}.1${extension}" \
-					"${ROOT}/usr/share/man/man1/${f}.1${extension}"
+					"${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/share/man/man1/${f}.1${extension}"
 			fi
 		done
 	done
@@ -102,7 +102,7 @@
 	fi
 
 	# is the target valid, i.e. does an Emacs binary with this name exist?
-	[[ -f "${ROOT}/usr/bin/${target}" ]] \
+	[[ -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/${target}" ]] \
 		|| die -q "Target \"${1}\" doesn't appear to be valid!"
 
 	echo "Switching to ${target} ..."
@@ -110,8 +110,8 @@
 	# the main /usr/bin/emacs symlink is only set for Emacs binaries
 	# (but not for other providers of auxiliary programs, e.g., XEmacs)
 	if [[ ${target} == emacs-* ]]; then
-		ln -s "${target}" "${ROOT}/usr/bin/emacs" \
-			|| die "Couldn't set ${target} ${ROOT}/usr/bin/emacs symlink"
+		ln -s "${target}" "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs" \
+			|| die "Couldn't set ${target} ${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs symlink"
 	fi
 	set_bin_symlinks "${target}"
 	set_man_symlinks "${target}"
@@ -127,7 +127,7 @@
 xemacs_info() {
 	# This is just informational to tell that XEmacs has been found,
 	# a wish from graaff
-	if [[ -e "${ROOT}/usr/bin/xemacs" ]]; then
+	if [[ -e "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/xemacs" ]]; then
 		echo
 		write_list_start "XEmacs is also installed"
 	fi
@@ -135,7 +135,7 @@
 
 test_for_root() {
 	# checks if the user has rights to modify /usr/bin/
-	[[ -w "${ROOT}/usr/bin" ]] || die -q "You need to be root!"
+	[[ -w "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin" ]] || die -q "You need to be root!"
 }
 
 ### show action ###
@@ -148,11 +148,11 @@
 	[[ ${#@} -gt 0 ]] && die -q "Too many parameters"
 
 	write_list_start "Current target of GNU Emacs symlink:"
-	if [[ -L "${ROOT}/usr/bin/emacs" && \
-		  -e $(canonicalise "${ROOT}/usr/bin/emacs") ]]; then
+	if [[ -L "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs" && \
+		  -e $(canonicalise "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs") ]]; then
 		write_kv_list_entry \
-			$(basename $(canonicalise "${ROOT}/usr/bin/emacs") ) ""
-	elif [[ -e "${ROOT}/usr/bin/emacs" ]]; then
+			$(basename $(canonicalise "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs") ) ""
+	elif [[ -e "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs" ]]; then
 		write_kv_list_entry \
 			"(not a symlink or target of symlink does not exist)" ""
 	else
@@ -177,7 +177,7 @@
 		for (( i = 0; i < ${#targets[@]}; i = i + 1 )); do
 			# Display a star to indicate the currently chosen version
 			[[ ${targets[${i}]} = \
-				$(basename $(canonicalise "${ROOT}/usr/bin/emacs") ) ]] \
+				$(basename $(canonicalise "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs") ) ]] \
 				&& targets[${i}]="${targets[${i}]} $(highlight '*')"
 		done
 		write_list_start "Available GNU Emacs symlink targets:"
@@ -207,8 +207,8 @@
 	[[ ${#@} -gt 1 ]] && die -q "Too many parameters"
 	test_for_root
 
-	if [[ -e "${ROOT}/usr/bin/emacs" && ! -L "${ROOT}/usr/bin/emacs" ]]; then
-		die -q "Sorry, ${ROOT}/usr/bin/emacs exists but is not a symlink"
+	if [[ -e "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs" && ! -L "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs" ]]; then
+		die -q "Sorry, ${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs exists but is not a symlink"
 	fi
 
 	set_symlinks "${1}" || die -q "Couldn't set a new symlink"
@@ -233,20 +233,20 @@
 	[[ ${#@} -gt 1 ]] && die -q "Too many parameters"
 	test_for_root
 
-	if [[ -L "${ROOT}/usr/bin/emacs" ]]; then
-		[[ ${1} == *if*unset && -e $(canonicalise "${ROOT}/usr/bin/emacs") ]] \
+	if [[ -L "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs" ]]; then
+		[[ ${1} == *if*unset && -e $(canonicalise "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs") ]] \
 			&& return
 		# this is not redundant: "update" is called in pkg_postrm() of emacs
 		# and should clean up any dead symlinks if no valid target exists
 		remove_symlinks || die -q "Couldn't remove existing symlink"
-	elif [[ -e "${ROOT}/usr/bin/emacs" ]]; then
-		die -q "Sorry, ${ROOT}/usr/bin/emacs exists but is not a symlink"
+	elif [[ -e "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs" ]]; then
+		die -q "Sorry, ${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs exists but is not a symlink"
 	fi
 
 	local targets=( $(find_targets) )
 	if [[ ${#targets[@]} -gt 0 ]]; then
 		set_symlinks ${#targets[@]} || die -q "Couldn't set a new symlink"
-	elif [[ -f "${ROOT}/usr/bin/xemacs" ]]; then
+	elif [[ -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/xemacs" ]]; then
 		# no Emacs target found -- link ctags, etags etc. to XEmacs versions
 		set_symlinks xemacs
 	fi
