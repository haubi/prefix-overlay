--- emacs.eselect
+++ emacs.eselect
@@ -30,30 +30,30 @@
 # Return the list of available Emacs binaries
 find_targets() {
 	local j
-	for j in ${ROOT}/usr/bin/emacs-[0-9]*; do
+	for j in ${ROOT}"@GENTOO_PORTAGE_EPREFIX@"/usr/bin/emacs-[0-9]*; do
 		[[ -f ${j} ]] && basename ${j}
 	done
 }
 
 remove_infopath() {
-	rm -f ${ROOT}/etc/env.d/50emacs
+	rm -f ${ROOT}@GENTOO_PORTAGE_EPREFIX@/etc/env.d/50emacs
 }
 
 # Define INFOPATH environment variable in env file
 set_infopath() {
-	[[ -d ${ROOT}/usr/share/info/${1} ]] || return 1
-	echo "INFOPATH=/usr/share/info/${1}" >${ROOT}/etc/env.d/50emacs
+	[[ -d ${ROOT}"@GENTOO_PORTAGE_EPREFIX@"/usr/share/info/${1} ]] || return 1
+	echo "INFOPATH=@GENTOO_PORTAGE_EPREFIX@/usr/share/info/${1}" >${ROOT}"@GENTOO_PORTAGE_EPREFIX@"/etc/env.d/50emacs
 }
 
 # Remove existing symlinks to binaries, man pages, and the env file
 remove_symlinks() {
 	local f
-	rm -f "${ROOT}"/usr/bin/emacs
+	rm -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@"/usr/bin/emacs
 	for f in ${BINARYLIST}; do
-		rm -f "${ROOT}"/usr/bin/${f}
+		rm -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@"/usr/bin/${f}
 	done
 	for f in ${MANPAGELIST}; do
-		rm -f "${ROOT}"/usr/share/man/man1/${f}.1*
+		rm -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@"/usr/share/man/man1/${f}.1*
 	done
 	remove_infopath
 }
@@ -63,9 +63,9 @@
 	local target=${1} f
 	for f in ${BINARYLIST}; do
 		# set symlink only if target binary actually exists
-		if [[ -f "${ROOT}/usr/bin/${f}-${target}" ]]; then
-			ln -s "${f}-${target}" "${ROOT}/usr/bin/${f}" ||
-				die "Couldn't set ${f}-${target} /usr/bin/${f} symlink"
+		if [[ -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/${f}-${target}" ]]; then
+			ln -s "${f}-${target}" "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/${f}" ||
+				die "Couldn't set ${f}-${target} @GENTOO_PORTAGE_EPREFIX@/usr/bin/${f} symlink"
 		fi
 	done
 }
@@ -74,12 +74,12 @@
 set_man_symlinks() {
 	local target=${1} extension f i
 	for f in ${MANPAGELIST}; do
-		for i in ${ROOT}/usr/share/man/man1/${f}-${target}.1*; do
+		for i in ${ROOT}"@GENTOO_PORTAGE_EPREFIX@"/usr/share/man/man1/${f}-${target}.1*; do
 			if [[ -f ${i} ]]; then
 				# target file exists; determine compress extension
 				extension=${i##*/${f}-${target}.1}
 				ln -s "${f}-${target}.1${extension}" \
-					"${ROOT}/usr/share/man/man1/${f}.1${extension}"
+					"${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/share/man/man1/${f}.1${extension}"
 			fi
 		done
 	done
@@ -98,7 +98,7 @@
 	fi
 
 	# is the target valid, i.e. does an Emacs binary with this name exist?
-	[[ -f "${ROOT}/usr/bin/${target}" ]] \
+	[[ -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/${target}" ]] \
 		|| die -q "Target \"${1}\" doesn't appear to be valid!"
 
 	echo "Switching to ${target} ..."
@@ -106,8 +106,8 @@
 	# the main /usr/bin/emacs symlink is only set for Emacs binaries
 	# (but not for other providers of auxiliary programs, e.g., XEmacs)
 	if [[ ${target} == emacs-* ]]; then
-		ln -s "${target}" "${ROOT}/usr/bin/emacs" \
-			|| die "Couldn't set ${target} /usr/bin/emacs symlink"
+		ln -s "${target}" "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs" \
+			|| die "Couldn't set ${target} @GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs symlink"
 	fi
 	set_bin_symlinks "${target}"
 	set_man_symlinks "${target}"
@@ -130,11 +130,11 @@
 	[[ -z "${@}" ]] || die -q "Too many parameters"
 
 	write_list_start "Current target of symlink:"
-	if [[ -L "${ROOT}/usr/bin/emacs" && \
-		  -e $(canonicalise "${ROOT}/usr/bin/emacs") ]]; then
+	if [[ -L "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs" && \
+		  -e $(canonicalise "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs") ]]; then
 		write_kv_list_entry \
-			"$(basename $(canonicalise ${ROOT}/usr/bin/emacs) )" ""
-	elif [[ -e "${ROOT}/usr/bin/emacs" ]]; then
+			"$(basename $(canonicalise ${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs) )" ""
+	elif [[ -e "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs" ]]; then
 		write_kv_list_entry \
 			"(not a symlink or target of symlink does not exist)" ""
 	else
@@ -157,7 +157,7 @@
 	if [[ -n ${targets[@]} ]]; then
 		for (( i = 0; i < ${#targets[@]}; i = i + 1 )); do
 			[[ ${targets[${i}]} = \
-				$(basename $(canonicalise ${ROOT}/usr/bin/emacs) ) ]] &&
+				$(basename $(canonicalise ${ROOT}"@GENTOO_PORTAGE_EPREFIX@"/usr/bin/emacs) ) ]] &&
 				targets[${i}]="${targets[${i}]} $(highlight '*')"
 		done
 		write_list_start "Available Emacs symlink targets:"
@@ -184,12 +184,12 @@
 do_set() {
 	[[ -z "${1}" ]] && die -q "You didn't tell me what to set the symlink to"
 	[[ -n "${2}" ]] && die -q "Too many parameters"
-	[[ -w "${ROOT}/usr/bin" ]] || die -q "You need to be root!"
+	[[ -w "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin" ]] || die -q "You need to be root!"
 
-	if [[ -L "${ROOT}/usr/bin/emacs" ]]; then
+	if [[ -L "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs" ]]; then
 		remove_symlinks || die -q "Couldn't remove existing symlink"
-	elif [[ -e "${ROOT}/usr/bin/emacs" ]]; then
-		die -q "Sorry, ${ROOT}/usr/bin/emacs exists and is not a symlink"
+	elif [[ -e "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs" ]]; then
+		die -q "Sorry, ${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs exists and is not a symlink"
 	fi
 
 	set_symlinks "${1}" || die -q "Couldn't set a new symlink"
@@ -208,20 +208,20 @@
 do_update() {
 	[[ -z "${1}" || ( -z "${2}" && "${1}" == "--if-unset" ) ]] ||
 		die -q "Usage error"
-	[[ -w "${ROOT}/usr/bin" ]] || die -q "You need to be root!"
+	[[ -w "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin" ]] || die -q "You need to be root!"
 
-	if [[ -L "${ROOT}/usr/bin/emacs" ]]; then
+	if [[ -L "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs" ]]; then
 		[[ ${1} == "--if-unset" \
-			&& -e "$(canonicalise ${ROOT}/usr/bin/emacs)" ]] && return
+			&& -e "$(canonicalise ${ROOT}"@GENTOO_PORTAGE_EPREFIX@"/usr/bin/emacs)" ]] && return
 		remove_symlinks || die -q "Couldn't remove existing symlink"
-	elif [[ -e "${ROOT}/usr/bin/emacs" ]]; then
-		die -q "Sorry, ${ROOT}/usr/bin/emacs exists and is not a symlink"
+	elif [[ -e "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs" ]]; then
+		die -q "Sorry, ${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/emacs exists and is not a symlink"
 	fi
 
 	local targets=( $(find_targets) )
 	if [[ ${#targets[@]} -gt 0 ]]; then
 		set_symlinks ${#targets[@]} || die -q "Couldn't set a new symlink"
-	elif [[ -f "${ROOT}/usr/bin/xemacs" ]]; then
+	elif [[ -f "${ROOT}@GENTOO_PORTAGE_EPREFIX@/usr/bin/xemacs" ]]; then
 		# no Emacs target found - link ctags, etags etc. to XEmacs versions
 		set_symlinks xemacs
 	fi
