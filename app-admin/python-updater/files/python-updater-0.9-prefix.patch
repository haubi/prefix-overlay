--- python-updater.orig	2011-10-31 08:45:26.000000000 +0100
+++ python-updater	2011-10-31 18:37:34.000000000 +0100
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!@GENTOO_PORTAGE_EPREFIX@/bin/bash
 # vim: set et sw=4 sts=4 tw=80:
 # Copyright 2007-2011 Gentoo Foundation
 # Distributed under the terms of the GNU General Public License v2
@@ -24,7 +24,7 @@
 OLD_PYTHON_VERSIONS=""
 OLD_PYTHON2_VERSIONS=""
 OLD_PYTHON3_VERSIONS=""
-NEW_PYTHON_VERSION="$(/usr/bin/python -c 'from sys import version_info; print(".".join([str(x) for x in version_info[:2]]))')"
+NEW_PYTHON_VERSION="$(@GENTOO_PORTAGE_EPREFIX@/usr/bin/python -c 'from sys import version_info; print(".".join([str(x) for x in version_info[:2]]))')"
 NEW_PYTHON2_VERSION=""
 NEW_PYTHON3_VERSION=""
 
@@ -59,12 +59,12 @@
 # load the gentoo-style info macros, but hack to get around
 # it thinking this is an rc script
 EBUILD="1"
-source /etc/init.d/functions.sh
+source "@GENTOO_PORTAGE_EPREFIX@"/etc/init.d/functions.sh
 
-PATH=/usr/lib/portage/bin/ebuild-helpers:$PATH
+PATH="@GENTOO_PORTAGE_EPREFIX@"/usr/lib/portage/bin/ebuild-helpers:$PATH
 
 # portage variables
-PKG_DBDIR=/var/db/pkg
+PKG_DBDIR="@GENTOO_PORTAGE_EPREFIX@"/var/db/pkg
 
 # usage()
 # display usage
@@ -133,7 +133,9 @@
 # has_version(cpv)
 has_version() {
 	if [[ "${PMS_COMMAND[${PMS_INDEX}]}" == "emerge" ]]; then
-		/usr/bin/portageq has_version / "${1}"
+        local eroot=${ROOT%/}
+        [[ -n ${eroot} ]] && eroot+="/${EPREFIX}"
+		"@GENTOO_PORTAGE_EPREFIX@"/usr/bin/portageq has_version "${eroot}"/ "${1}"
 	elif [[ "${PMS_COMMAND[${PMS_INDEX}]}" == "pmerge" ]]; then
 		pquery --vdb "${1}"
 	else
@@ -178,7 +180,7 @@
 		fi
 		variable="${argument%%=*}"
 		value="${argument#*=}"
-		if eval "[[ \${${variable}} == \$(env -u ${variable} /usr/bin/portageq envvar ${variable}) ]]"; then
+		if eval "[[ \${${variable}} == \$(env -u ${variable} @GENTOO_PORTAGE_EPREFIX@/usr/bin/portageq envvar ${variable}) ]]"; then
 			eval "${variable}=\"\${value}\""
 		fi
 	done
@@ -193,7 +195,7 @@
 
 	local variable
 	for variable in "$@"; do
-		if eval "[[ \${${variable}} == \$(env -u ${variable} /usr/bin/portageq envvar ${variable}) ]]"; then
+		if eval "[[ \${${variable}} == \$(env -u ${variable} @GENTOO_PORTAGE_EPREFIX@/usr/bin/portageq envvar ${variable}) ]]"; then
 			unset ${variable}
 		fi
 	done
@@ -205,14 +207,14 @@
 get_USE_PYTHON() {
 	if [[ "${PMS_COMMAND[${PMS_INDEX}]}" =~ ^(emerge|pmerge)$ ]]; then
 		if [[ -z "${global_USE_PYTHON}" ]]; then
-			global_USE_PYTHON="$(/usr/bin/portageq envvar USE_PYTHON)"
+			global_USE_PYTHON="$("@GENTOO_PORTAGE_EPREFIX@"/usr/bin/portageq envvar USE_PYTHON)"
 		fi
 		USE_PYTHON="${global_USE_PYTHON}"
-		if [[ -f "/etc/portage/env/${1}/${2}" ]]; then
-			USE_PYTHON="$(. "/etc/portage/env/${1}/${2}"; echo "${USE_PYTHON}")"
+		if [[ -f "@GENTOO_PORTAGE_EPREFIX@/etc/portage/env/${1}/${2}" ]]; then
+			USE_PYTHON="$(. "@GENTOO_PORTAGE_EPREFIX@/etc/portage/env/${1}/${2}"; echo "${USE_PYTHON}")"
 		fi
-		if [[ -f "/etc/portage/env/${1}/${2}:${3}" ]]; then
-			USE_PYTHON="$(. "/etc/portage/env/${1}/${2}:${3}"; echo "${USE_PYTHON}")"
+		if [[ -f "@GENTOO_PORTAGE_EPREFIX@/etc/portage/env/${1}/${2}:${3}" ]]; then
+			USE_PYTHON="$(. "@GENTOO_PORTAGE_EPREFIX@/etc/portage/env/${1}/${2}:${3}"; echo "${USE_PYTHON}")"
 		fi
 	else
 		USE_PYTHON="$(cave print-id-environment-variable "${1}/${2}${3:+:}${3}::/?" --best --format %v --variable-name USE_PYTHON)"
@@ -228,7 +230,7 @@
 # get_ebuild_path(CATEGORY, PN, SLOT)
 get_ebuild_path() {
 	# These manual calls to Portage API are 2 times faster than 'portageq get_repo_path / "$(portageq metadata / ebuild "$(portageq best_visible / "${1}")" repository)"'.
-	/usr/bin/python -c "
+	"@GENTOO_PORTAGE_EPREFIX@"/usr/bin/python -c "
 import sys
 
 if '' in sys.path:
@@ -416,16 +418,16 @@
 done
 
 if has_version "=dev-lang/python-2*"; then
-	if [[ "$(readlink /usr/bin/python2)" != "python2."* ]]; then
-		die "'/usr/bin/python2' is not valid symlink"
+	if [[ "$(readlink "@GENTOO_PORTAGE_EPREFIX@"/usr/bin/python2)" != "python2."* ]]; then
+		die "'@GENTOO_PORTAGE_EPREFIX@/usr/bin/python2' is not valid symlink"
 	fi
-	NEW_PYTHON2_VERSION="$(/usr/bin/python2 -c 'from sys import version_info; print(".".join([str(x) for x in version_info[:2]]))')"
+	NEW_PYTHON2_VERSION="$("@GENTOO_PORTAGE_EPREFIX@"/usr/bin/python2 -c 'from sys import version_info; print(".".join([str(x) for x in version_info[:2]]))')"
 fi
 if has_version "=dev-lang/python-3*"; then
-	if [[ "$(readlink /usr/bin/python3)" != "python3."* ]]; then
-		die "'/usr/bin/python3' is not valid symlink"
+	if [[ "$(readlink "@GENTOO_PORTAGE_EPREFIX@"/usr/bin/python3)" != "python3."* ]]; then
+		die "'@GENTOO_PORTAGE_EPREFIX@/usr/bin/python3' is not valid symlink"
 	fi
-	NEW_PYTHON3_VERSION="$(/usr/bin/python3 -c 'from sys import version_info; print(".".join([str(x) for x in version_info[:2]]))')"
+	NEW_PYTHON3_VERSION="$("@GENTOO_PORTAGE_EPREFIX@"/usr/bin/python3 -c 'from sys import version_info; print(".".join([str(x) for x in version_info[:2]]))')"
 fi
 if [[ -z "${NEW_PYTHON2_VERSION}" && -z "${NEW_PYTHON3_VERSION}" ]]; then
 	die "Python 2 and Python 3 not installed"
@@ -435,10 +437,10 @@
 for python_version in ${PYTHON_VERSIONS}; do
 	if [[ "${python_version}" != "${NEW_PYTHON_VERSION}" ]]; then
 		OLD_PYTHON_VERSIONS+="${OLD_PYTHON_VERSIONS:+ }${python_version}"
-		soname="$(readlink -n /usr/lib/libpython${python_version}.so)"
+		soname="$(readlink -n "@GENTOO_PORTAGE_EPREFIX@"/usr/lib/libpython${python_version}@GENTOO_PORTAGE_LIBNAME@)"
 		if [[ -z "${soname}" ]]; then
 			# Use relatively safe, default value.
-			soname="libpython${python_version}.so.1.0"
+			soname="libpython${python_version}.so.1.0" # ELF only
 		fi
 		OLD_PYTHON_SHARED_LIBRARIES_REGEX+="${OLD_PYTHON_SHARED_LIBRARIES_REGEX:+|}${soname//./\.}"
 	fi
@@ -451,10 +453,10 @@
 for python_version in ${PYTHON2_VERSIONS}; do
 	if [[ "${python_version}" != "${NEW_PYTHON2_VERSION}" ]]; then
 		OLD_PYTHON2_VERSIONS+="${OLD_PYTHON2_VERSIONS:+ }${python_version}"
-		soname="$(readlink -n /usr/lib/libpython${python_version}.so)"
+		soname="$(readlink -n "@GENTOO_PORTAGE_EPREFIX@"/usr/lib/libpython${python_version}@GENTOO_PORTAGE_LIBNAME@)"
 		if [[ -z "${soname}" ]]; then
 			# Use relatively safe, default value.
-			soname="libpython${python_version}.so.1.0"
+			soname="libpython${python_version}.so.1.0" # ELF only
 		fi
 		OLD_PYTHON2_SHARED_LIBRARIES_REGEX+="${OLD_PYTHON2_SHARED_LIBRARIES_REGEX:+|}${soname//./\.}"
 	fi
@@ -467,10 +469,10 @@
 for python_version in ${PYTHON3_VERSIONS}; do
 	if [[ "${python_version}" != "${NEW_PYTHON3_VERSION}" ]]; then
 		OLD_PYTHON3_VERSIONS+="${OLD_PYTHON3_VERSIONS:+ }${python_version}"
-		soname="$(readlink -n /usr/lib/libpython${python_version}.so)"
+		soname="$(readlink -n "@GENTOO_PORTAGE_EPREFIX@"/usr/lib/libpython${python_version}@GENTOO_PORTAGE_LIBNAME@)"
 		if [[ -z "${soname}" ]]; then
 			# Use relatively safe, default value.
-			soname="libpython${python_version}.so.1.0"
+			soname="libpython${python_version}.so.1.0" # ELF only
 		fi
 		OLD_PYTHON3_SHARED_LIBRARIES_REGEX+="${OLD_PYTHON3_SHARED_LIBRARIES_REGEX:+|}${soname//./\.}"
 	fi
@@ -484,9 +486,15 @@
 einfo $'\e[1;36m'"Active version of Python 2:     ${NEW_PYTHON2_VERSION:-(None)}"$'\e[0m'
 einfo $'\e[1;36m'"Active version of Python 3:     ${NEW_PYTHON3_VERSION:-(None)}"$'\e[0m'
 
+scantool=
+if type -P scanelf >/dev/null 2>&1; then
+    scantool=scanelf
+elif type -P scanmacho >/dev/null 2>&1; then
+    scantool=scanmacho
+fi
 if [[ CHECK_SHARED_LINKING -ne 0 ]]; then
-	if ! type -P scanelf >/dev/null 2>&1; then
-		ewarn "scanelf not found!"
+    if [[ -z ${scantool} ]] ; then
+		ewarn "scanelf/scanmacho not found!"
 		ewarn "check shared_linking is disabled."
 		CHECK_SHARED_LINKING=0
 	else
@@ -496,8 +504,8 @@
 	veinfo 1 'check "shared_linking" disabled.'
 fi
 if [[ CHECK_STATIC_LINKING -ne 0 ]]; then
-	if ! type -P scanelf >/dev/null 2>&1; then
-		ewarn "scanelf not found!"
+	if [[ -z ${scantool} ]] ; then
+		ewarn "scanelf/scanmacho not found!"
 		ewarn "check static_linking is disabled."
 		CHECK_STATIC_LINKING=0
 	else
@@ -617,7 +625,7 @@
 	fi
 
 	if [[ CHECK_STATIC_LINKING -ne 0 ]]; then
-		binaries="$(scanelf -qs +Py_Initialize < <(grep -E "^obj" "${content}" | cut -d" " -f2 | grep -Ev "^/usr/lib(32|64)?/debug/") | sed "s/.* //")"
+		binaries="$(${scantool} -qs +Py_Initialize < <(grep -E "^obj" "${content}" | cut -d" " -f2 | grep -Ev "^@GENTOO_PORTAGE_EPREFIX@/usr/lib(32|64)?/debug/") | sed "s/.* //")"
 		if [[ -n "${binaries}" ]]; then
 			PKGS_TO_REMERGE+=" ${CATPKGVER}"
 			eindent
@@ -664,7 +672,7 @@
 		# /usr/lib/python$old
 		# /usr/lib32/python$old
 		# /usr/lib64/python$old
-		if grep -qE "/usr/(include|lib(32|64)?)/python$(get_OLD_PYTHON_VERSIONS_REGEX)" "${content}"; then
+		if grep -qE "@GENTOO_PORTAGE_EPREFIX@/usr/(include|lib(32|64)?)/python$(get_OLD_PYTHON_VERSIONS_REGEX)" "${content}"; then
 			PKGS_TO_REMERGE+=" ${CATPKGVER}"
 			eindent
 			einfo "Adding to list: ${CATPKGVER}"
@@ -676,7 +684,7 @@
 	fi
 
 	if [[ CHECK_SHARED_LINKING -ne 0 ]]; then
-		binaries="$(scanelf -qF "%F %n" < <(grep -E "^obj" "${content}" | cut -d" " -f2 | grep -Ev "^/usr/lib(32|64)?/debug/") | grep -E "( |,)$(get_OLD_PYTHON_SHARED_LIBRARIES_REGEX)(,|$)")"
+		binaries="$(${scantool} -qF "%F %n" < <(grep -E "^obj" "${content}" | cut -d" " -f2 | grep -Ev "^@GENTOO_PORTAGE_EPREFIX@/usr/lib(32|64)?/debug/") | grep -E "( |,)$(get_OLD_PYTHON_SHARED_LIBRARIES_REGEX)(,|$)")"
 		if [[ -n "${binaries}" ]]; then
 			PKGS_TO_REMERGE+=" ${CATPKGVER}"
 			eindent
@@ -706,7 +714,7 @@
 if [[ "${PMS_COMMAND[${PMS_INDEX}]}" == "emerge" ]] ; then
 	# Filter out --getbinpkg, --getbinpkgonly, --usepkg and --usepkgonly options in EMERGE_DEFAULT_OPTS environment variable
 	emerge_default_opts=""
-	for option in $(/usr/bin/portageq envvar EMERGE_DEFAULT_OPTS); do
+	for option in $("@GENTOO_PORTAGE_EPREFIX@"/usr/bin/portageq envvar EMERGE_DEFAULT_OPTS); do
 		if [[ "${option}" == -[[:alnum:]]* ]]; then
 			[[ "${option//[gGkK]/}" != "-" ]] && emerge_default_opts+=" ${option//[gGkK]/}"
 		elif [[ "${option}" != "--getbinpkg" && "${option}" != "--getbinpkgonly" && "${option}" != "--usepkg" && "${option}" != "--usepkgonly" ]]; then
