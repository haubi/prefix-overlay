diff -ru gamin-0.1.9.orig/libgamin/gam_api.c gamin-0.1.9/libgamin/gam_api.c
--- gamin-0.1.9.orig/libgamin/gam_api.c	2008-04-11 08:53:21 +0200
+++ gamin-0.1.9/libgamin/gam_api.c	2008-04-11 09:03:40 +0200
@@ -651,8 +651,10 @@
 static int
 gamin_check_cred(GAMDataPtr conn, int fd)
 {
+#if defined(LOCAL_CREDS) && defined(HAVE_CMSGCRED) && !defined(__FreeBSD__)
     struct msghdr msg;
     struct iovec iov;
+#endif
     char buf;
     pid_t c_pid;
     uid_t c_uid, s_uid;
@@ -678,7 +680,6 @@
             return(-1);
         }
     }
-#endif
 
     iov.iov_base = &buf;
     iov.iov_len = 1;
@@ -686,6 +687,7 @@
     memset(&msg, 0, sizeof(msg));
     msg.msg_iov = &iov;
     msg.msg_iovlen = 1;
+#endif
 
 #ifdef HAVE_CMSGCRED
     memset(&cmsg, 0, sizeof(cmsg));
@@ -694,7 +696,11 @@
 #endif
 
 retry:
+#if defined(LOCAL_CREDS) && defined(HAVE_CMSGCRED) && !defined(__FreeBSD__)
     if (recvmsg(fd, &msg, 0) < 0) {
+#else
+    if (read(fd, &buf, 0) < 0) {
+#endif
         if (errno == EINTR)
             goto retry;
 
@@ -737,6 +743,8 @@
         c_pid = cred->cmcred_pid;
         c_uid = cred->cmcred_euid;
         c_gid = cred->cmcred_groups[0];
+#elif defined(__INTERIX)
+	return (0); // yes, i know...
 #else /* !SO_PEERCRED && !HAVE_CMSGCRED */
         GAM_DEBUG(DEBUG_INFO,
                   "Socket credentials not supported on this OS\n");
diff -ru gamin-0.1.9.orig/server/gam_channel.c gamin-0.1.9/server/gam_channel.c
--- gamin-0.1.9.orig/server/gam_channel.c	2008-04-11 08:53:21 +0200
+++ gamin-0.1.9/server/gam_channel.c	2008-04-11 09:07:53 +0200
@@ -88,8 +88,10 @@
 gam_client_conn_check_cred(GIOChannel * source, int fd,
                            GamConnDataPtr conn)
 {
+#if defined(LOCAL_CREDS) && defined(HAVE_CMSGCRED) && !defined(__FreeBSD__)
     struct msghdr msg;
     struct iovec iov;
+#endif
     char buf;
     pid_t c_pid;
     uid_t c_uid, s_uid;
@@ -115,7 +117,6 @@
             return FALSE;
         }
     }
-#endif
 
     iov.iov_base = &buf;
     iov.iov_len = 1;
@@ -123,6 +124,7 @@
     memset(&msg, 0, sizeof(msg));
     msg.msg_iov = &iov;
     msg.msg_iovlen = 1;
+#endif
 
 #ifdef HAVE_CMSGCRED
     memset(&cmsg, 0, sizeof(cmsg));
@@ -131,7 +133,11 @@
 #endif
 
   retry:
+#if defined(LOCAL_CREDS) && defined(HAVE_CMSGCRED) && !defined(__FreeBSD__)
     if (recvmsg(fd, &msg, 0) < 0) {
+#else
+    if (read(fd, &buf, 0) < 0) {
+#endif
         if (errno == EINTR)
             goto retry;
 
@@ -174,6 +180,8 @@
 	c_pid = cred->cmcred_pid;
 	c_uid = cred->cmcred_euid;
 	c_gid = cred->cmcred_groups[0];
+#elif defined(__INTERIX)
+	return TRUE; // yes, i know...
 #else /* !SO_PEERCRED && !HAVE_CMSGCRED */
         GAM_DEBUG(DEBUG_INFO,
                   "Socket credentials not supported on this OS\n");
@@ -786,7 +794,12 @@
     GIOChannel *socket = NULL;
     int sock;
     int client = -1;
+#ifdef __INTERIX
+    // only, on interix3, socklen_t is not typedef'd.
+    int client_addrlen;
+#else
     socklen_t client_addrlen;
+#endif
     struct sockaddr client_addr;
 
     sock = g_io_channel_unix_get_fd(server);
