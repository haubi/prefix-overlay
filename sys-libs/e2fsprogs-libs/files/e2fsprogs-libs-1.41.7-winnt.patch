diff -ru -x '*.P*o' e2fsprogs-libs-1.41.7.orig/Makefile.in e2fsprogs-libs-1.41.7/Makefile.in
--- e2fsprogs-libs-1.41.7.orig/Makefile.in	2009-09-23 16:10:55 +0200
+++ e2fsprogs-libs-1.41.7/Makefile.in	2009-09-23 16:17:49 +0200
@@ -14,7 +14,7 @@
 @UUID_CMT@UUID_LIB_SUBDIR= lib/uuid
 @BLKID_CMT@BLKID_LIB_SUBDIR= lib/blkid
 
-LIB_SUBDIRS=lib/et lib/ss lib/e2p $(UUID_LIB_SUBDIR) lib/ext2fs $(BLKID_LIB_SUBDIR) intl
+LIB_SUBDIRS=lib/et lib/e2p $(UUID_LIB_SUBDIR) lib/ext2fs intl
 PROG_SUBDIRS=e2fsck $(DEBUGFS_DIR) misc $(RESIZE_DIR) tests/progs po
 SUBDIRS=util $(LIB_SUBDIRS) $(PROG_SUBDIRS) tests
 
diff -ru -x '*.P*o' e2fsprogs-libs-1.41.7.orig/lib/Makefile.elf-lib e2fsprogs-libs-1.41.7/lib/Makefile.elf-lib
--- e2fsprogs-libs-1.41.7.orig/lib/Makefile.elf-lib	2009-09-23 16:10:55 +0200
+++ e2fsprogs-libs-1.41.7/lib/Makefile.elf-lib	2009-09-23 16:15:14 +0200
@@ -24,7 +24,7 @@
 
 $(ELF_LIB): $(OBJS)
 	@echo "	GEN_ELF_SOLIB $(ELF_LIB)"
-	@(cd elfshared; $(CC) --shared -o $(ELF_LIB) $(LDFLAGS) \
+	@(cd elfshared; $(CC) -shared -o $(ELF_LIB) $(LDFLAGS) \
 		-Wl,-soname,$(ELF_SONAME) $(OBJS) $(ELF_OTHER_LIBS))
 	@$(MV) elfshared/$(ELF_LIB) .
 	@$(RM) -f ../$(ELF_LIB) ../$(ELF_IMAGE).so ../$(ELF_SONAME)
diff -ru -x '*.P*o' e2fsprogs-libs-1.41.7.orig/lib/et/error_message.c e2fsprogs-libs-1.41.7/lib/et/error_message.c
--- e2fsprogs-libs-1.41.7.orig/lib/et/error_message.c	2009-09-23 16:10:55 +0200
+++ e2fsprogs-libs-1.41.7/lib/et/error_message.c	2009-09-23 16:12:29 +0200
@@ -175,8 +175,10 @@
  */
 static char *safe_getenv(const char *arg)
 {
+#ifndef _WIN32
 	if ((getuid() != geteuid()) || (getgid() != getegid()))
 		return NULL;
+#endif
 #if HAVE_PRCTL
 	if (prctl(PR_GET_DUMPABLE, 0, 0, 0, 0) == 0)
 		return NULL;
@@ -226,11 +228,13 @@
 		debug_f = fopen("/dev/tty", "a");
 	if (debug_f) {
 		fd = fileno(debug_f);
+#ifndef _WIN32
 		if (fd >= 0) {
 			flags = fcntl(fd, F_GETFD);
 			if (flags >= 0)
 				fcntl(fd, F_SETFD, flags | FD_CLOEXEC);
 		}
+#endif
 	} else
 		debug_mask = DEBUG_INIT;
 
diff -ru -x '*.P*o' e2fsprogs-libs-1.41.7.orig/lib/uuid/gen_uuid.c e2fsprogs-libs-1.41.7/lib/uuid/gen_uuid.c
--- e2fsprogs-libs-1.41.7.orig/lib/uuid/gen_uuid.c	2009-09-23 16:10:55 +0200
+++ e2fsprogs-libs-1.41.7/lib/uuid/gen_uuid.c	2009-09-23 16:34:58 +0200
@@ -41,6 +41,11 @@
 #ifdef _WIN32
 #define _WIN32_WINNT 0x0500
 #include <windows.h>
+
+#ifdef __PARITY__
+# include <io.h>
+# include <sys/locking.h>
+#endif
 #define UUID MYUUID
 #endif
 #include <stdio.h>
@@ -57,7 +62,9 @@
 #ifdef HAVE_SYS_TIME_H
 #include <sys/time.h>
 #endif
-#include <sys/wait.h>
+#ifndef _WIN32
+# include <sys/wait.h>
+#endif
 #include <sys/stat.h>
 #ifdef HAVE_SYS_FILE_H
 #include <sys/file.h>
@@ -109,7 +116,7 @@
 THREAD_LOCAL unsigned short jrand_seed[3];
 #endif
 
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__PARITY__)
 static void gettimeofday (struct timeval *tv, void *dummy)
 {
 	FILETIME	ftime;
@@ -126,7 +133,9 @@
 	tv->tv_sec = n / 1000000;
 	tv->tv_usec = n % 1000000;
 }
+#endif
 
+#ifdef _WIN32
 static int getuid (void)
 {
 	return 1;
@@ -311,15 +320,31 @@
 	THREAD_LOCAL FILE		*state_f;
 	THREAD_LOCAL uint16_t		clock_seq;
 	struct timeval 			tv;
+	#ifndef _WIN32
 	struct flock			fl;
+	#endif
 	uint64_t			clock_reg;
 	mode_t				save_umask;
 	int				len;
 
 	if (state_fd == -2) {
 		save_umask = umask(0);
+		#ifndef _WIN32
 		state_fd = open("/var/lib/libuuid/clock.txt",
 				O_RDWR|O_CREAT, 0660);
+		#else
+		{
+			char tmp[260];
+			if(!GetTempPath(260, tmp)) {
+				tmp[0] = '\\';
+				tmp[1] = '\0';
+			}
+
+			strcat(tmp, "uuid_clock.txt");
+
+			state_fd = open(tmp, O_RDWR|O_CREAT, 0660);
+		}
+		#endif
 		(void) umask(save_umask);
 		state_f = fdopen(state_fd, "r+");
 		if (!state_f) {
@@ -327,13 +352,16 @@
 			state_fd = -1;
 		}
 	}
+	#ifndef _WIN32
 	fl.l_type = F_WRLCK;
 	fl.l_whence = SEEK_SET;
 	fl.l_start = 0;
 	fl.l_len = 0;
 	fl.l_pid = 0;
+	#endif
 	if (state_fd >= 0) {
 		rewind(state_f);
+		#ifndef _WIN32
 		while (fcntl(state_fd, F_SETLKW, &fl) < 0) {
 			if ((errno == EAGAIN) || (errno == EINTR))
 				continue;
@@ -342,6 +370,13 @@
 			state_fd = -1;
 			break;
 		}
+		#else
+		if(_locking(state_fd, _LK_LOCK, 1) < 0) {
+			fclose(state_f);
+			close(state_fd);
+			state_fd = -1;
+		}
+		#endif
 	}
 	if (state_fd >= 0) {
 		unsigned int cl;
@@ -400,13 +435,20 @@
 			      "clock: %04x tv: %016lu %08lu adj: %08d\n",
 			      clock_seq, last.tv_sec, last.tv_usec, adjustment);
 		fflush(state_f);
-		if (ftruncate(state_fd, len) < 0) {
+		#ifndef _WIN32
+		if (ftruncate(state_fd, len) < 0)
+		#endif
+		{
 			fprintf(state_f, "                   \n");
 			fflush(state_f);
 		}
 		rewind(state_f);
+		#ifndef _WIN32
 		fl.l_type = F_UNLCK;
 		fcntl(state_fd, F_SETLK, &fl);
+		#else
+		_locking(state_fd, _LK_UNLCK, 1);
+		#endif
 	}
 
 	*clock_high = clock_reg >> 32;
diff -ru -x '*.P*o' e2fsprogs-libs-1.41.7.orig/lib/uuid/tst_uuid.c e2fsprogs-libs-1.41.7/lib/uuid/tst_uuid.c
--- e2fsprogs-libs-1.41.7.orig/lib/uuid/tst_uuid.c	2009-09-23 16:10:55 +0200
+++ e2fsprogs-libs-1.41.7/lib/uuid/tst_uuid.c	2009-09-23 16:36:05 +0200
@@ -41,6 +41,8 @@
 #include <stdio.h>
 #include <stdlib.h>
 
+#include <sys/time.h>
+
 #include "uuid.h"
 
 static int test_uuid(const char * uuid, int isValid)
